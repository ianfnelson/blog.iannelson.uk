<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>TFS on Ian Nelson</title>
    <link>https://blog.iannelson.uk/tags/tfs/</link>
    <description>Recent content in TFS on Ian Nelson</description>
    <generator>Hugo -- 0.146.6</generator>
    <language>en</language>
    <lastBuildDate>Sat, 26 Apr 2025 22:25:42 +0100</lastBuildDate>
    <atom:link href="https://blog.iannelson.uk/tags/tfs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TFS: Using Alternative Diff/Merge Tools</title>
      <link>https://blog.iannelson.uk/tfs-alternative-diff-merge-tools/</link>
      <pubDate>Tue, 19 May 2009 07:05:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/tfs-alternative-diff-merge-tools/</guid>
      <description>&lt;p&gt;There are many things I love about Team Foundation Server, but the supplied diff/merge tool is not one of them. It is – how can I put this? – somewhat basic. Indeed, I’ve heard tell of people going out of their way to avoid merges purely because they find the process so clunky.&lt;/p&gt;
&lt;p&gt;Here’s the good news – you can easily configure TFS to use a different, third-party, diff/merge tool, perhaps the one you’ve grown to know and love over many years of happy software development using other SCM products. Maybe you like &lt;a href=&#34;http://winmerge.org/&#34;&gt;WinMerge&lt;/a&gt;, or love &lt;a href=&#34;http://tortoisesvn.tigris.org/TortoiseMerge.html&#34;&gt;TortoiseMerge&lt;/a&gt;. Perhaps you’re like my friend &lt;a href=&#34;http://www.johnsadventures.com&#34;&gt;John&lt;/a&gt; and swear by &lt;a href=&#34;http://www.sourcegear.com/diffmerge/downloads.html&#34;&gt;SourceGear DiffMerge&lt;/a&gt;. Or maybe, like me, you’re a &lt;a href=&#34;http://www.scootersoftware.com/&#34;&gt;Beyond Compare&lt;/a&gt; fanboy. No problem, they can all be used by TFS. Here’s how:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>There are many things I love about Team Foundation Server, but the supplied diff/merge tool is not one of them. It is – how can I put this? – somewhat basic. Indeed, I’ve heard tell of people going out of their way to avoid merges purely because they find the process so clunky.</p>
<p>Here’s the good news – you can easily configure TFS to use a different, third-party, diff/merge tool, perhaps the one you’ve grown to know and love over many years of happy software development using other SCM products. Maybe you like <a href="http://winmerge.org/">WinMerge</a>, or love <a href="http://tortoisesvn.tigris.org/TortoiseMerge.html">TortoiseMerge</a>. Perhaps you’re like my friend <a href="http://www.johnsadventures.com">John</a> and swear by <a href="http://www.sourcegear.com/diffmerge/downloads.html">SourceGear DiffMerge</a>. Or maybe, like me, you’re a <a href="http://www.scootersoftware.com/">Beyond Compare</a> fanboy. No problem, they can all be used by TFS. Here’s how:</p>
<ul>
<li>Open up the Visual Studio options (<strong>Tools</strong> –&gt; <strong>Options</strong>).</li>
<li>Expand the <strong>Source Control</strong> –&gt; <strong>Visual Studio Team Foundation Server</strong> section.</li>
<li>Click the <strong>Configure User Tools…</strong> button:</li>
</ul>
<p><img loading="lazy" src="https://blogstouks01.z33.web.core.windows.net/2023/08/dm1_4.png"></p>
<ul>
<li>Click the <strong>Add…</strong> button to set up a new file extension operation:</li>
</ul>
<p><img loading="lazy" src="https://blogstouks01.z33.web.core.windows.net/2023/08/dm2_2.png"></p>
<ul>
<li>Set up a <strong>Compare</strong> operation to run against all files (extension of *:</li>
</ul>
<p><img loading="lazy" src="https://blogstouks01.z33.web.core.windows.net/2023/08/dm3_3.png"></p>
<ul>
<li>Repeat the process to add a <strong>Merge</strong> operation to run against all file extensions.</li>
</ul>
<p>At this point, you’re probably thinking “wooah, what do those argument parameters mean? How do I know what to enter?”. MSDN won’t help you out (“<a href="http://msdn.microsoft.com/en-us/library/ms181446.aspx">type any arguments that your tool requires</a>” – thanks for that!).</p>
<p>Fortunately <a href="http://blogs.msdn.com/jmanning/default.aspx">James Manning</a> has posted <a href="http://blogs.msdn.com/jmanning/articles/535573.aspx">a blog article</a> which not only explains what the argument parameters mean, but also suggests recommended parameters for various popular tools, including those mentioned at the beginning of this post. Thanks, James!</p>
<p>Voila! <strong>OK</strong> your way back out of the dialog boxes, and your Compares and Merges will now be displayed using your favourite Diff/Merge tool. Feel your productivity and confidence soar!</p>
]]></content:encoded>
    </item>
    <item>
      <title>On 64-bit TFS, Virtualization, and Conchango SCRUM</title>
      <link>https://blog.iannelson.uk/on-64-bit-tfs-virtualization-and-conchango-scrum/</link>
      <pubDate>Fri, 23 Jan 2009 12:01:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/on-64-bit-tfs-virtualization-and-conchango-scrum/</guid>
      <description>&lt;p&gt;Earlier this week I picked up a hire car and headed over to deepest Cheshire to install an instance of Team Foundation Server 2008 for a client. Before setting off, I tried to make sure that all the prerequisites were in place – i.e. that there was a suitably-specced server available for use, which was connected to the domain, that all the necessary service accounts were created, and firewall ports opened, etc.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Earlier this week I picked up a hire car and headed over to deepest Cheshire to install an instance of Team Foundation Server 2008 for a client. Before setting off, I tried to make sure that all the prerequisites were in place – i.e. that there was a suitably-specced server available for use, which was connected to the domain, that all the necessary service accounts were created, and firewall ports opened, etc.</p>
<p>So, I kicked myself somewhat on arrival when I realised that the server was running a 64-bit OS, and remembered that the application tier of TFS only supports 32-bit. Doh! This blog entry is partly intended to prevent me from ever forgetting that again.</p>
<p>However, it all turned out fine in the end. There were other reasons why I didn’t relish the prospect of installing TFS on the box in question – namely that it was also being used as a domain controller and SQL Server (this isn’t as bad as it sounds – the server exists solely to provide an R&amp;D development environment for a new project with demanding timescales). So, the solution I opted for was to install <a href="http://www.microsoft.com/windowsserversystem/virtualserver/">Virtual Server 2005 R2</a>, and then install TFS on a virtual machine running a 32-bit OS. This worked well, as the host server was massively over-specced for the tasks at hand.</p>
<p>I think virtualization is a technology whose time has really come, it certainly makes it very easy to set up development environments like this one, where the number of servers required exceeds the number of physical servers available. Occasionally I come across posts on the web from people who’re trying to install, say, TFS, SQL Server, SharePoint, and Exchange all on the same server, and getting into a pickle. Don’t do it. Embrace virtualization. Developers know all about <a href="http://en.wikipedia.org/wiki/Separation_of_concerns">separation of concerns</a> when designing software solutions – try the equivalent approach when configuring your development servers.</p>
<p>As an aside – the team chose to use <a href="http://scrumforteamsystem.com/en/default.aspx">Conchango’s SCRUM for Team System process template</a>, which seems to work very well, and I recommend it for anyone running a project using the SCRUM methodology. Remember, TFS is process-agnostic, you’re not limited to using MSF.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
