<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Conferences on Ian Nelson</title>
    <link>https://blog.iannelson.uk/tags/conferences/</link>
    <description>Recent content in Conferences on Ian Nelson</description>
    <generator>Hugo -- 0.146.6</generator>
    <language>en</language>
    <lastBuildDate>Sun, 04 May 2025 17:45:45 +0100</lastBuildDate>
    <atom:link href="https://blog.iannelson.uk/tags/conferences/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Software Architect 2007</title>
      <link>https://blog.iannelson.uk/software-architect-2007/</link>
      <pubDate>Sun, 17 Jun 2007 18:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/software-architect-2007/</guid>
      <description>&lt;p&gt;Last week I had the pleasure of spending a few days in London attending the &lt;a href=&#34;http://www.software-architect.co.uk&#34;&gt;Software Architect 2007&lt;/a&gt; conference at the Barbican centre. It was a good conference, providing me with some useful and interesting new ideas and food for thought, whilst confirming that our team at &lt;a href=&#34;http://www.marshalls.co.uk&#34;&gt;Marshalls&lt;/a&gt; are generally going about things in “the right way”, which is nice.&lt;/p&gt;
&lt;p&gt;Looking through my notes, the main themes that kept recurring within the different presentations that I attended were:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Last week I had the pleasure of spending a few days in London attending the <a href="http://www.software-architect.co.uk">Software Architect 2007</a> conference at the Barbican centre. It was a good conference, providing me with some useful and interesting new ideas and food for thought, whilst confirming that our team at <a href="http://www.marshalls.co.uk">Marshalls</a> are generally going about things in “the right way”, which is nice.</p>
<p>Looking through my notes, the main themes that kept recurring within the different presentations that I attended were:</p>
<ul>
<li>Avoid coupling at all costs. Use interfaces, contracts and facades to decouple components. Avoid directly referencing vendor’s class libraries or infrastructure libraries.</li>
<li>Appreciate the impact of small decisions which can eventually have a big impact on the overall architecture.</li>
<li>Devote more time and consideration to designing interfaces, contracts and public APIs (which are difficulty to change retrospectively), than private implementations which are relatively simple to change.</li>
</ul>
<p>These issues kept coming up again and again – most notably in talks by Kevlin Henney on “The Selfish Object” and Ralf Westphal on “True Component Orientation”, but also to an extent in some of Dave Wheeler’s demonstration of how to use some of the Gang of Four design patterns in .NET. So, it amazed me that a number of my fellow delegates kept raising their hands and asking questions which invariably began “Yeah, but why can’t I just…”, followed by suggestions which effectively seemed to boil down to creating hardcoded, inflexible solutions! To say that this was supposedly a conference of architects, even relatively simple concepts such as Reflection, Polymorphism and Generics seemed to be lost on some people, who apparently would be more comfortable maintaining massive switch statements for the rest of eternity!</p>
<p>This is one of the issues I have with the XP rules – I don’t believe that <a href="http://www.extremeprogramming.org/rules/simple.html">doing the simplest thing that could possibly work</a> is a good idea, at least not when creating public APIs and interfaces. Some forethought is necessary in order to architect loosely coupled solutions that will allow continued flexibility and agility when faced with inevitable change requests. I’m not arguing for the <a href="http://www.extremeprogramming.org/rules/early.html">premature development of functionality that may never be required</a>, but interfaces, APIs, inheritance models and database models are a right royal pain to change at a later date and in my experience, upfront design in these areas pays dividends.</p>
<p>Oh, my other issue with the XP rules is the notion of <a href="http://www.extremeprogramming.org/rules/collective.html">collective code ownership</a> – I’m not precious about my code (honest), but there are inevitably areas of specialism (in terms of technology and business knowledge) in which I seek to focus my energies, and other areas that I don’t care for, or wish to maintain. We can’t all understand everything about every system, and it’s foolish to pretend that this is the case. Allowing or requiring an entire team to be comfortable maintaining the whole codebase is likely to prohibit anybody learning very much about anything, and even with rigorously enforced coding standards and comprehensive unit tests can lead to an unfortunate swiss cheese / patchwork quilt effect. All IMHO, of course.</p>
<p>My favourite session of the conference was by <a href="http://www.ralfw.de">Ralf Westphal</a>, who clearly and concisely (his English is better than that of many native speakers!) explained the benefits of using Contract First Development and a microkernel approach to remove component dependencies and development bottlenecks. It’s an approach that I can’t wait to try.</p>
<p>One of the other things that pleased me about the conference was the realisation that we at Marshalls are (especially for such a stable, old-economy company), way ahead of the pack in terms of technology – whilst other delegates I spoke with are still using earlier versions of .NET, or even still on VB6 / Win32 API, we continue to make appropriate use of the latest offerings from Redmond.</p>
<p>A few other observations from my days in London:</p>
<ul>
<li>Trying to change from the Circle to Piccadilly lines at King’s Cross at rush hour involves crossing a packed concourse buzzing with hardened commuters that brought to mind that Zurich insurance TV advert which shows futuristic cars on traffic signal-free intersections narrowly avoiding collisions thanks to automated guidance systems!</li>
<li>Unlike at MSDN events (where all speakers use vanilla installations of Vista/XP and search Windows Live using IE7), there’s a great variety of hardware and software in popular use now – I witnessed presentations on Dell, Sony Vaio, and MacBook (running both OS X and Vista, through BootCamp), with some highly-configured operating systems, and every presenter used Safari or Firefox – no IE in sight. Didn’t see any Ubuntu, mind.</li>
<li>Section 20 of the <a href="http://www.opsi.gov.uk/ACTS/acts1997/97022--f.htm#20">Architect’s Act 1997</a> prohibits the use of the “Software Architect” job title. Curiously, “Golf Course Architect” is fine.</li>
<li>In all respects, central London is about as far removed from the Isle of Mull (where I was a week previously) as it’s possible to imagine. Increasingly so, it really does come across as a kind of city state, a world city, with a cosmopolitan feeling quite unlike anywhere else in the UK.</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>MSDN Technical Roadshow 2007</title>
      <link>https://blog.iannelson.uk/msdn-technical-roadshow-2007/</link>
      <pubDate>Mon, 12 Mar 2007 22:03:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/msdn-technical-roadshow-2007/</guid>
      <description>&lt;p&gt;I’m off to the &lt;a href=&#34;http://www.microsoft.com/uk/techroadshow2007/msdn/default.mspx&#34;&gt;MSDN Technical roadshow&lt;/a&gt; in Harrogate tomorrow, and am actually really looking forward to it this time. These events are free, so always well worth attending when they’re local, but some years are certainly better than others – it mostly depends on the material being covered. I remember one year circa 2003-4, when .NET was well established, but before the Whidbey release, so the majority of the day was effectively just a sales pitch covering elementary .NET concepts, presumably for those laggards who hadn’t yet made the great leap from VB6. Another data-binding demo, anybody?  Yawn.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I’m off to the <a href="http://www.microsoft.com/uk/techroadshow2007/msdn/default.mspx">MSDN Technical roadshow</a> in Harrogate tomorrow, and am actually really looking forward to it this time. These events are free, so always well worth attending when they’re local, but some years are certainly better than others – it mostly depends on the material being covered. I remember one year circa 2003-4, when .NET was well established, but before the Whidbey release, so the majority of the day was effectively just a sales pitch covering elementary .NET concepts, presumably for those laggards who hadn’t yet made the great leap from VB6. Another data-binding demo, anybody?  Yawn.</p>
<p>By contrast, this time round there’s no shortage of exciting potential topics, and as I’ve mentioned recently, I’ve been having difficulty making time to get stuck into learning some of the new technologies that are on the horizon. So the opportunity of a day out watching some powerpoint presentations, demos, and trying to soak up an understanding of this stuff really appeals to me – is that sad?!</p>
<p>The two sessions I’m most looking forward to are <a href="http://www.danielmoth.com/Blog/">Daniel Moth</a> covering LINQ and other forthcoming language enhancements in the Orcas release, and <a href="http://blogs.msdn.com/mikeormond/default.aspx">Mike Ormond</a>&rsquo;s session on AJAX development. Should be good.</p>
<p>Oh, entertainingly, someone found my blog this week by Googling for <a href="http://www.google.com/search?q=%22msdn&#43;event%22&#43;dress&#43;code&amp;">“msdn event” dress code</a> – my advice is to go casual; stick to the usual geek staples of t-shirt with jeans or combats and you can’t go far wrong!</p>
]]></content:encoded>
    </item>
    <item>
      <title>eXtreme .NET</title>
      <link>https://blog.iannelson.uk/extreme-net/</link>
      <pubDate>Sat, 18 Jun 2005 21:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/extreme-net/</guid>
      <description>&lt;p&gt;Up at 0500 yesterday and onto the early GNER Mallard down to that London town for the MSDN briefing on eXtreme programming with .NET. It was pleasant not to be driving for a change, and speeding through the Yorkshire countryside early on a midsummer morning was very relaxing – what a stark contrast with the hot crowded tube that I had to catch on arrival to the big smoke. Three stops down to Oxford Circus seemed to last as long as the entire preceeding train journey. How people do this every single day I do not know..&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Up at 0500 yesterday and onto the early GNER Mallard down to that London town for the MSDN briefing on eXtreme programming with .NET. It was pleasant not to be driving for a change, and speeding through the Yorkshire countryside early on a midsummer morning was very relaxing – what a stark contrast with the hot crowded tube that I had to catch on arrival to the big smoke. Three stops down to Oxford Circus seemed to last as long as the entire preceeding train journey. How people do this every single day I do not know..</p>
<p>Anyway, I digress. The tech briefing was excellent, a full day’s set of presentations on eXtreme development practices by the very erudite and engaging <a href="http://www.roodyn.com/">Dr Neil Roodyn</a>, with additional demos by some of the MSDN UK guys. During questioning, nobody in the audience was arguing against using the XP practices espoused, in fact most questioners simply wanted to know how to get project managers and business leaders bought in to the ideas. The general consensus was that suits and customers don’t want to hear about pair programming and <a href="http://www.testdriven.com/">TDD</a>, they want to see devs working on coding new functionality, which is obviously frustrating for those of us cutting the code. Hopefully sessions like the one on Friday will help to inspire a groundswell of enthusiasm for agile practices amongst developers and team leads which the business leaders will eventually be unable to ignore. Dr Neil suggested that we don’t try to immediately enforce all 12 XP principles in our workplaces, but start using those which work for us, basically those which we can sneak in under the managements noses!  Nobody can stop you from writing unit tests and adopting a TDD approach to your coding, and may only start asking questions when they see how much more productive you’re becoming, and how fewer bugs are found in your code. After all, producing quality code is your job, and nobody will stop you from doing your job well.</p>
<hr>
<p>While I remember, some of the books mentioned by Neil were:</p>
<ul>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0201604566">&ldquo;Software For Your Head&rdquo; by Jim McCarthy</a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0349113467">&ldquo;The Tipping Point&rdquo; by Malcolm Gladwell</a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/1587991845">&ldquo;Fooled By Randomness&rdquo; by Nassim Nicholas Taleb</a></li>
</ul>
<p>and I have noted down that I should find the time to visit:</p>
<ul>
<li><a href="http://www.microsoft.com/uk/msdn/postevents">http://www.microsoft.com/uk/msdn/postevents</a> – for a copy of the slides</li>
<li><a href="http://agilealliance.com">http://agilealliance.com</a></li>
<li><a href="http://www.xpertise.co.uk">http://www.xpertise.co.uk</a></li>
</ul>
]]></content:encoded>
    </item>
  </channel>
</rss>
