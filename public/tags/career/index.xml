<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Career on Ian Nelson</title>
    <link>https://blog.iannelson.uk/tags/career/</link>
    <description>Recent content in Career on Ian Nelson</description>
    <generator>Hugo -- 0.146.6</generator>
    <language>en</language>
    <lastBuildDate>Sun, 04 May 2025 17:45:45 +0100</lastBuildDate>
    <atom:link href="https://blog.iannelson.uk/tags/career/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Going For It</title>
      <link>https://blog.iannelson.uk/going-for-it/</link>
      <pubDate>Mon, 14 Jan 2008 12:01:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/going-for-it/</guid>
      <description>&lt;p&gt;I’ve never been a fan of those &lt;a href=&#34;http://www.allposters.com/-st/Motivational-Posters_c12920_p6_.htm&#34;&gt;motivational posters&lt;/a&gt; that you see on office walls (usually in sales or marketing departments) that attempt to depict a word like “Opportunity” or “Teamwork” with a single image, usual of some nature scene or a lone individual rising above the odds to achieve a difficult goal. To my mind they always look a bit facile, glib and superficial. “Destiny” equates to a holiday villa on the Maldives?  “Integrity” is a Lion? “Success” appears to involve hang-gliding off towards the ocean in an action which brings to mind Reginald Perrin?! I demand more thought and more words from my motivational office decorations!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I’ve never been a fan of those <a href="http://www.allposters.com/-st/Motivational-Posters_c12920_p6_.htm">motivational posters</a> that you see on office walls (usually in sales or marketing departments) that attempt to depict a word like “Opportunity” or “Teamwork” with a single image, usual of some nature scene or a lone individual rising above the odds to achieve a difficult goal. To my mind they always look a bit facile, glib and superficial. “Destiny” equates to a holiday villa on the Maldives?  “Integrity” is a Lion? “Success” appears to involve hang-gliding off towards the ocean in an action which brings to mind Reginald Perrin?! I demand more thought and more words from my motivational office decorations!</p>
<p>For many many years, blu-tacked to my monitor at home has been an <a href="http://wilmergraphics.com/cgi-local/catalog/hazel.cgi/hzpi/u/HzSt01131116140m1117160U0n100m0m0n1513161710/hazel.cgi?action=serve&amp;item=categories/titles/inspiration1.htm#247">inspirational “wallet stuffer” by Bruce B. Wilmer</a> which was given to me by my mum. It’s a short poem entitled “Go For It!” which begins:</p>
<blockquote>
<p>“Shake off your doubts and then go for it.<br>
Check out your options and act.<br>
Find an approach to the future,<br>
And turn today’s dreams into fact.”</p></blockquote>
<p>I’ve seen those words on a daily basis for far too long. Today is the day that I stop simply reading them, and start acting upon them.</p>
<p>After much deliberation, I’ve handed in my notice at Marshalls and begun setting myself up as a contractor. I have been mulling over the idea of going freelance for a long time, but have always had other distractions to worry about. Now that I’m married, settled in a new house, have obtained UK residency for Jocelyn, and baby Ben is settling down nicely, I figure that my life is finally getting to be stable and prosaic, and I should take this opportunity to stir things up a bit by handing in my notice with no certainty of regular (or indeed any) future income!</p>
<p>I am filled with a heady mixture of trepidation and excitement. More details will, undoubtedly, appear on this blog in due course. Wish me luck!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Ian Nelson, MCSD.Net</title>
      <link>https://blog.iannelson.uk/ian-nelson-mcsd-net/</link>
      <pubDate>Sun, 11 Feb 2007 16:02:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/ian-nelson-mcsd-net/</guid>
      <description>&lt;p&gt;I am now a Microsoft Certified Solution Developer in .NET 1.x technologies. This is a qualification that I’ve been working towards on and (more often than not) off for the past four years or so. It’s not really the case that the exams were super-hard, just that it took occasional motivation to get round to taking them!&lt;/p&gt;
&lt;p&gt;So, was it worth it?  Did I learn anything en route?  Did the exams boost my employability?  Would I be more inclined to employ someone with an MCSD than an applicant without?&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I am now a Microsoft Certified Solution Developer in .NET 1.x technologies. This is a qualification that I’ve been working towards on and (more often than not) off for the past four years or so. It’s not really the case that the exams were super-hard, just that it took occasional motivation to get round to taking them!</p>
<p>So, was it worth it?  Did I learn anything en route?  Did the exams boost my employability?  Would I be more inclined to employ someone with an MCSD than an applicant without?</p>
<p>Stepping back in time a little, my first real conversation about .Net was in November 2000, at a job interview for a position with <a href="http://www.ioko.com">ioko</a> (then Infocom), when <a href="http://www.farend.co.uk/">Matthew</a> asked me something vague along the lines of “what did I understand regarding Microsoft’s .NET initiative?”  I honestly can’t remember my answer, but it can’t have utterly sucked as I got the job, and started the following month.</p>
<p>A year later, December 2001, and I attended the two-day .NET launch at the London Hilton, at which a certain Bill Gates gave a keynote speech explaining why .NET was the future. It was one of the few sessions at that conference which didn’t go over my head – the rest utterly blew my mind, and made me feel extremely ignorant – me with my VB6 and ASP3 skills!</p>
<p>Another year passed, and a quiet market meant that I still hadn’t had any opportunity to cut my teeth on any .NET projects. But crucially (and in retrospect foolishly), I also hadn’t put any personal effort into learning these important new technologies. So, on 3rd December 2002, I ordered some self-study books for exams 70-315 and 70-316. Apparently expecting to learn by osmosis, I then popped them on my bookshelf, and headed off to Australia to visit my friends Bruce and Suzanne.</p>
<p>When I got back from Down Under, in January 2003, my job at ioko was not waiting for me. That quiet market wasn’t getting any noisier, a cull had to occur, and, since I didn’t have any proven .Net skills…</p>
<p>Redundancy wasn’t a pleasant experience, and I wanted to get back into the world of work ASAP (after all, the mortgage wasn’t going to pay itself), so I quickly took up what I always expected to be a stop-gap VB6/ASP job – the pay wasn’t great but it beat daytime TV, spamming the employment agencies and constantly refreshing jobserve.com. It was at this point in time I realised that the only person with the capability to improve my skills and career prospects was myself. For too long I had equated career success to “luck” in being placed on the right projects. Now it was time for me to invest some time and energy learning those all-important .NET skills that I’d been reading about for the past few years.</p>
<p>For much of the long hot summer of 2003, I burnt the midnight oil developing a three-tier web application for the investment club of which I was the treasurer at that time. This served a number of purposes:  Of course, the website was useful to those who had access to it, but more importantly to me, it provided a way to develop the .NET skills that I saw as being the keys to a better job. Now, the obvious shortcoming of using a personal project as a way to learn a set of technologies is that you’re unlikely to stumble across those enterprise-y features in the Framework that are of particular use in business scenarios. So, I supplemented my late-night hacking sessions (which incidentally resulted in my neighbours complaining about my playing pop music at 2am) with some diligent studying of the 70-306 guide that I’d bought the previous winter. On 14th June 2003, after spending around £80 of my own cash to take the exam, I passed that test, becoming an MCP for the first time.</p>
<p>Was it worth it?  I think so. My efforts meant I got a good grounding in aspects of the technologies that I would not otherwise have stumbled across, and it gave me something concrete and .NET-related to put on my CV (effectively saying “yeah, I know I haven’t worked with these technologies professionally, but that doesn’t mean I don’t understand them”). A few months later, as the market started to gradually pick up again, I got the job I still have – as a .NET developer for Marshalls. I’ve no doubt that the MCP exam helped to at least get my foot in the door.</p>
<p>I took the remaining four exams at my leisure over the next few years. Whilst studying for the SQL Server (70-229), Web Services and Server Components (70-320) and Requirements and Architectures (70-300) exams, I always found myself learning several things that I hadn’t picked up on the job – in that sense at least, I think undertaking the exams was worthwhile. The final exam I took was the Windows App exam (70-316), and this was a bit of a stroll in all honesty, after the previous four exams and three year’s of .NET experience.</p>
<p>Would I be more inclined to employ someone with an MCSD than an applicant without?  I think the qualification helps greatly in identifying potential candidates, but there are many other factors that make a good developer that aren’t covered in any depth by these exams. Design Patterns and OOP concepts in general were not really tested, even on the 70-300 exam. Knowledge of IIS was not covered on 70-306 – I guess it’s assumed that this is the realm of the Systems Administrator rather than the coder, but in reality (especially in small teams), a good ASP.NET developer needs an intimate understanding of how their web server works and is configured. What about covering topics such as source control, automated builds, and release management?  Issues such as unit testing and the benefits of code reviews were mentioned in the 70-300 exam, but there’s a difference between knowing the theory and applying this in practice. An MCSD qualification certainly demonstrates the former, but a few searching questions at interview are still required to prove the latter.</p>
<p>So what’s next for me?  Upgrading to the “<a href="http://www.microsoft.com/learning/developer/eadev.mspx">MCPD: Enterprise Applications Developer</a>” qualification is the obvious path, and I’ll probably do so in due course, but right now I’d like to like to spend more time getting to grips with SQL Server 2005 by taking the relevant <a href="http://www.microsoft.com/learning/mcp/mcts/sql/default.mspx">MCTS exam (70-431)</a>. If that goes well, then maybe I’ll continue onto the <a href="http://www.microsoft.com/learning/mcp/mcitp/dbdev/default.mspx">MCITP: DB Dev</a> qualification. We’ll see.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Software Development Books</title>
      <link>https://blog.iannelson.uk/software-development-books/</link>
      <pubDate>Mon, 13 Jun 2005 20:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/software-development-books/</guid>
      <description>&lt;p&gt;Elizabeth Keogh has been blogging her &lt;a href=&#34;http://www.livejournal.com/users/sirenian/19432.html&#34;&gt;advice for software-developer apprentices&lt;/a&gt;, and recommends buying and reading a selection of good software development books. I think this is sound advice – personally I felt that my career and abilities starting taking off when I stopped reading tech-specific Wrox tomes that were obsolete within six months of publication and started buying timeless Addison-Wesley hardbacks. Why so many newbie coders insist on rediscovering solutions to well-known problems instead of leveraging the knowledge of our programming forebears is beyond me, but most of us have behaved in this way at some point. Give yourself a leg-up and read some decent software design books.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Elizabeth Keogh has been blogging her <a href="http://www.livejournal.com/users/sirenian/19432.html">advice for software-developer apprentices</a>, and recommends buying and reading a selection of good software development books. I think this is sound advice – personally I felt that my career and abilities starting taking off when I stopped reading tech-specific Wrox tomes that were obsolete within six months of publication and started buying timeless Addison-Wesley hardbacks. Why so many newbie coders insist on rediscovering solutions to well-known problems instead of leveraging the knowledge of our programming forebears is beyond me, but most of us have behaved in this way at some point. Give yourself a leg-up and read some decent software design books.</p>
<p>If I had to make a list, the books I would currently prescribe for new graduates entering a career of enterprise OO development would be:</p>
<ol>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0735619670"><em>Code Complete</em></a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0321125215"><em>Domain Driven Design</em></a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0201485672"><em>Refactoring</em></a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0201633612"><em>Design Patterns</em></a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0321127420"><em>Patterns of Enterprise Application Architecture</em></a></li>
</ol>
<p>and if I was feeling cynical I’d perhaps also advise a copy of <a href="http://www.amazon.co.uk/exec/obidos/ASIN/1590590082"><em>The Career Programmer – Guerilla Tactics for an Imperfect World</em></a> be kept stashed in a laptop bag…</p>
]]></content:encoded>
    </item>
    <item>
      <title>Ideal World / Real World</title>
      <link>https://blog.iannelson.uk/ideal-world-real-world/</link>
      <pubDate>Wed, 01 Sep 2004 09:09:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/ideal-world-real-world/</guid>
      <description>&lt;p&gt;A major project I’ve been working on for the last ten months has just gone live, giving me some time recently to take stock, do a bit of R&amp;amp;D, and catch up on some reading. I’ve been reflecting on how to approach things better in the future, and to this end, I’ve just finished two very different books about the software development process.&lt;/p&gt;
&lt;p&gt;O’Reilly’s &lt;em&gt;&lt;a href=&#34;http://www.amazon.co.uk/exec/obidos/ASIN/0596004850&#34;&gt;Extreme Programming Pocket Guide&lt;/a&gt;&lt;/em&gt; is a handy little summary of the approach (only 81 pages), depicting a near-utopian development shop where everyone is happy, and projects come in under budget and on time. It got me quite fired up, actually, and some of the concepts described are interesting. But deep down, I just know this would never happen in the real world—too much politics, too many personalities at play in the workplace, in my humble opinion.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>A major project I’ve been working on for the last ten months has just gone live, giving me some time recently to take stock, do a bit of R&amp;D, and catch up on some reading. I’ve been reflecting on how to approach things better in the future, and to this end, I’ve just finished two very different books about the software development process.</p>
<p>O’Reilly’s <em><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0596004850">Extreme Programming Pocket Guide</a></em> is a handy little summary of the approach (only 81 pages), depicting a near-utopian development shop where everyone is happy, and projects come in under budget and on time. It got me quite fired up, actually, and some of the concepts described are interesting. But deep down, I just know this would never happen in the real world—too much politics, too many personalities at play in the workplace, in my humble opinion.</p>
<p>This is where the second book I read this week comes in. <em><a href="http://www.amazon.co.uk/exec/obidos/ASIN/1590590082">The Career Programmer: Guerrilla Tactics for an Imperfect World</a></em> provides useful suggestions for dealing with the aforementioned politics and personalities in pursuit of spending more time happily coding while developing your skills and career.</p>
<p>Both books are well worth reading for any professional coder, as together they offer a wealth of practical advice on making a developer’s life less stressful.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
