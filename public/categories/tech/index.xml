<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tech on Ian Nelson</title>
    <link>https://blog.iannelson.uk/categories/tech/</link>
    <description>Recent content in Tech on Ian Nelson</description>
    <generator>Hugo -- 0.146.6</generator>
    <language>en</language>
    <lastBuildDate>Wed, 23 Apr 2025 19:18:23 +0100</lastBuildDate>
    <atom:link href="https://blog.iannelson.uk/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NDC Porto 2024</title>
      <link>https://blog.iannelson.uk/ndc-porto-2024/</link>
      <pubDate>Sun, 20 Oct 2024 22:09:29 +0000</pubDate>
      <guid>https://blog.iannelson.uk/ndc-porto-2024/</guid>
      <description>&lt;p&gt;I had the pleasure of spending ISO Week 42 in the beautiful Portuguese coastal city of Porto, attending the NDC Porto 2024 conference for software developers by &lt;a href=&#34;https://ndcconferences.com/&#34;&gt;NDC Conferences&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It’s been a long time since I attended a multi-day conference – perhaps even as long ago as &lt;a href=&#34;https://blog.iannelson.uk/software-architect-2007/&#34;&gt;Software Architect 2007&lt;/a&gt; (where I first learned about Dependency Injection and IOC Containers) which makes me feel quite ancient. Having been a freelancer since 2008, it’s often difficult to justify taking time out to attend conferences, no matter how valuable they might be to one’s career in the longer term. The face cost of the conference ticket is usually dwarfed by the loss of contract income (real or perceived) whilst being unable to bill a client.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I had the pleasure of spending ISO Week 42 in the beautiful Portuguese coastal city of Porto, attending the NDC Porto 2024 conference for software developers by <a href="https://ndcconferences.com/">NDC Conferences</a>.</p>
<p>It’s been a long time since I attended a multi-day conference – perhaps even as long ago as <a href="https://blog.iannelson.uk/software-architect-2007/">Software Architect 2007</a> (where I first learned about Dependency Injection and IOC Containers) which makes me feel quite ancient. Having been a freelancer since 2008, it’s often difficult to justify taking time out to attend conferences, no matter how valuable they might be to one’s career in the longer term. The face cost of the conference ticket is usually dwarfed by the loss of contract income (real or perceived) whilst being unable to bill a client.</p>
<p>But circumstances conspired to make my attendance at NDC Porto possible this year. Firstly, I’m currently doing some exclusive and inside IR35 work for a client, which effectively results in me having some mandatory days off to play with for the first time in over 15 years. And secondly, I was lucky enough to win an all-access pass to any NDC Conference at a raffle held at the last <a href="https://www.dddnorth.co.uk">DDD North</a> event this March – so many thanks to the good folk at <a href="https://blackmarble.com">Black Marble</a> for organising that event, and to <a href="https://ndcconferences.com">NDC</a> for offering the prize.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>I had never been to Porto before, so took the opportunity to spend the weekend prior to the conference doing the tourist thing. The October weather was fantastic for walking around the historic city centre, taking in the cathedral, Torre dos Clérigos, and views of the Duoro river. My goodness, but it’s hilly though!</p>
<p>From my journal that Sunday:</p>
<blockquote>
<p>“I realised that Porto doesn’t just appeal to my sense of sight. Of course the views are fantastic, but on a sunny Sunday like today there is also excellent music that carries far and wide from a range of talented buskers. Electric acoustic guitars and electric violins seemed to be the order of the day, with a mixture of classic and popular tunes. Porto also smells nice – people seem to have a variety of different fragrances that differ from those that I usually smell in Leeds. Of course there are great tastes in the form of the wines and seafood. And finally there are even things to touch – ceramic tiles, cork panels etc. Truly, this city is a feast for the senses.”</p></blockquote>
<!-- raw HTML omitted -->
<p><a href="https://cdn.iannelson.uk/uploads/2024/10/IMG_7417.jpeg"><!-- raw HTML omitted --></a><!-- raw HTML omitted --> <!-- raw HTML omitted --><a href="https://cdn.iannelson.uk/uploads/2024/10/IMG_7427.jpeg"><!-- raw HTML omitted --></a><!-- raw HTML omitted --> <!-- raw HTML omitted --><a href="https://cdn.iannelson.uk/uploads/2024/10/IMG_7438.jpeg"><!-- raw HTML omitted --></a><!-- raw HTML omitted --> <!-- raw HTML omitted --><a href="https://cdn.iannelson.uk/uploads/2024/10/IMG_7462.jpeg"><!-- raw HTML omitted --></a><!-- raw HTML omitted --> <!-- raw HTML omitted --><a href="https://cdn.iannelson.uk/uploads/2024/10/IMG_7478.jpeg"><!-- raw HTML omitted --></a><!-- raw HTML omitted --> <!-- raw HTML omitted --><a href="https://cdn.iannelson.uk/uploads/2024/10/IMG_7498.jpeg"><!-- raw HTML omitted --></a><!-- raw HTML omitted --> <!-- raw HTML omitted --><a href="https://cdn.iannelson.uk/uploads/2024/10/IMG_7508.jpeg"><!-- raw HTML omitted --></a><!-- raw HTML omitted --> <!-- raw HTML omitted --><a href="https://cdn.iannelson.uk/uploads/2024/10/IMG_7514.jpeg"><!-- raw HTML omitted --></a><!-- raw HTML omitted --> <!-- raw HTML omitted --><a href="https://cdn.iannelson.uk/uploads/2024/10/IMG_7549.jpeg"><!-- raw HTML omitted --></a><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h2 class="wp-block-heading" id="workshop-8211-designing-microservices">Workshop – Designing Microservices</h2>
<p>Before the conference proper began on Wednesday, there were nine two-day workshops to choose from. I opted to attend <em>Designing Microservices</em> by <a href="https://samnewman.io">Sam Newman</a>. I had previously read Sam’s book <em><a href="https://amzn.to/3UgfVME">Building Microservices</a></em>, and have been using microservices of some variety or other on projects since 2018. While these have sometimes been successful, I have often had the niggling doubt that some implementations on which I have worked could more accurately be described as being Distributed Monoliths, and I was eager to spend some focused time understanding when the lure of microservices should be resisted, and to dig into implementation patterns, along with examining related topics such as whether to use multirepo or monorepo approaches for source control.</p>
<p>As with Sam’s book, while ostensibly about microservices, the workshop also covered a wide range of more general architectural and software development topics that could be equally applied to traditional monoliths. It also struck a good balance between technical topics and organisational ones – how to structure teams for success when delivering a microservice-based solution. I appreciated this holistic coverage, as well as the tacit admission that microservice architectures may often not be the correct solution for a given project.</p>
<p>The workshop was delivered at a good pace, neither labouring points unnecessarily, nor glossing over more thorny topics that were worthy of due consideration. There was a good mixture of slides, dialogue, and some collaborative activity in small groups.</p>
<p>My only minor disappointment with the two-day workshop was a sense that a small minority of the other attendees were insufficiently engaged – returning late to the workshop room from our plentiful breaks, and checking their phones frequently. I assume they were attending at the behest of their employer rather than of their own volition, but this behaviour seemed disrespectful to Sam and the other attendees. I tried to ignore it.</p>
<h2 class="wp-block-heading" id="my-10-favourite-sessions">My 10 Favourite Sessions</h2>
<p>After the initial two days of workshops, the remaining three days were filled with over a hundred traditional one-hour sessions, with up to six sessions running concurrently. This led to sometimes difficult decisions about which sessions to attend. My strategy was generally to attend sessions covering higher-level broad-brush type topics, rather than those covering niche technologies which I could learn through reading online documentation. But even within these self-imposed guidelines, there was a wealth of material to choose from. I attended around twenty sessions – here are some thoughts on my favourite ten:</p>
<h3 class="wp-block-heading" id="keynote-tidy-first-a-daily-exercise-in-empirical-design-by-kent-beck">Keynote: Tidy First? A Daily Exercise in Empirical Design by Kent Beck</h3>
<p>The conference proper opened on Wednesday morning with a Keynote by Kent Beck, the creator of extreme programming, early proponent of Test-Driven Development, and one of the 17 original signatories to the Agile Manifesto. Like all the keynotes, this took place in the huge main expo hall of the conference. I can see the logistical logic behind this decision – notably that it is large enough to house all of the delegates, and ensures that the conference can kick off at 9am sharp, even if latecomers are still arriving. But on the downside there were no seats close to the stage area (I am 48 years old, the prospect of standing up for an hour didn’t appeal), whereas from the area with seats it was a struggle to hear Kent over the background chatter and espresso machines. I would learn from my mistakes and prop myself up on a table near the front for the following days’ keynotes.</p>
<p>My geriatric grumblings notwithstanding, from the portions I heard properly, this was a great talk, and I look forward to rewatching this on YouTube to fill in the gaps. Unlike every other session that I saw during the week, Kent did not have a traditional slide deck, but instead projected some freeform sketches to illustrate the concepts he discussed.</p>
<p>There was much talk about the perennial topics (and personal bugbears) of estimation, and the cost of software development, and how software designers can influence when money is spent and earned. The concept of optionality was introduced – if software can be changed, then the design does not matter. Features are easy to see, but options are difficult to see, yet this is why we invest in software. The cost of software is the cost of changing it, not the cost of building it. Some changes are surprisingly expensive, yet others are surprisingly cheap.</p>
<p>Some of my favourites quotes from the session (of which there were many, some of which would appear in the slides of other speakers later in the week):</p>
<!-- raw HTML omitted -->
<p>Kent wrapped up with a few words on this year’s hot topic of AI. He drew parallels with the development of highly efficient steam engines during the Industrial Revolution, and explained how this had actually led to an increase in the use of coal (the Jevon’s Paradox). He offered that the AIs are not coming for our jobs any time soon and that we are, in fact entering a new golden age for programming. This topic would crop up again throughout the conference.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h3 class="wp-block-heading" id="being-staff-plus-by-ian-cooper">Being Staff Plus by Ian Cooper</h3>
<p>Having now notched up 27 years at the code face, I have recently been giving some considerations as to where to take my career in the coming years, without having to sell my soul to the devil and venture over to the dark side of management. This session from Ian Cooper on “Staff Plus” roles offered some great advice on the nature of senior technical leadership roles, and how to “move beyond code” while staying resolutely technical.</p>
<p>Ian offered a good balance of high-level strategic career advice married with a bunch of helpful tactical hints and tips for how to succeed (and demonstrate that success) in such roles, and I urge any other greybeards feeling frustrated with their careers to watch this presentation (<a href="https://youtu.be/l-oCDQGH3EU?si=nAIK3UqvDUhQPZpl">the version from NDC Oslo is online here</a>).</p>
<p>This was the first session that sent me scurrying to Amazon to buy some recommended books (it would not be the last!). By the time I got home to England on Saturday both <em><a href="https://amzn.to/3YtNpcY">T</a><a href="https://amzn.to/3NxVNlu">he Staff Engineer’s Path: A Guide for Individual Contributors Navigating Growth and Change</a></em> by Tanya Reilly and <em><a href="https://amzn.to/3NxWpHF">Staff Engineer: Leadership Beyond the Management Track</a></em> by Will Larson would be waiting for me.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h3 class="wp-block-heading" id="definition-of-insanity-8211-timeouts-retries-and-idempotency-by-sam-newman">Definition Of Insanity – Timeouts, retries, and idempotency by Sam Newman</h3>
<p>This session by Sam Newman focused on some of key techniques for developing resilient distributed systems: Timing out remote calls that do not complete in a timely fashion, Retrying unsuccessful calls, and how to achieve idempotency to ensure that calls can be retried safely without undesirable side-effects.</p>
<p>This topic is highly relevant to a distributed system that I am developing for my current client, so I listened intently and appreciated the detailed low-level advice. I was particularly interested in the observation that <em>if a retry of an idempotent request succeeds, we should send back the same semantic response that we would have sent had the original request succeeded</em>. Also new to me was the concept of a <a href="https://en.wikipedia.org/wiki/Bloom_filter">Bloom Filter</a>.</p>
<p>Improving the resilience of distributed systems has been an interest of mine since reading the first edition of <em><a href="https://amzn.to/3C3Qh7m">Release It!</a></em> by Michael Nygard in 2009. I’m delighted to see that Sam is currently authoring <a href="https://samnewman.io/books/building-resilient-distributed-systems/">a new book on this topic</a>, due for publication in 2025.</p>
<h3 class="wp-block-heading" id="open-source-open-mind-the-cost-of-free-software-by-dylan-beattie">Open Source, Open Mind: The Cost of Free Software by Dylan Beattie</h3>
<p>A light-hearted talk to end the first day of the conference, this session by Dylan Beattie was a whistle-stop tour of the history of open source software, covering notable successes, failures and lawsuits, followed by some thoughts on where “free software” goes from here.</p>
<p>A recording of <a href="https://youtu.be/vzYqxo13I1U?si=eacYByQwreIj2O_U">an earlier version of this talk from NDC Oslo 2024 is available online</a>, but Dylan had added extra material to the talk since then to cover the recent disputes between WordPress.com owners Automattic and WP Engine.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h3 class="wp-block-heading" id="keynote-can-you-trust-your-large-language-model-by-jodie-burchell">Keynote: Can you trust your (large language) model? by Jodie Burchell</h3>
<p>Thursday’s keynote by data scientist Jodie Burchell talked about how the quality of Large Language Models (LLMs) such as ChatGPT has been measured, and highlighted structural deficiencies with both the benchmarks as well as the AI tooling themselves. I confess to not having devoted much time over the past year to understanding the “AI revolution”, so did not know what to expect from this talk, but I found it a fascinating and highly approachable explanation that has piqued my interest. My contemporary notes from this session read “Such a good talk. Chase down the slides, and sessions from <a href="https://youtu.be/lLNJld729bc?si=x2ASipnm2PGcKt6d">earlier</a> <a href="https://youtu.be/9EI_lqPUVEE?si=jR9HOaAHIPnc_qoD">NDCs</a>“.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h3 class="wp-block-heading" id="orchestration-vs-choreography-the-good-the-bad-and-the-trade-offs-by-laïla-bougriâ">Orchestration vs. Choreography: The good, the bad, and the trade-offs by Laïla Bougriâ</h3>
<p>Designing distributed systems regularly involves trying to decide between synchronous or asynchronous communication, and orchestration or choreography (and the combinations thereof). There are, of course, tradeoffs to make, but the design decisions are often made when considering only the happy path scenarios.</p>
<p>This excellent talk by Laïla Bougriâ took this complex nuanced subject, with all of its “it depends” messiness, and offered concrete guidance for when and how to implement each approach. One of my favourite sessions of the whole conference, and Laïla coped excellently with audio problems for the first third of the presentation.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h3 class="wp-block-heading" id="a-developer-goes-to-the-movies-by-simon-painter">A Developer Goes to the Movies by Simon Painter</h3>
<p>Thursday, the middle day of the conference proper, was a long one, but fortunately there were some great light-hearted talks later in the day to balance those that required more intense thinking.</p>
<p>I had previously enjoyed seeing Simon Painter give his talk “From Ancient Greeks to Modern Geeks: Basic Machine Learning Algorithms” at DDD North in Hull in March 2024. For this new talk, he brings together his twin passions of movies and coding by presenting a visual history of computing and software developers as seen by Hollywood.</p>
<p>I don’t seem to have made as many notes on this talk, preferring to relax and enjoy the show (though sadly without popcorn), but I do recall enjoying the segments on <a href="https://www.imdb.com/title/tt0086567/">WarGames</a>, <a href="https://www.imdb.com/title/tt0113957">The Net</a> and <a href="https://www.imdb.com/title/tt0113243">Hackers</a> (which I really must watch again soon). It was also intriguing to learn that the distinction for the first person to have portrayed a computer hacker in a movie goes to none other than Benny Hill!<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h3 class="wp-block-heading" id="how-simple-is-8220as-simple-as-possible8221-by-rendle">How Simple Is “As Simple As Possible”? by Rendle</h3>
<p>Rendle has been doing this programming lark for even longer than me. But unlike me (who merely grumbles about our industry through the medium of Instagram memes shared with equally bitter colleagues), Rendle is an ex-professional standup comic who takes the grumbling to a whole new level by holding up a (black) mirror to our industry in conference presentations such as this one.</p>
<p>The thing is, as the saying goes, <em>it’s funny because it’s true</em>. Rendle is on a mission to highlight how unnecessarily complex we have made most aspects of software design, development and deployment during his career, and proselytise for an easier, simpler and more productive life. Amen to that.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h3 class="wp-block-heading" id="keynote-start-here-mindset-shifts-and-tools-for-building-career-confidence-in-a-post-pandemic-era-by-denise-jacobs">Keynote: Start Here: Mindset Shifts and Tools for Building Career Confidence in a Post-Pandemic Era by Denise Jacobs</h3>
<p>For Friday’s final keynote of the conference, I took my now-customary standing spot up front near the stage… and then immediately regretted it as I noticed the pens and paper dotted around the tables. I realised with horror that this was going to be an interactive session, and considered retreating to the back of the room. I do not generally enjoy audience participation, have no “fun facts” on hand to share about myself, and abhor “icebreakers” at the start of meetings and workshops.</p>
<p>But, I told myself that I had come all this way to Porto with the intention of adopting a growth mindset and learning as much as possible, so ought to give it a go. I’m glad I did, as Denise’s talk became one of my favourite of the conference, and the audience participation exercises (which were not as scary as I had feared) helped to boost my confidence and further renew my interest in my career.</p>
<p>I ordered yet another book recommendation on the back of this talk – <em><a href="https://amzn.to/3BNS3JM">Chatter: The Voice in Our Head and How to Harness It</a></em> by Ethan Kross, but opted for Audible this time to reduce the number of Amazon packages that would be arriving at home in my absence.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h3 class="wp-block-heading" id="the-next-decade-of-software-development-by-richard-campbell">The Next Decade of Software Development by Richard Campbell</h3>
<p>Richard Campbell is best known to me as the co-host of the <a href="https://www.dotnetrocks.com">.NET Rocks!</a> podcast, but his interest and expertise in science, computing, and technology is far broader than that niche (he gave another talk at this conference on the topic of Nuclear Power).</p>
<p>This talk on the Next Decade of Software Development has been presented many times over the years and been regularly updated as new trends such as the Cloud emerge and gradually become mainstream. It reviews where we’ve been, examines the trend lines, and looks forward to which trends and technologies we will need to learn to remain relevant in our roles in the upcoming years. As with many of the other talks, this naturally touched on AI, and joined that consensus that we are entering a period where the LLMs will aid our software development work rather than directly threatening it. At a more prosaic level, Richard was also positive that .NET and Blazor are not going anywhere any time soon.</p>
<h2 class="wp-block-heading" id="final-thoughts">Final Thoughts</h2>
<p>I thoroughly enjoyed my time at NDC Porto. The conference is expertly organised by a team who have clearly been doing this for quite some time. The venue – <a href="https://en.wikipedia.org/wiki/Porto_Convention_Centre">a former customshouse on the banks of the Duoro</a> – was airy and inspirational. The complementary food and drink was delicious and plentiful. The speakers were knowledgeable and friendly, making themselves available for questions outside of the sessions themselves. Generally I found my fellow attendees to be amiable and approachable, and appreciated mingling amongst the wide variety of nationalities present from across the European continent and further afield. I remain disheartened by the male skew in the gender balance of attendees at tech conferences, but it was pleasing to note how many (excellent) female speakers gave talks – I suspect and hope that NDC are doing all they reasonably can to improve diversity.</p>
<p>I return home to Yorkshire, and back to the code face, with a renewed enthusiasm for my chosen career and a rekindled excitement for technologies (both new and old – some of the talks by Anders Norås have made me nostalgic for my Amiga 500 and 1200!). Oh, and with an ever-growing pile of books to read!<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --> <!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    <item>
      <title>DDDNorth 2022</title>
      <link>https://blog.iannelson.uk/dddnorth-2022/</link>
      <pubDate>Sun, 04 Dec 2022 15:48:39 +0000</pubDate>
      <guid>https://blog.iannelson.uk/dddnorth-2022/</guid>
      <description>&lt;p&gt;Yesterday morning I arose unusually early for a Saturday and drove eastwards to attend this year’s &lt;a href=&#34;https://dddnorth.co.uk/&#34;&gt;DDDNorth&lt;/a&gt; at the University of Hull. These free, community-driven events held at the weekend offer an invaluable opportunity to learn from peers in the industry in a relaxed environment.&lt;/p&gt;
&lt;p&gt;Five concurrent sessions in each timeslot means that tough decisions often have to be made about which to attend! In acknowledgement of my maturing years (I’ve been reading up on &lt;a href=&#34;https://en.wikipedia.org/wiki/Optimal_stopping&#34;&gt;optimal stopping&lt;/a&gt;) and the niche that I have carved out for myself, I chose to stick to those sessions that focused on backend and distributed architecture and development.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Yesterday morning I arose unusually early for a Saturday and drove eastwards to attend this year’s <a href="https://dddnorth.co.uk/">DDDNorth</a> at the University of Hull. These free, community-driven events held at the weekend offer an invaluable opportunity to learn from peers in the industry in a relaxed environment.</p>
<p>Five concurrent sessions in each timeslot means that tough decisions often have to be made about which to attend! In acknowledgement of my maturing years (I’ve been reading up on <a href="https://en.wikipedia.org/wiki/Optimal_stopping">optimal stopping</a>) and the niche that I have carved out for myself, I chose to stick to those sessions that focused on backend and distributed architecture and development.</p>
<p>My choice for the first session of the day was an overview of <strong>.NET Minimal APIs</strong> by Microsoft MVP Kevin Smith (<a href="https://twitter.com/kev_bite">@kev_bite</a>). Restful APIs on the Microsoft .NET platform frequently form a key part of the systems that I design and develop, so it’s vital to stay abreast of the latest techniques for implementing these. Kev’s session was really useful to me as it concisely demonstrated the approaches available in .NET Core 7 Minimal APIs, freeing me of the need to discover what’s new via reading documentation or other means. I particularly appreciated seeing demonstrations of approaches for the automated testing of APIs, and some of the post-session Q&amp;A about how best to structure real-world enterprise .NET APIs was insightful.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted -->Kevin Smith demos how to test .NET Minimal APIs<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<p>I’ve blogged before about the <a href="https://blog.iannelson.uk/on-the-inherent-negativity-of-computer-programmers/">Inherent Negativity of Computer Programmers</a>, and it’s fair to say that this pessimism hasn’t changed as my career has progressed! As an architect of distributed systems, knowledge of techniques for handling unavailable or poorly-performing dependencies are an essential part of my day-to-day toolset. Andy Clark’s (<a href="https://twitter.com/TechyChap">@techychap</a>) entertaining session “<strong>When Microservices Go Bad</strong>” covered a variety of strategies such as caching, retries, timeouts, circuit breakers, bulkheads and rate limiting. For each of these, he showed how they can be achieved using the excellent open source library <a href="https://github.com/App-vNext/Polly">Polly</a>. I’ve been using some of Polly’s features on my current project (I’ve been a long-time fan of <a href="https://blog.iannelson.uk/a-circuit-breaker-which-trips-on-frequency-of-failures/">Circuit Breaker</a> since I first learned of it from reading Michael Nygard’s <em><a href="https://amzn.to/3VwRvwP">Release It!</a></em> book), but this session opened my eyes to the full gamut of how Polly could help protect the systems I design. Hat-tip to Andy for the live demos in this session, and for contending with the multi-monitor weirdness.</p>
<p>The third session was my favourite of the day. “<strong>Don’t Put Your Messages In A Bottle: Implement Messaging Patterns</strong>” saw <a href="https://azure.microsoft.com/en-gb/products/service-bus">Azure Service Bus</a> Senior Program Manager Eldert Grootenboer (<a href="https://twitter.com/egrootenboer">@egrootenboer</a>) provide a whistle-stop overview of fourteen (fourteen!) separate messaging patterns. The Circuit Breaker pattern made another appearance, as did some patterns which were new to me such as Sequential Convoy and Transactional Outbox. I’ve been getting by with simply using Azure Storage Queues for most of my queueing requirements in recent years, but this presentation reminded me of the richer techniques that are possible with Service Bus. This hour-long session flew by and left me wanting more. Time to dust off my copy of <a href="https://amzn.to/3Uu78Ee">Hohpe and Woolf’s Enterprise Integration Patterns</a> and brush up ahead of my next distributed architecture challenge.</p>
<p>“<strong>Software Architecture: In Search of the Fourth Chord</strong>” by straight-speaking Paul Michaels (<a href="https://twitter.com/paul_michaels">@paul_michaels</a>) was a more laid-back session which covered many of the common problems and trade-offs faced by Software Architects. Paul rightly highlighted that the architect is likely the only person on a project who cares about the full range of functional and nonfunctional characteristics of a system. But I’m not sure that his throwaway comment “no-one ever says ‘can you make the system scale?&rsquo;” is strictly true – I think this can depend on the project and sector. For example, a large part of my working life during the pandemic has involved ensuring that the NHS App and associated systems can scale to meet spikes in traffic, and here scalability and universal access are often of higher importance than, say, a richer feature set.</p>
<p>The session concluded by suggesting that, much as Status Quo have been able to have a successful musical career with a limited number of chords, so the average Software Architect can get a long way in their chosen career through judicious application of the Message Broker, Event Sourcing and CQRS patterns.</p>
<p>The final session I attended was “<strong>SOA Lessons Learnt (or, Microservices Done Better)</strong>“, where Sean Farmar (<a href="https://twitter.com/farmar">@farmar</a>) gave an entertaining and often opinionated run through his  experiences developing and architecting distributed systems since the 1990s. The general premise was that while technologies and fashions may change over the years, the key thing is to avoid coupling at all costs – a theme which I remember noting from my attendance at <a href="https://blog.iannelson.uk/software-architect-2007/">Software Architect 2007</a> fifteen years ago. It was also nice to be reminded of Peter Deutsch’s <a href="https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing">Fallacies of Distributed Computing</a>, which are even more relevant today than they were in the mid-90s.</p>
<p>Finally, before the dark and rainy drive home, it was time for goodbyes and the traditional prize draw. I’m delighted to report that I had the good fortune to win a <a href="https://github.com/">GitHub</a>-branded scarf which I shall wear with pride to protect my nesh self against the inclement Yorkshire winter that lies ahead.</p>
<p>Many thanks to all who presented, organised and sponsored this year’s DDDNorth. As ever, it was an enjoyable and productive way to spend a Saturday.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted -->Sporting my lovely new GitHub scarf<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    <item>
      <title>Temperature Blanket – A Rare Opportunity for My Coding to Assist Jocelyn&#39;s Crafting</title>
      <link>https://blog.iannelson.uk/temperature-blanket/</link>
      <pubDate>Sun, 16 Feb 2020 22:35:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/temperature-blanket/</guid>
      <description>&lt;p&gt;As the resident geek in our family, it won’t surprise you to hear that I am occasionally approached by Jocelyn and our kids to provide tech support. Sadly, most of these queries are invariably of the “how do I print from my phone” or “the Sky box stopped working” ilk, and rarely trouble my software skills. So it came as a pleasant surprise when I recently encountered a genuine reason to use .NET, APIs and Docker in support of one of Jocelyn’s craft projects.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>As the resident geek in our family, it won’t surprise you to hear that I am occasionally approached by Jocelyn and our kids to provide tech support. Sadly, most of these queries are invariably of the “how do I print from my phone” or “the Sky box stopped working” ilk, and rarely trouble my software skills. So it came as a pleasant surprise when I recently encountered a genuine reason to use .NET, APIs and Docker in support of one of Jocelyn’s craft projects.</p>
<p>Jocelyn has embarked on crocheting a <em>Temperature Blanket</em> throughout 2020. This will consist of 366 squares, one for each day of this leap year, in colours corresponding to the minimum, maximum and average temperatures that we experienced on that day.</p>
<p>And here was the rub – a notable absence of websites that provided these three daily data points for a location close to home. Some sites only had minimum and maximum, but no average. Others considered a “day” to run from, say, 4am to 4am, rather than midnight to midnight, which just isn’t in the spirit of the project. Still others offered the data points she needed, but not for any place close to home.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted -->I’m looking forward to some violet days<!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<p>Here was my opportunity to help and earn some husbandly brownie points! I already had an account for the excellent <a href="https://darksky.net/dev">Dark Sky API</a>, which offers forecast and historical weather data by latitude and longitude. Further, <a href="https://www.adamweiss.me/">Adam Weiss</a> has made available <a href="https://github.com/amweiss/dark-sky-core">dark-sky-core</a>, a .NET Standard Nuget Package for accessing this API from .NET code. I fired up Rider, started a new console app, bashed out the following quick function, and proudly presented the desired figures to Mrs Nelson.</p>
<p>Scope creep inevitably presented itself at this point, as a console application didn’t meet UX requirements.</p>
<p><em>“That’s great Ian – now can you get it to email me the figures every day?”</em></p>
<p>Hmm. I didn’t want to get into <em>that</em>, but I could do one better, and make this into a simple self-service dedicated website. I launched a new Rider instance and created a boilerplate ASP.NET website to show the desired temperatures for the preceding 28 days. I added a standard Dockerfile, built and pushed a container image, and deployed it to an Azure App Service Plan. The final touch was to configure a memorable subdomain and so it was that <a href="http://blanket.iannelson.uk">http://blanket.iannelson.uk</a> was born.</p>
<p>The (rough and ready) source code for both the console application and web version can be found on GitHub:</p>
<!-- raw HTML omitted -->
<p>Photos of Jocelyn’s other colourful creations (and the occasional photobomb from our Miniature Schnauzer) can be found <a href="https://www.instagram.com/jocelyngnelson/">on her Instagram profile</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>How to Install RabbitMQ Server in Docker on a Synology NAS</title>
      <link>https://blog.iannelson.uk/how-to-install-rabbitmq-server-in-docker-on-a-synology-nas/</link>
      <pubDate>Sat, 25 Jan 2020 23:46:56 +0000</pubDate>
      <guid>https://blog.iannelson.uk/how-to-install-rabbitmq-server-in-docker-on-a-synology-nas/</guid>
      <description>&lt;p&gt;One of the game-changing features of &lt;a href=&#34;https://www.synology.com&#34;&gt;Synology&lt;/a&gt;‘s NAS (Network-Attached Storage) devices is their ability to run &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, the industry-standard containerization technology. This opens up the possibility of running all kinds of applications on the NAS, turning them into home servers with boundless possibilities.&lt;/p&gt;
&lt;p&gt;One of things I wanted to run on my own Synology NAS is &lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;RabbitMQ&lt;/a&gt;, the popular open-source message broker. I intend to use this as the heart of a distributed home climate measuring project, with a bunch of low-cost Raspberry Pi devices sending regular sensor readings to a database, or directly to a real-time web application.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>One of the game-changing features of <a href="https://www.synology.com">Synology</a>‘s NAS (Network-Attached Storage) devices is their ability to run <a href="https://www.docker.com/">Docker</a>, the industry-standard containerization technology. This opens up the possibility of running all kinds of applications on the NAS, turning them into home servers with boundless possibilities.</p>
<p>One of things I wanted to run on my own Synology NAS is <a href="https://www.rabbitmq.com/">RabbitMQ</a>, the popular open-source message broker. I intend to use this as the heart of a distributed home climate measuring project, with a bunch of low-cost Raspberry Pi devices sending regular sensor readings to a database, or directly to a real-time web application.</p>
<p>Here’s how to go about installing RabbitMQ on a Synology NAS, as of January 2020. The whole process should only take around 15-30 minutes at most.</p>
<p>First, open up Package Center and search for the free Third-Party Docker package. If it’s not already installed, go ahead and Install it, otherwise Open it.</p>
<!-- raw HTML omitted -->
<p>Within the Docker package, we need to search the Registry for the rabbitmq image. Look for the image with the “Official Image” icon next to it, which should be near the top of the search results.</p>
<!-- raw HTML omitted -->
<p>Choose a tag to install. I recommend selecting a recent build with the “management” suffix – these tags have the RabbitMQ management plugin installed and enabled by default, which is available on the standard management port of 15672.</p>
<!-- raw HTML omitted -->
<p>After the Docker image has downloaded to the NAS, select it from the list of images on the Image tab, and click Launch to create a new container from that image.</p>
<!-- raw HTML omitted -->
<p>Give the new container a suitable name (rabbitmq seems the obvious choice), and then click the Advanced settings button.</p>
<!-- raw HTML omitted -->
<p>Check Enable auto-restart so that the container automatically restarts, should it stop for any reason.</p>
<!-- raw HTML omitted -->
<p>Containers should generally be treated as being replaceable, with any data that you care about being kept outside of the container. To this end, create a folder on the NAS that can be used as a volume for the /var/lib/rabbitmq mount path. This ensures all the data from the RabbitMQ instance exists outside of the container itself and won’t be lost if the container needs to be destroyed and recreated for any reason (such as upgrading to a new version of RabbitMQ).<br>
I also suggest creating a blank RabbitMQ config file – rabbitmq.conf – and mounting this file to the path /etc/rabbitmq/rabbitmq.conf .</p>
<!-- raw HTML omitted -->
<p>RabbitMQ with the management plugin enabled uses ports 4369, 5671, 5672, 15671, 15672 and 25672. There’s a low probability of these ports already being in use by other applications on the NAS, so map those container ports to the same local ports.<!-- raw HTML omitted --></p>
<p><a href="https://cdn.iannelson.uk/uploads/2023/08/1_2020-01-13_20-57-55.png"><!-- raw HTML omitted --></a><!-- raw HTML omitted --></p>
<p>Check the Environment variables tab. The defaults should be fine; you may wish to specify a particular <a href="https://www.rabbitmq.com/cli.html#node-names">node name</a> – this can be done using the RABBITMQ_NODENAME environment variable</p>
<!-- raw HTML omitted -->
<p>That’s it. Click Apply, and Apply again on the Summary screen.</p>
<!-- raw HTML omitted -->
<p>The RabbitMQ docker container will start, and if everything has gone to plan, it should stay running and not restart. To check out the logs, select the container from the Container tab and click the Details button.</p>
<!-- raw HTML omitted -->
<p>From the details, click the Log tab. If startup has been successful, you will the “Server startup complete; 3 plugins started.” message as shown below. Otherwise, these logs should give a useful indication what has gone wrong.</p>
<!-- raw HTML omitted -->
<p>The RabbitMQ mnesia folder will be initialized in the folder specified earlier as  a mapped volume.</p>
<!-- raw HTML omitted -->
<p>The RabbitMQ Management portal will be accessible through a web browser at port 15672 on your NAS’s hostname or IP address. But if you try to login using the default guest/guest credentials you will likely be met with the “User can only log in via localhost” message shown below. That’s not an option from the Synology NAS, which doesn’t have any web browser installed.</p>
<!-- raw HTML omitted -->
<p>There are a couple of solutions to this quandary. The rabbitmq.conf file created earlier could be edited to allow the guest user to connect from a remote host by setting the loopback_users configuration to none – <a href="https://www.rabbitmq.com/access-control.html#loopback-users">details here</a>.</p>
<p>Alternatively, the rabbitmqctl utility can be used to add a new user with administrator rights, as shown in the screenshot below.</p>
<!-- raw HTML omitted -->
<p>Having done this, it will be possible to login to the RabbitMQ management console from a remote machine using the newly-created credentials.</p>
<!-- raw HTML omitted -->
<p>Boom! There we have it. RabbitMQ running in a Docker image, on a Synology NAS, with the management plugin accessible from the local network.</p>
<!-- raw HTML omitted -->
]]></content:encoded>
    </item>
    <item>
      <title>DDDNorth 2014 Review</title>
      <link>https://blog.iannelson.uk/dddnorth-2014-review/</link>
      <pubDate>Wed, 22 Oct 2014 20:11:52 +0000</pubDate>
      <guid>https://blog.iannelson.uk/dddnorth-2014-review/</guid>
      <description>&lt;p&gt;I had no excuse for not attending &lt;a href=&#34;http://dddnorth.co.uk/&#34;&gt;DDDNorth&lt;/a&gt; this year, as it was held at Leeds University, a relatively short drive from home. Not that I’d be looking for an excuse – these free events are always superbly organised and provide a valuable opportunity to see sessions from a wide range of speakers without having to take time off work. It’s no wonder the tickets are always snapped up so quickly.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I had no excuse for not attending <a href="http://dddnorth.co.uk/">DDDNorth</a> this year, as it was held at Leeds University, a relatively short drive from home. Not that I’d be looking for an excuse – these free events are always superbly organised and provide a valuable opportunity to see sessions from a wide range of speakers without having to take time off work. It’s no wonder the tickets are always snapped up so quickly.</p>
<p>As a contractor, I also appreciate the opportunity that DDDNorth affords me to catch up with so many friends and colleagues that I’ve worked with over the years, and it was great to see so many familiar faces.</p>
<p>With five slots during the day each offering five concurrent sessions there were plenty of difficult choices to be made. In general, I tried to attend sessions offering information I didn’t think I would be able to get from books, blogs or PluralSight – stories from the trenches and architectural concepts rather than deep dives on specific technologies.</p>
<p>The first session I attended was “<strong>So You Want To Be A Tech Lead – 10 Things You Need To Do To Succeed</strong>” by <a href="http://www.hammond-turner.org.uk/">Joel Hammond-Turner</a> (<a href="https://twitter.com/rammesses">@rammesses</a>). I was delighted to find that the eponymous ten things were not airy-fairy woolly soft-skill type things, but in fact consisted of ten topics backed by a whole bunch of concrete real-world actionable suggestions. These ranged from large architectural tasks (use NuGet obsessively for all internal dependencies, set up automated release management with Octopus, etc) to the little things that can make a difference (be willing to take your headphones off, read and share <a href="http://blog.cwa.me.uk/">The Morning Brew</a>, add photographs to Personas..)</p>
<p>Next I saw “<strong>Not Just Layers! What Can Pipelines and Events Do For You?</strong>“, presented by DDD circuit regular <a href="http://codebetter.com/iancooper/">Ian Cooper</a> (<a href="https://twitter.com/icooper">@icooper</a>). This was the most technical session that I saw, and required some serious concentration. Ian started his presentation with some slides that explained the theoretical background behind the architectural concepts he was introducing. These were beautiful and densely packed with information, and I plan to review them at my leisure! He then fired up Visual Studio and demonstrated some C# implementations of the patterns previously described. Kudos to Ian for creating a successful presentation on a fairly dry architectural topic – inevitably it could only scratch the surface but has whetted my appetite to venture beyond the typical layering approach when considering candidate software architectures.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>As I hurtle inexorably towards my 40s, and noting the general absence of older coders in the workplace, I have been starting to wonder whether I need to identify alternative career paths away from the code face. So the following talk was of particular interest to me.</p>
<p>Ceri Shaw’s (<a href="https://twitter.com/cerishaw">@cerishaw</a>) talk “<strong>Join The Dark Side – Why Developers Should Consider Management</strong>” began by covering some of the negative managerial stereotypes that we techies tend to hold (yes, there was a Dilbert cartoon). She continued by looking at the traits needed to be an effective line manager or project manager within a technical team, identifying (as the session title suggests) that developers did in fact possess many of the requisite skills. Although I’m still not entirely convinced that a full-time management role is the right move for me personally, I can see how some aspect of mentoring or scrum mastering might not be entirely incompatible with my desire to retain a hands-on techie, and I will be seeking out some of the resources she mentioned to learn more.</p>
<p>There were a number of interesting short grok talks during lunchtime. I particularly enjoyed hearing <a href="http://www.relentlessdevelopment.net/">Grant Crofton</a> (<a href="https://twitter.com/relentlessdev">@relentlessdev</a>) describe his attempts to use functional programming to determine the most appropriate school for his son! That sounds like a slightly more practical means of developing skills in F# than my own efforts to use it solve some of the Project Euler problems.</p>
<p>“<strong>Burnout Is Real And It’s Coming To Get You</strong>” was the title of <a href="http://www.devjoy.com/">Richard Dalton’s</a> (<a href="https://twitter.com/richardadalton">@richardadalton</a>) talk, which I consider to be the highlight of the day. Richard took a potentially worrying subject and gave hope and advice for all of us who have at some time felt ourselves to be at some point along the burnout continuum.</p>
<p>I was particularly interested in the observation that it is precisely those of us who place a high value on our work (and are willing to give up a Saturday to attend a conference) who are likely to feel burned out and overly self-critical of our perceived inability to drive technical change or achieve as much as we would like.<br>
The Agile movement, Richard suggested, was born as the result of an entire industry feeling burnt out and unable to get things done.<br>
He cautioned us not to be jealous of or constantly compare ourselves to other developers, and to consider what aspects of life are poorer for those in our industry who are able to devote vast amounts of time to developing open source frameworks or writing popular blogs. I was also pleased to hear someone else mention the guilt that they feel when they choose to spend their hard-earned free time reading for pleasure instead of being glued to PluralSight or reading tech books. We do need to go easier on ourselves if we’re in this for the long haul.</p>
<p>The issue of age naturally came up – Richard concluded that there is no discernable mental decline between a programmer aged 20 and the same aged 40, it’s just that we have many more demands on our time around this age, leaving us with less contingency time to catch up on the less productive days. If we make it through this period in our lives without quitting the industry, it was suggested that things could actually be easier in our 50s as children become more self-sufficient and we once again have some time to spare.</p>
<p>In summary, it was a very reassuring talk, wrapped up with helpful advice on how to handle burnout – what works and what doesn’t.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>In recent years the projects that I have worked on have involved much web services work (both as a client and server), so I was interested to hear <a href="https://twitter.com/david_whitney">David Whitney’s</a> (<a href="https://twitter.com/david_whitney">@david_whitney</a>) “<strong>Lessons Learned Running A Public API</strong>” talk, full of tips gathered developing the Rest API for Justgiving.com<br>
There was a good mixture of hard technical advice (how to handle versioning, authentication, what data formats to support..) along with softer ideas of the supporting work required to create and maintain a successful public API (generated documentation, SDKs, not being a slave to external requirements or a single client, getting a product manager).</p>
<p>I was particularly struck by the openness of the approach recommended by David, which involved creating public Google groups to push support issues into the community, and making a public uptime page available. Lots of good tips from the trenches here. Once again, here was some real actionable advice from a session that we can take away and put into practice.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>And that (after the customary prize draws and closing comments), was that. Thanks to <a href="https://twitter.com/apwestgarth">Andrew Westgarth</a>, <a href="http://www.blackmarble.co.uk/">Black Marble</a>, the <a href="http://www.leeds.ac.uk/">University of Leeds</a>, and all the sponsors and speakers for once again staging a vital event. The development community in the North would be much poorer without this large multi-track multi-session event, and I look forward to attending again next year.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
]]></content:encoded>
    </item>
    <item>
      <title>Back To Basics: On The Use And Abuse Of The Humble Boolean</title>
      <link>https://blog.iannelson.uk/back-to-basics-on-the-use-and-abuse-of-the-humble-boolean/</link>
      <pubDate>Tue, 01 Jul 2014 20:54:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/back-to-basics-on-the-use-and-abuse-of-the-humble-boolean/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“We who cut mere stones must always be envisioning cathedrals”&lt;/p&gt;
&lt;p&gt;— Stonecutter’s creed&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Consider for a moment, if you will, the humble Boolean. Taking only two possible values, it is the most basic of all the data types we programmers use, and its existence is fundamental to all the code we write. At the end of the day, when all is said and done, everything we do is just a big bunch of ones and zeroes.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<blockquote>
<p>“We who cut mere stones must always be envisioning cathedrals”</p>
<p>— Stonecutter’s creed</p></blockquote>
<p>Consider for a moment, if you will, the humble Boolean. Taking only two possible values, it is the most basic of all the data types we programmers use, and its existence is fundamental to all the code we write. At the end of the day, when all is said and done, everything we do is just a big bunch of ones and zeroes.</p>
<p>I assert that this warm familiarity often causes us to make use of booleans when we really shouldn’t. In particular, I want to call out two specific uses of the boolean which I now consider to be anti-patterns and avoid wherever possible:</p>
<h2 id="antipattern-1-methods-that-take-boolean-flag-parameters">Antipattern 1 – Methods that take boolean flag parameters</h2>
<p>We spend more time reading and interpreting code than we spend actually writing it. That line of code you’re absent-mindedly knocking out today will probably be read dozens of times by your colleagues and future developers. It behoves you to make your intentions as clear as possible at every opportunity. Ambiguity in code is a truly terrible thing. Don’t impede understanding of your intentions by using boolean parameters that at worst force the reader to navigate to the definition of the method being invoked, or at best require them to hover their mouse over the bool parameter to glimpse some intellisense insight.</p>
<p>An example – let’s take a look at a line of code which uses the NHibernate hbm2ddl tool to export the database schema:</p>
<!-- raw HTML omitted -->
<p>Quick – what do those trio of booleans do? It’s not remotely obvious and we are forced to consult the docs. How much nicer it would be if the API developers had opted instead to use a flags enumeration, similar to the RegexOptions enumeration in the System.Text.RegularExpressions namespace:</p>
<!-- raw HTML omitted -->
<p>More often, I encounter boolean parameters in the wild where a developer has been charged with enhancing an existing method to behave slightly differently in some particular circumstance, leading to method calls along the lines of:</p>
<!-- raw HTML omitted -->
<p>What does the final parameter do? Again we have to rely on intellisense or navigating to the source. It’s too easy to add the boolean parameter and slow down everyone who follows in our wake. We should take the time to implement the correct solution, whether that be as simple as a separate method with a more specific name, or a polymorphic family of suitably-named classes that implement the same interface. This kind of boolean parameter, quick as it is to add, not only slows us down but is often symptomatic of a deeper flaw in the class design.</p>
<p>Don’t even get me started on the optional parameters introduced in C# 4.0. It’s all too easy to invoke methods without noticing the existence of optional parameters with surprising defaults which can cause unexpected consequences. A sprinkling of syntactic sugar that can act as a catalyst for code decay.</p>
<blockquote>
<p>“Flag arguments are ugly. Passing a boolean into a function is a truly terrible practice. It immediately complicates the signature of the method, loudly proclaiming that this function does more than one thing. It does one thing if the flag is true and another if the flag is false!”</p>
<p>— Robert C. Martin, <a href="http://amzn.to/1lPJsXv">Clean Code</a></p></blockquote>
<p>As with many design principles, the visibility of the method is key in how problematic this code smell becomes. A boolean parameter on a private method, while a potential candidate for refactoring at a suitable time, is not the end of the world. But a boolean parameter on a public method, perhaps a member on a public interface, is a more pressing problem. Think very carefully before adding a boolean parameter to a method on a public API or other service boundary.</p>
<h2 id="antipattern-2-methods-that-unnecessarily-return-booleans">Antipattern 2 – Methods that (unnecessarily) return booleans</h2>
<p>OK, so I’ve explained that I don’t much like methods that take boolean parameters. What about methods that return them?</p>
<p>Well, I am an advocate of <a href="http://en.wikipedia.org/wiki/Command%E2%80%93query_separation">Command-Query Separation</a>. Generally, if a method returns a bool I’m going to assume that it’s free of side effects and is answering a query, like this:</p>
<!-- raw HTML omitted -->
<p>Conversely, when methods actually <em>do</em> stuff (i.e. commands), I wouldn’t expect them to return anything at all, least of all a boolean.</p>
<p>OK, a couple of notable exceptions to this rule. I can just about cope with create/update methods returning an instance of the entity that has been saved, thus:</p>
<!-- raw HTML omitted -->
<p>and I admit to having a soft spot for the TryParse pattern where we expect the happy path to succeed on most occasions:</p>
<!-- raw HTML omitted -->
<p>but booleans returned from methods that perform commands? Well that’s just pointless and confusing. Consider the method signature:</p>
<!-- raw HTML omitted -->
<p>Why return a bool? What does it mean? That the method call was successful? Then why bother mentioning it?<br>
If there is a problem of some kind (say, a user already exists with the specified email address), then throw a suitable exception with the necessary detail that I can choose to catch, log or allow to bubble up as I see fit. By returning a boolean, consumers of the method now need to both catch exceptions <em>and</em> inspect the return value (and what action would be appropriate anyway when faced with a context-free “false” return value?)</p>
<p>Command methods that return booleans feel like insecure children who need to boast of their every achievement. <strong>It’s OK to return void.</strong> Nobody will think any the less of you for simply doing what was asked and keeping quiet. Unix commands have been silently going about their business for years, and I feel that is an ethos that we developers should try to emulate. The era of the contrived return value that has to be dissected for meaning is long gone. Doing what was asked if possible, else throwing an appropriate exception is the twenty-first century way.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Star Of The Week</title>
      <link>https://blog.iannelson.uk/star-of-the-week/</link>
      <pubDate>Thu, 08 May 2014 20:30:11 +0000</pubDate>
      <guid>https://blog.iannelson.uk/star-of-the-week/</guid>
      <description>&lt;p&gt;As a lowly &lt;em&gt;sellsword&lt;/em&gt; amongst the ensemble cast that make up the incestuous York/Leeds IT scene, I am not usually one to be influenced by the promise of titles and honours.&lt;/p&gt;
&lt;p&gt;Time was, long ago, in my first graduate job, that I yearned for a promotion from “Solution Developer” to “Development Specialist”. Now I give little consideration to what I’m called, and sell my services on the basis of what I can &lt;em&gt;do&lt;/em&gt;, and the value I can bring to a project and an organisation.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>As a lowly <em>sellsword</em> amongst the ensemble cast that make up the incestuous York/Leeds IT scene, I am not usually one to be influenced by the promise of titles and honours.</p>
<p>Time was, long ago, in my first graduate job, that I yearned for a promotion from “Solution Developer” to “Development Specialist”. Now I give little consideration to what I’m called, and sell my services on the basis of what I can <em>do</em>, and the value I can bring to a project and an organisation.</p>
<p>So, imagine my surprise when I recently returned to my desk at a client site to find the certificate below resting on my keyboard. It seems my highborn masters had seen fit to dub me (with tongue firmly in cheek, I presume), as their “Star of the Week”!</p>
<!-- raw HTML omitted -->
<p>What had I done to deserve this honour?</p>
<p>The client had an existing solution to generate an XML feed summarising the information held within a database. Unfortunately this process was slow – it took around 45 seconds – and even though the output was aggressively cached, this was still causing a problem.</p>
<p>I actually enjoy occasionally tackling problems like this, where there is an existing solution that meets all functional requirements and my task is simply to improve some nonfunctional requirement – make it faster, make it more maintainable, make it scalable, update the technology stack, etc. The goal is much clearer when you have a reference solution to mimic than when starting with a blank page and having to tease out acceptance criteria from fickle humans!</p>
<p>Unsurprisingly, some baseline profiling revealed that the problems lay in the data access layer, and with the help of Hibernating Rhino’s <a href="http://www.hibernatingrhinos.com/products/efprof">Entity Framework Profiler</a>, I was able to determine that over 35,000 separate database calls were being issued to create a file of a few megabytes.</p>
<p>This was possible because the data access was performed through a series of helper classes that wrapped the EF context and exposed mapped models. While this simplified the data access for most use cases, and helped to encapsulate low-level validation, it was a hindrance for any kind of aggregation or reporting requirement. Essentially the problem boiled down to the <em>SELECT N+1</em> problem on steroids, with a large portion of the object graph steadily loaded into memory.</p>
<p>Wrapping isn’t always a helpful approach…</p>
<!-- raw HTML omitted -->
<p>The answer, having first defined some automated integration tests based on the existing solution, was to avoid using the helpful wrapper/mapper classes and instead write some bespoke EF queries against the underlying data context. I tried to strike a balance between making as few queries as possible without becoming unmaintainable or requiring too many joins. And each query, rather than returning the entire entity, instead projected only the required properties into some anonymous types. A little in-memory post-processing then turned these projections into the desired output format.</p>
<p>The end result? A process that originally made over 35,000 database queries and took 45 seconds was reduced to one that required just 7 queries and completed in around 0.45 seconds. Nice.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Friday Retrospective: My First Printer</title>
      <link>https://blog.iannelson.uk/friday-retrospective-my-first-printer/</link>
      <pubDate>Fri, 25 Apr 2014 05:30:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/friday-retrospective-my-first-printer/</guid>
      <description>&lt;p&gt;My first printer was a Star LC-20 nine pin dot matrix that I received as a Christmas present when I was 15 years old. That’s the kind of nerdy teenager I was, folks. All yuletide long our home rang out with the deafening noise made by those pins rapidly and repeatedly punching through a flimsy ink-soaked ribbon.&lt;/p&gt;
&lt;p&gt;Incidentally, Radio 4 are forever running features about the ongoing decline in audible birdsong in the English countryside. Personally, I think it’s a travesty that a whole generation of kids will grow up unfamiliar with the nerve-shattering noise of a built-to-last dot matrix, the inimitable caterwauling of a 33.6 kbps modem connecting to a dial-up BBS, or the satisfying clunk as a 3.5 inch floppy is gleefully accepted by a disk drive. Moving to an SSD may have provided an incredible boost to my development productivity, but there’s a part of me that misses hearing the faint humming and scratching sounds of traditional hard disk heads moving across a highly-polished platter. But I digress…&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>My first printer was a Star LC-20 nine pin dot matrix that I received as a Christmas present when I was 15 years old. That’s the kind of nerdy teenager I was, folks. All yuletide long our home rang out with the deafening noise made by those pins rapidly and repeatedly punching through a flimsy ink-soaked ribbon.</p>
<p>Incidentally, Radio 4 are forever running features about the ongoing decline in audible birdsong in the English countryside. Personally, I think it’s a travesty that a whole generation of kids will grow up unfamiliar with the nerve-shattering noise of a built-to-last dot matrix, the inimitable caterwauling of a 33.6 kbps modem connecting to a dial-up BBS, or the satisfying clunk as a 3.5 inch floppy is gleefully accepted by a disk drive. Moving to an SSD may have provided an incredible boost to my development productivity, but there’s a part of me that misses hearing the faint humming and scratching sounds of traditional hard disk heads moving across a highly-polished platter. But I digress…</p>
<p>That first printer cost my parents £169.99 – not an insignificant amount of money back in 1991. It printed onto tractor-feed paper, and I received a <em>huge</em> box of the stuff for Christmas. Theoretically it was also capable of printing onto standard A4 sheets too, but this involved so much hassle gingerly feeding individual sheets into the machine that it was simpler just to forget it and stick with the tractor feed option. As a result, all of my GCSE English coursework was submitted on somewhat crinkly US Letter sized tractor feed paper. It may not have been beautiful, but it was considerably more presentable than my handwriting, and I was determined to use the cutting-edge option, dammit!</p>
<p>The LC20 was controlled by four buttons which had to be pressed in odd combinations to trigger line feeds and page feeds (ask your parents), and to switch between one of the four inbuilt “fonts”. More complex settings could be made by poking at shy DIP switches with a biro. It was all a far cry from the wireless connection to embedded web servers that we’ve come to expect from our peripherals these days.</p>
<p>Around the same time as this, I recall shelling out £60 for a Roctec “Roclite” External 1.44 Mb Floppy Drive, after reading exhaustive floppy drive reviews in the inaugural issue of <em>Amiga Shopper</em>. This was pre-Amazon, of course, so I usually made such purchases from GemSoft on Furnival Gate in Sheffield – a day-long expedition via the number 85 bus.</p>
<p>Oh, and a year or so later, I worked all summer long to save the £400 I needed to buy a 20Mb hard drive. Yes, twenty whole megabytes to play with – just imagine the opportunities that this presented to me!</p>
<p>What about you, dear reader? Do you have any fond memories of your earliest computer hardware?</p>
<hr>
<p>Image by Museo del Computer – <a href="http://www.retrocomputing.net/">http://www.retrocomputing.net/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>One Reason Why NCrunch Is Worth The Cost</title>
      <link>https://blog.iannelson.uk/one-reason-why-ncrunch-is-worth-the-cost/</link>
      <pubDate>Tue, 22 Apr 2014 21:25:50 +0000</pubDate>
      <guid>https://blog.iannelson.uk/one-reason-why-ncrunch-is-worth-the-cost/</guid>
      <description>&lt;p&gt;I have been merrilly using &lt;a href=&#34;http://www.ncrunch.net/&#34;&gt;NCrunch&lt;/a&gt; – an “automated concurrent testing tool for Visual Studio” – for almost three years now. I ponied up for a paid license when it made the transition from beta to RTM, and I recently shelled out again for an upgrade to version 2.&lt;/p&gt;
&lt;p&gt;Why?! Why do this when plenty of test runners are free, or bundled with software I already own such as ReSharper and Visual Studio itself?&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I have been merrilly using <a href="http://www.ncrunch.net/">NCrunch</a> – an “automated concurrent testing tool for Visual Studio” – for almost three years now. I ponied up for a paid license when it made the transition from beta to RTM, and I recently shelled out again for an upgrade to version 2.</p>
<p>Why?! Why do this when plenty of test runners are free, or bundled with software I already own such as ReSharper and Visual Studio itself?</p>
<p>To answer that question I sorely wanted to write another “list post” as a follow-up to <em><a href="https://blog.iannelson.uk/12-reasons-why-i-love-unit-tests/">12 Reasons Why I Love Unit Tests</a></em> but as my draft progressed and my thoughts crystallised in front of me on the screen, I realised that all of the points I was trying to convey ultimately boil down to the same one reason:</p>
<!-- raw HTML omitted -->
<h2 id="ncrunch-saves-me-time.wp-block-heading">NCrunch Saves Me Time</h2>
<p>I missed out on the age of the punchcard, thank goodness. I don’t think I could have coped with the torpid feedback cycles that software developers of that era had to endure. Bob Martin describes the multi-day process entertainingly in his excellent book <a href="http://amzn.to/1lQjkZT"><em>The Clean Coder</em></a> – programs written on coding forms with a #2 pencil, typed up by key-punchers, desk-checked, loaded by the computer operators, and ultimately returned wrapped in a rubber band with a printout showing a compile error. It must have been utterly soul-destroying.</p>
<p>Despite having started my own software development career a couple of decades after the use of punchcards died out, I have still been witness to several advancements that have reduced feedback cycle time, enabling complex yet high-quality systems to be developed and enhanced in a fraction of the time that was once possible. I’m thinking of techniques such as <a href="https://blog.iannelson.uk/ndepend/">static code analysis</a>, continuous integration, continuous delivery and of course the widespread adoption of automated testing.</p>
<h3 id="ncrunch-facilitates-the-tdd-discipline.wp-block-heading">NCrunch Facilitates the TDD Discipline</h3>
<p>Done well, Test-Driven Development is a powerful, professional, technique that allows us to develop and maintain solid, clean code in a short time. But without the right tooling to support this process, TDD can feel painful, too much stop-start while we wait on the compiler or test runner, especially if we are deliberately using baby-step techniques such as “Fake It Till You Make It” or “Stair-Step Tests”. Consider the steps we might typically intend to take:</p>
<!-- raw HTML omitted -->
<p>Is it any wonder that we are tempted to cut corners when it comes to TDD?!</p>
<p>But consider what this process is like when the tooling does all the grunt work and context-switching for you in the background:</p>
<!-- raw HTML omitted -->
<p>We are left with just the “interesting” steps, and the TDD process now flows naturally and instinctively. The IDE takes responsibility for constantly compiling and testing the code, and corners are less likely to be cut.</p>
<p>I love this process. I like to make use of the big inexpensive monitors that the twenty-first century has blessed us with. I open up a window for the tests, another for the system under test, and one each for the NCrunch Tests and NCrunch Processing Queue windows – and then I have all I need on a single screen to code tight, well-tested, code at a quick pace:</p>
<!-- raw HTML omitted -->
<p>For me it is this – the facilitation of TDD and the instant feedback – that is the killer benefit of NCrunch. The remaining features that I mention below are merely the icing on the cake, but they do all serve to save me time.</p>
<h3 id="ncrunch-puts-real-time-code-coverage-data-in-my-face.wp-block-heading">NCrunch Puts Real-Time Code-Coverage Data In My Face</h3>
<p>Time was, we would gather test coverage metrics using tools like NCover or dotCover, perhaps running as part of a CI build on the server. Once in a while someone might even deem it worthwhile having a look at the output!</p>
<p>With NCrunch, the code coverage is displayed right there in the IDE on a line-by-line basis as you code, with any uncovered lines sticking out like a sore thumb.</p>
<!-- raw HTML omitted -->
<p>If you really want to see overall metrics for the solutions, NCrunch also provides a separate Metrics window.</p>
<!-- raw HTML omitted -->
<h3 id="ncrunch-doesn-t-make-me-hunt-for-error-messages.wp-block-heading">NCrunch Doesn’t Make Me Hunt For Error Messages</h3>
<p>When my code fails a test assertion, or even when it fails to compile, the reasons, just like the code-coverage data, are right there in my face, almost immediately. I don’t have to go hunting for the problem, I can access the compiler errors or stack traces for failed assertions without leaving the window in which I’m coding.</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h3 id="ncrunch-highlights-slow-running-lines-of-code.wp-block-heading">NCrunch Highlights Slow-Running Lines of Code</h3>
<p>Powerful, expensive performance profiling tools such as Redgate Ants Performance Profiler and JetBrains dotTrace are often used to find bottlenecks in code that has already been developed and is often in production.</p>
<p>NCrunch, as a somewhat unsung benefit, almost absent-mindedly gathers performance metrics as it continuously executes my tests, and highlights slow lines of code with a different coloured marker.</p>
<p>Given the existence of appropriate tests, this means that my attention is drawn to potential problems before the code is even committed to the source control repository.</p>
<!-- raw HTML omitted -->
<h3 id="ncrunch-is-super-configurable.wp-block-heading">NCrunch is Super-Configurable</h3>
<p>Constant background compiling and test running obviously requires some significant computing resources. Fortunately, NCrunch is super-configurable in this regard. It’s easy to specify such things as the number of CPU cores that should be assigned to NCrunch, and the maximum number of processing threads. Not <em>all</em> the tests have to be run continuously – tests irrelevant to the work being undertaken can be ignored, or NCrunch can intelligently execute only those tests it determines are affected by changes.</p>
<p>Today I was working on a small corner of a large .NET solution (60+ projects), so I deliberately told NCrunch to ignore most of those compo<br>
nents entirely, leaving it free to devote all its attention on the few assemblies I was currently enhancing. This resulted in faster feedback, saving me time!</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<h3 id="ncrunch-lets-me-utilise-other-computers-resources.wp-block-heading">NCrunch Lets Me Utilise Other Computers’ Resources</h3>
<p>The latest version of NCrunch even lets me utilise the resources of any other computers or VMs that I may have at my disposal, enslaving them into my army of code compilers and test runners – buwahahahaha!</p>
<p>In the screenshots below you can see that I’ve sneakily added my kids’ laptop as another node in my NCrunch cluster, to offload some of the work from my development machine.</p>
<!-- raw HTML omitted -->
<h3 id="what-more-can-i-say.wp-block-heading">What More Can I Say?</h3>
<p>NCrunch rocks. It has spoiled me for IDEs that don’t offer continuous compilation and testing functionality. The effortless manner in which it gives me feedback on the code and tests that I write every day is one of the things that keeps me interested in improving my .NET development skills after well over a decade at the code face.</p>
<p><em>Disclaimer: Ian Nelson has not received any incentive or inducement to publish the commentary above. I have no material connection with Remco Mulder or Remco Software, other than as a paying customer of the NCrunch product. Some of the links in this post contain my Amazon Associates ID, and I may receive commission if you make a purchase through them.</em></p>
]]></content:encoded>
    </item>
    <item>
      <title>A Personal Stack Overflow Milestone</title>
      <link>https://blog.iannelson.uk/a-personal-stack-overflow-milestone/</link>
      <pubDate>Wed, 04 Jan 2012 21:01:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/a-personal-stack-overflow-milestone/</guid>
      <description>&lt;p&gt;In the grand scheme of things, ’tis but a minor achievement, but I was quite chuffed with myself this evening when my Stack Overflow reputation finally reached the 10,000 mark:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;My girls made me a special “10K” cake to celebrate 🙂&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Kudos to &lt;a href=&#34;http://blog.codinghorror.com/&#34;&gt;Jeff&lt;/a&gt;, &lt;a href=&#34;http://www.joelonsoftware.com/&#34;&gt;Joel&lt;/a&gt; and the team for creating a site that I have found engaging, entertaining and very useful for the last 3 years and 4 months.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In the grand scheme of things, ’tis but a minor achievement, but I was quite chuffed with myself this evening when my Stack Overflow reputation finally reached the 10,000 mark:</p>
<!-- raw HTML omitted -->
<p>My girls made me a special “10K” cake to celebrate 🙂</p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Kudos to <a href="http://blog.codinghorror.com/">Jeff</a>, <a href="http://www.joelonsoftware.com/">Joel</a> and the team for creating a site that I have found engaging, entertaining and very useful for the last 3 years and 4 months.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Wacom Bamboo</title>
      <link>https://blog.iannelson.uk/wacom-bamboo/</link>
      <pubDate>Tue, 13 Sep 2011 10:09:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/wacom-bamboo/</guid>
      <description>&lt;p&gt;Almost everyone who has wandered past the various desks that I’ve occupied over the last year has passed comment on my &lt;a href=&#34;http://amzn.to/1rrSHfo&#34;&gt;Wacom Bamboo Pen Graphics Tablet&lt;/a&gt;. So, let me say a few words about my experiences with that.&lt;/p&gt;
&lt;p&gt;For the longest time, I had been perfectly content to use various &lt;a href=&#34;http://amzn.to/1tLMAqb&#34;&gt;Logitech VX / MX mouses&lt;/a&gt; as my secondary input device, occasionally using a &lt;a href=&#34;http://amzn.to/PBaiVJ&#34;&gt;Microsoft Arc Mouse&lt;/a&gt; (very convenient to carry around in my rucksack).&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Almost everyone who has wandered past the various desks that I’ve occupied over the last year has passed comment on my <a href="http://amzn.to/1rrSHfo">Wacom Bamboo Pen Graphics Tablet</a>. So, let me say a few words about my experiences with that.</p>
<p>For the longest time, I had been perfectly content to use various <a href="http://amzn.to/1tLMAqb">Logitech VX / MX mouses</a> as my secondary input device, occasionally using a <a href="http://amzn.to/PBaiVJ">Microsoft Arc Mouse</a> (very convenient to carry around in my rucksack).</p>
<p>But in the Spring of 2010, I developed a nagging pain in my right forefinger. It sounds silly and trivial, but over the course of a couple of months it developed from a barely-susceptible twinge to something that was genuinely impacting my life – I struggled to open Coke bottles or turn the key in our garage door’s stiff lock.</p>
<p>I turned for advice to Joe Steele, my personal guru of alternative input devices, and someone who I knew had previously suffered with RSI. Dr Steele confirmed that my symptoms mirrored those that he had experienced some years previously, and prescribed a course of two tablets – one for home use and one for client sites.</p>
<p>The Wacom Bamboo is an excellent piece of kit, and reasonably priced compared to other tablets and decent mouses. But it does take quite some getting used to. There is a knack to moving the pen around <em>just</em> above the surface of the tablet – a gap small enough that the movement is perceived by the tablet (and the mouse cursor moves), but without actually touching the tablet (which leads to dragging-and-dropping). This is particularly problematic if you venture anywhere near Visual Studio’s Solution Explorer – it was quite embarrassing how many times I checked strange folder/file moves into source control in the early days of my Bamboo usage. This acted as a good lesson to steer clear of Solution Explorer and get into the habit of navigating using ReSharper instead!</p>
<p>Overall, it took me a good few months before I was as fast and accurate using the Bamboo as I was using a traditional mouse. This could be quite frustrating when I just wanted to get something done, and on a number of occasions The Wife snuck into my office and caught me of an evening, guiltily risking my health with an old VX Revolution. As with many things, perseverance is the key – having Bamboos at both home and work certainly helped. Over time the pain in my finger subsided and has now disappeared altogether.</p>
<p>Two specific tips if you’re thinking of giving the Wacom Bamboo a try for day-to-day computing use:</p>
<p>Firstly, be sure to configure the device to use “Mouse Mode” rather than the default “Pen Mode”. Mouse mode “moves the screen cursor with a ‘pick up and slide’ motion similar to using a traditional mouse”, whilst Pen mode “sets the cursor so that its movement corresponds with the position of your Bamboo pen on the tablet – wherever you place your pen on the tablet, the cursor will jump to a corresponding point on the screen.” In my experience, Pen mode led to the cursor jumping wildly around the screen unless I gave consideration to where on the tablet I was placing the pen – a very unnatural experience after many years of using a “traditional” mouse.</p>
<p>Secondly, I suggest mapping the lower button on the barrel of the pen to the “double-click” action, as trying to emulate a double-click by tapping the pen nib on the tablet twice in quick succession is awkward – a problem which compounds if you need to perform many double-clicks, such as navigating around a file hierarchy in Windows Explorer.</p>
<p>I mentioned a few years ago that <a href="https://blog.iannelson.uk/a-keyboard-makes-a-hell-of-a-difference/">a keyboard makes a hell of a difference</a> – well, it turns out that selection of secondary input devices can also make a huge difference to the long-term viability of a career, if you can invest the time to become proficient in their use.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Schoolboy Error Of The Day</title>
      <link>https://blog.iannelson.uk/schoolboy-error-of-the-day/</link>
      <pubDate>Wed, 17 Aug 2011 08:08:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/schoolboy-error-of-the-day/</guid>
      <description>&lt;p&gt;This dumb mistake just cost me an hour spelunking around in the debugger:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;(where source is e.g. “&lt;a href=&#34;http://foo.com/status/all-is-good&#34;&gt;http://foo.com/status/all-is-good&lt;/a&gt;“)&lt;/p&gt;
&lt;p&gt;Fortunately the ramifications were picked up in the acceptance tests, but the root cause wasn’t at all obvious from such a high level.&lt;/p&gt;
&lt;p&gt;Lesson for the day – code is never too trivial to warrant unit testing.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>This dumb mistake just cost me an hour spelunking around in the debugger:</p>
<!-- raw HTML omitted -->
<p>(where source is e.g. “<a href="http://foo.com/status/all-is-good">http://foo.com/status/all-is-good</a>“)</p>
<p>Fortunately the ramifications were picked up in the acceptance tests, but the root cause wasn’t at all obvious from such a high level.</p>
<p>Lesson for the day – code is never too trivial to warrant unit testing.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Entity Framework Week Part 4: Features and Further Investigations</title>
      <link>https://blog.iannelson.uk/entity-framework-week-part-4-features-and-further-investigations/</link>
      <pubDate>Thu, 10 Mar 2011 09:03:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/entity-framework-week-part-4-features-and-further-investigations/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the fourth in a series of five posts recounting my experiences using Entity Framework Code-First to replace ADO.NET and stored procedures in a client’s existing application. &lt;a href=&#34;https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/&#34;&gt;The introductory post in the series is here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I didn’t want this series of posts to descend into a point-scoring &lt;a href=&#34;http://www.nhforge.org&#34;&gt;NHibernate&lt;/a&gt;-versus-&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb399572.aspx&#34;&gt;Entity Framework&lt;/a&gt; comparison, but…&lt;/p&gt;
&lt;p&gt;I now have a basic proof-of-concept up and running, with my client’s nascent application now being powered by Entity Framework Code-First CTP5 rather than a hand-rolled DAL. So, I had some time to consider future functional and non-functional requirements that the team would be asked to develop and support, and investigate how EF would meet the challenge.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><em>This is the fourth in a series of five posts recounting my experiences using Entity Framework Code-First to replace ADO.NET and stored procedures in a client’s existing application. <a href="https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/">The introductory post in the series is here</a>.</em></p>
<p>I didn’t want this series of posts to descend into a point-scoring <a href="http://www.nhforge.org">NHibernate</a>-versus-<a href="http://msdn.microsoft.com/en-us/library/bb399572.aspx">Entity Framework</a> comparison, but…</p>
<p>I now have a basic proof-of-concept up and running, with my client’s nascent application now being powered by Entity Framework Code-First CTP5 rather than a hand-rolled DAL. So, I had some time to consider future functional and non-functional requirements that the team would be asked to develop and support, and investigate how EF would meet the challenge.</p>
<h3 id="caching">Caching</h3>
<p>I was genuinely surprised to learn that Entity Framework still doesn’t include any out-of-the-box support for integrating second-level caching, for example to cache reference data. It seems there is a body of opinion stating that caching should not be the responsibility of the data access layer. I disagree, and I think this is one of the major benefits NHibernate still has over Entity Framework, with its multiple flexible and configurable second-level cache providers.</p>
<h3 id="targeting-alternative-providers-sqlite-">Targeting Alternative Providers (SQLite)</h3>
<p>When working with NHibernate, I often target <a href="http://www.sqlite.org">SQLite</a> for fast integration tests against an in-memory database, rather than maintaining a testing version of the MSSQL/Oracle databases that my applications usually use for their bitbucket. I was pleased to see the discussions on the System.Data.SQLite page suggesting that this approach is possible with Entity Framework too, but I didn’t spend any time attempting to get this working.</p>
<h3 id="auditing-functionality">Auditing Functionality</h3>
<p>Entity Framework does not appear to support the rich events and listeners model that is offered by NHibernate and frequently used to develop application auditing functionality. The recommended solution to achieve this scenario is to override the virtual SaveChanges method on DbContext and add validation and auditing logic there. For more details, see <a href="http://my.safaribooksonline.com/book/software-engineering-and-development/9780596807276/working-with-object-services/261">page 261 of Programming Entity Framework</a>.</p>
<h3 id="bulk-operations">Bulk Operations</h3>
<p>I have not yet encountered any Entity Framework support for bulk update/delete operations akin to NHibernate’s <a href="http://ayende.com/blog/archive/2009/05/28/nhibernate-ndash-executable-dml.aspx">Executable DML</a> functionality. Such requirements are usually relatively rare, but it’s a shame to have to fall back to writing stored procedures for relatively simple operations which can be described in terms of the domain model.</p>
<h3 id="query-batching">Query Batching</h3>
<p>There does not appear to be any way to do query batching in Entity Framework, as per <a href="http://ayende.com/blog/archive/2009/04/27/nhibernate-futures.aspx">NHibernate Futures</a>. Multiple queries result in multiple network trips to the database, sadly. Similarly, there’s no support for write batching and batched collection loads.</p>
<h3 id="concurrency-and-versioning">Concurrency and Versioning</h3>
<p>Entity framework supports optimistic concurrency. <a href="http://my.safaribooksonline.com/book/software-engineering-and-development/9780596807276/planning-for-concurrency-problems/659">Chapter 23 of Programming Entity Framework</a> explains in detail how this can be configured and utilised by your application. Entity Framework also supports rowversion fields for concurrency checks.</p>
<h3 id="extra-lazy-properties">Extra-Lazy Properties</h3>
<p>Unlike NHibernate, Entity Framework currently has no notion of “extra-lazy” properties. Requesting the Count of a child collection (e.g. Order.Lines.Count) will therefore trigger the loading of all entities (Lines) in the child collection. Not nice. Yes, we can work around this by making the appropriate count query at a higher level but it’s much nicer to be able to traverse the domain model relationships and let persistence ignorance work it’s magic.</p>
<h3 id="integration-with-the-wider-net-stack">Integration with the Wider .NET Stack</h3>
<p>To my mind, one of the key selling points of Entity Framework over NHibernate is its out-of-the-box integration with other areas of the .NET stack – notably the ability to power <a href="http://www.asp.net/dynamicdata">ASP.NET Dynamic Data</a> sites (which are great for simple pages to maintain reference data) and <a href="http://msdn.microsoft.com/en-us/data/bb931106">WCF Data Services</a>.</p>
<h3 id="query-techniques">Query Techniques</h3>
<p>NHibernate offers a world of choice when it comes to methods for querying the model: HQL, Criteria, QueryOver, LINQ, Named Queries, etc. These each offer a plethora of possible options and tweaks including query caching, batching and futures. By comparison, Entity Framework offers a comprehensive LINQ provider (with decent extensions to specify eager-loading of child entities), or Entity SQL. And that’s your lot.</p>
<p>By the end of my fourth day, I had a working proof-of-concept using Entity Framework Code First to power my client’s application, and I had a good idea of how suitable it was to meet future requirements lurking in the product backlog.</p>
<p>In the <a href="https://blog.iannelson.uk/entity-framework-week-part-5-concluding-thoughts/">fifth and final part of this series of posts</a>, I’ll write some concluding thoughts on my overall experiences spending a week with Entity Framework.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Entity Framework Week Part 3: Runtime Issues Encountered</title>
      <link>https://blog.iannelson.uk/entity-framework-week-part-3-runtime-issues-encountered/</link>
      <pubDate>Wed, 09 Mar 2011 09:03:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/entity-framework-week-part-3-runtime-issues-encountered/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the third in a series of five posts recounting my experiences using Entity Framework Code-First to replace ADO.NET and stored procedures in a client’s existing application. &lt;a href=&#34;https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/&#34;&gt;The introductory post in the series is here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Having configured and initialized &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb399572.aspx&#34;&gt;Entity Framework&lt;/a&gt;, and tweaked the mappings, by Day 3 I was all set to start consuming my shiny new DbContext implementation from the application code, and actually get some CRUD work done. Not unexpectedly, I hit a few issues along the way…&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><em>This is the third in a series of five posts recounting my experiences using Entity Framework Code-First to replace ADO.NET and stored procedures in a client’s existing application. <a href="https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/">The introductory post in the series is here</a>.</em></p>
<p>Having configured and initialized <a href="http://msdn.microsoft.com/en-us/library/bb399572.aspx">Entity Framework</a>, and tweaked the mappings, by Day 3 I was all set to start consuming my shiny new DbContext implementation from the application code, and actually get some CRUD work done. Not unexpectedly, I hit a few issues along the way…</p>
<h3 id="proxy-generation">Proxy Generation</h3>
<p>As a long-term <a href="http://www.nhforge.org">NHibernate</a> user, I habitually mark all members on my domain classes as virtual, since this is a requirement for entities to be replace at runtime by proxies. Remember that NHibernate is a port from the Java world, where all instance methods are virtual by default.</p>
<p>Now, this habit led to some unexpected behaviour when I attempted to use Entity Framework to persist the same domain objects, namely exception messages such as:</p>
<blockquote>
<p>The property ‘Foo’ on type ‘Bar_B6089AE40D178593955F1328A70EAA3D8F0F01DDE9F9FBD615F60A34F9178B94’ cannot be set because the collection is already set to an EntityCollection.</p></blockquote>
<p>Clear as mud, eh? A little Googling eventually unearthed the following posts from other people experiencing this issue:</p>
<ul>
<li><a href="http://stackoverflow.com/questions/4069563/why-is-my-entity-framework-code-first-proxy-collection-null-and-why-cant-i-set-i">Why is my Entity Framework Code First proxy collection null and why can’t I set it?</a></li>
<li><a href="http://stackoverflow.com/questions/3858922/code-first-adding-to-collections-how-to-use-code-first-with-repositories-advice">Code First adding to collections? How to use Code First with repositories? Advice me please</a></li>
<li><a href="http://social.msdn.microsoft.com/Forums/en/adonetefx/thread/99d8d4a1-5ab1-42dc-b9db-5087be02162d">Code First EF4 with N-Tier.. I’m really stuck on this one issue</a></li>
</ul>
<p>This latter post on the MSDN forums includes the following explanation from one of the guys on the Entity Framework team:</p>
<blockquote>
<p>“If you make all your properties virtual then EF will generate proxy classes at runtime that derives from your POCO classed, these proxies allow EF to find out about changes in real-time rather than having to capture the original values of your object and then scan for changes when you save (this is obviously has performance and memory usage benefits but the difference will be negligible unless you have a large number of entities loaded into memory). These are known as ‘change tracking proxies’, if you make your navigation properties virtual then a proxy is still generated but it is much simpler and just includes some logic to perform lazy loading when you access a navigation property.</p></blockquote>
<blockquote>
<p>Because your original code was generating change tracking proxies, EF was replacing your collection property with a special collection type to help it find out about changes. Because you try and set the collection back to a simple list in the constructor you are getting the exception.</p></blockquote>
<blockquote>
<p>Unless you are seeing performance issues I would follow Terrence’s suggestion and just remove ‘virtual’ from your non-navigation properties.”</p></blockquote>
<p>This feels a little bit strange, and I’m not convinced that we are really getting persistence ignorance if we experience differing behaviour depending on whether or not we have chosen to make all our members virtual. I haven’t invested much time looking into the benefits of these “Change-Tracking Proxies”, or how it is possible to utilise these without causing the “collection is already set to an EntityCollection” exception. I just did what the man said and removed the virtual keyword from most non-navigation properties.</p>
<h3 id="a-runtime-exception-when-lazy-loading">A Runtime Exception When Lazy-Loading</h3>
<p>At one point I experienced an exception message along the lines of:</p>
<blockquote>
<p>“Entities in ‘CodeFirstContainer_Sessions’ participate in the ‘Session_Season’ relationship. 0 related ‘Session_Season_Target’ were found. 1 ‘Session_Season_Target’ is expected.”</p></blockquote>
<p>This was caused by my navigation property (Session.Season) not having been set as virtual, so no proxy was being created.</p>
<p>Incidentally, it is worth highlighting that lazy-loading must occur within the scope of an open DbContext (i.e. within the Unit of Work). It is not reasonable to expect to transparently load the navigation property after the database connection has been closed (this is analogous to attempting to lazy-load in NHibernate after closing the Session).</p>
<h3 id="cascades">Cascades</h3>
<p>In NHibernate, cascading saves/updates/deletes have to be specified manually on all foreign key relationships – the default behaviour is not to cascade any changes when committing changes, which often leads to newcomers experiencing an error message “not-null property references a null or transient value”.</p>
<p>Entity Framework takes a more convention-based approach and assumes that all saves and updates should cascade. So, if you save a shiny new Order with an associated Address and a handful of Lines, Entity Framework will determine that it should first insert the Address row, then the Order row, and then each Line row. Sweet. Updates similarly cascade. Assuming you are happy with this behaviour (which seems sensible), then all should be well.</p>
<p>Deletes, on the other hand, are a bit strange. Entity Framework will not take responsibility for cascading a delete in the database – it expects that you will achieve this by setting a cascading delete on the foreign key relationship in the RDBMS.</p>
<p>Having said this, if you delete a parent entity in Entity Framework, it <em>will</em> attempt to issue delete statements for any child entities which have been loaded into the current DbContext, but it will not initialize any child entities which have not yet been loaded. This may lead to the RDBMS throwing foreign key constraint violation exceptions if a cascading delete has not been specified. For more details about how cascade delete “works” in Entity Framework, <a href="http://blogs.msdn.com/b/alexj/archive/2009/08/19/tip-33-how-cascade-delete-really-works-in-ef.aspx">see this blog post</a>.</p>
<p>Personally, I think this behaviour is pretty shoddy, but there you have it! Forewarned is forearmed.</p>
<p>In light of this behaviour I had to make modifications to the database schema to set cascading deletes on all the appropriate foreign key relationships. For many line-of-business applications, deletes are actually pretty rare events, and in the short term I suspect this issue is more likely to be encountered when clearing down data in integration tests than in actual application use.</p>
<h3 id="initializing-child-objects-on-domain-entities">Initializing Child Objects on Domain Entities</h3>
<p>I habitually add code to the constructors of domain entities to initialise child entities to sensible defaults – I find it helps to ensure that objects are always in a valid state, and reduces the likelihood of encountering an unhandled NullReferenceException. So, for example, I would usually have something like this:</p>
<p>Unfortunately, when using this approach with Entity Framework, I found that when loading an existing Order which has an associated Address, the Order.Address object was always reset to its default.</p>
<p>Now, I realise that making calls to virtual members in a constructor is not really a good idea (heaven knows Resharper and Coderush have both nagged me about it often enough), but NHibernate never had a problem with<br>
this approach. Nevertheless, I tried to do things properly and replaced the automatic properties with backing fields….</p>
<p>But still no dice. I then tried putting initialization logic in the property’s getter….</p>
<p>But nothing worked. Every time I loaded an Order, the Order.Address object was reset back to its default instead of containing the data loaded from the database.</p>
<p>This is quite frustrating and as yet I haven’t been able to find a workaround, other than to abandon my plans to perform object initialization in the domain model and instead handle it in the service layer, with all the resultant null-checking code that will ensue.</p>
<p>While trying to find a solution, I did stumble across this comment from Rowan Miller that “More flexibility in how we interact with classes is a common ask for EF and our team is looking at how we can support this at the moment.”   Are we asking for flexibility? I thought we were just asking for the persistence ignorance that had long been promised.</p>
<p>Despite these issues, in three short days I had gone from knowing next to nothing about Entity Framework 4 Code first, to using it to perform almost all of the data access required by a small application. In the <a href="https://blog.iannelson.uk/entity-framework-week-part-4-features-and-further-investigations/">fourth part of this series</a> I’ll consider some of the additional features and application requirements that I would expect an ORM to handle, and see how EF meets the challenge.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Entity Framework Week Part 2: Conventions and Fluent Mappings</title>
      <link>https://blog.iannelson.uk/entity-framework-week-part-2-conventions-and-fluent-mappings/</link>
      <pubDate>Tue, 08 Mar 2011 09:03:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/entity-framework-week-part-2-conventions-and-fluent-mappings/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the second in a series of five posts recounting my experiences using Entity Framework Code-First to replace ADO.NET and stored procedures in a client’s existing application. &lt;a href=&#34;https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/&#34;&gt;The introductory post in the series is here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As mentioned in yesterday’s post, I was attempting to use &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb399572.aspx&#34;&gt;Entity Framework&lt;/a&gt; Code-First CTP5 to map an existing domain model to an existing database schema. Fortunately the project was in its infancy and there was a high degree of cohesion between the two models. I therefore didn’t anticipate too many difficulties ahead – the occasional naming discrepancy to resolve, and table-per-hierarchy mappings that would need their discriminators specifying – nothing too complicated really. I hoped to make as few changes as possible to either the database schema or domain model.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><em>This is the second in a series of five posts recounting my experiences using Entity Framework Code-First to replace ADO.NET and stored procedures in a client’s existing application. <a href="https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/">The introductory post in the series is here</a>.</em></p>
<p>As mentioned in yesterday’s post, I was attempting to use <a href="http://msdn.microsoft.com/en-us/library/bb399572.aspx">Entity Framework</a> Code-First CTP5 to map an existing domain model to an existing database schema. Fortunately the project was in its infancy and there was a high degree of cohesion between the two models. I therefore didn’t anticipate too many difficulties ahead – the occasional naming discrepancy to resolve, and table-per-hierarchy mappings that would need their discriminators specifying – nothing too complicated really. I hoped to make as few changes as possible to either the database schema or domain model.</p>
<p>Entity Framework Code-First uses a set of conventions to “discover” the mappings from domain objects to database. This is broadly analogous to James Gregory’s Fluent NHibernate <a href="http://wiki.fluentnhibernate.org/Auto_Mapping">AutoMapping</a> functionality.</p>
<p>As with Fluent NHibernate, it is possible to add custom conventions, and to manually override mappings for specific properties which deviate from the conventions. It is also possible to remove existing conventions.</p>
<p>All of these modifications to the model mappings are affected by overriding the virtual OnModelCreating method in our concrete implementation of DbContext. I was initially worried about the sheer volume of code that might be included in this method, and was relieved to discover that mapping overrides related to particular entities can be separated out into the constructor of generic implementations of EntityTypeConfiguration, not unlike the generic ClassMap in Fluent NHibernate.</p>
<h3 id="custom-conventions">Custom Conventions</h3>
<p>In the domain model I was working with, all entities were derived from an abstract base Entity class which defined an integer Id property. By contrast, the primary keys on the database tables were all prefixed with the name of the table/entity. Neither of these situations are ideal, but nor are they all that unusual, and I sought a way of “teaching” this convention to our custom EF context.</p>
<p>It took me some time to discover that custom conventions are even possible in CTP5, and I had initially resigned myself to manually overriding the names of each and every primary key property. It was only through stumbling upon <a href="http://blogs.msdn.com/b/adonet/archive/2011/01/10/ef-feature-ctp5-pluggable-conventions.aspx">this post on the ADO.NET team blog</a> that I found what I was looking for. Note that this post does include the caveat “There are a number of rough edges and the API surface is likely to change”.</p>
<p>My first impression is that custom Entity Framework conventions could turn out to be far more powerful than those offered by Fluent NHibernate, but they are also trickier to develop, requiring an understanding of the valid options for the two generic parameters that IConfigurationConvention can take, and what actions should be taken by the custom convention.</p>
<p>Still, after a little trial and error I was able to write the custom primary key convention that I required:</p>
<p>I was disappointed that I had to insert a guard clause to ignore this convention for the concrete subclasses of hierarchies that are mapped using table-per-hierarchy (i.e. ProductFeature and ProductInsert). Given time I would hope to find a generic way of achieving this convention that doesn’t require hardcoded references to specific Domain objects from within the convention definition.</p>
<p>Compare and contrast with the equivalent code for Fluent NHibernate:</p>
<p><strong>Updated:</strong></p>
<p>Since I wrote the section above, the ADO.NET team have <a href="http://blogs.msdn.com/b/adonet/archive/2011/03/02/ef-4-1-is-coming-dbcontext-api-amp-code-first-rtw.aspx">announced details of the forthcoming Entity Framework 4.1 Release Candidate</a>, which removes this ability add conventions:</p>
<blockquote>
<p>“This was a very painful decision but we have decided to remove the ability to add custom conventions for our first RC/RTW. It has become apparent we need to do some work to improve the usability of this feature and unfortunately we couldn’t find time in the schedule to do this and get quality up the required level. You will still be able to remove our default conventions in RC/RTW.”</p></blockquote>
<p>For what it’s worth, I think this was the right decision to make. A lack of “pluggable” conventions is slightly disappointing, but it can easily be worked around by making the appropriate overrides with the fluent mappings. Better to hold off an nail an API that’s both powerful and usable than go too soon with something that’s liable to confuse and confound.</p>
<h3 id="removal-of-default-conventions">Removal of Default Conventions</h3>
<p>Another nice feature described in the <a href="http://blogs.msdn.com/b/adonet/archive/2011/01/10/ef-feature-ctp5-pluggable-conventions.aspx">Pluggable Conventions blog post</a> is the ability to remove some of the default conventions, which I immediately put to good use by disabling the default PluralizingTableNameConvention:</p>
<p><em>(I mean, for goodness sake, who in their right mind pluralizes table names anyway? Yes, it’s very impressive that this library knows that the plural of “goose” is “geese”, but it would be more beneficial if that were an extension method on System.String in the BCL rather than being buried in the bowels of System.Data.Entity.Design. Then perhaps the ADO.NET team could be left to get on with developing something more useful, like second-level caching? Sorry, rant over…)</em></p>
<h3 id="fluent-mapping-api">Fluent Mapping API</h3>
<p>Most manual tweaks to the model are fairly straightforward to perform, and there are a good set of examples in <a href="http://blogs.msdn.com/b/adonet/archive/2010/12/14/ef-feature-ctp5-fluent-api-samples.aspx">this post on the ADO.NET team blog</a>.</p>
<p>I did encounter some difficulty with the mapping of one-to-many relationships, which felt quite cumbersome to perform in comparison to the brevity of Fluent NHibernate’s API. Here’s how you’d rename a foreign key on a unidirectional one-to-many relationship in Fluent NHibernate:</p>
<p>Whilst in Entity Framework code-first, the equivalent is:</p>
<p>To be fair, I think part of this clumsiness arises because Entity Framework is allowing us to define both ends of a bidirectional relationship in a single place, whereas <a href="http://www.nhforge.org">NHibernate</a> requires us to define each end separately. It’s just unfortunate that in unidirectional situations like this example we end up with the WithMany().IsIndependent() noise in the middle of the syntax.</p>
<p>Having learned the odd syntax required to rename these one-to-many foreign keys, I then wasted an inordinate amount of time trying to make this actually work. Many of my waking hours were blighted by an InvalidOperationException (“Sequence contains more than one matching element”) originating from deep within the framework. A quick ferret aro<br>
und on Stack Overflow revealed that I was not the only person currently banging his or her head on this particular brick wall:</p>
<ul>
<li><a href="http://stackoverflow.com/questions/5008479/ef-code-first-ctp5-using-the-name-of-the-property-as-column-name-for-foreign-ke">EF Code First CTP5 – Using the name of the property as column name for foreign key</a></li>
<li><a href="http://stackoverflow.com/questions/4981228/entity-framework-4-ctp-5-self-referencing-many-to-many">Entity Framework 4 CTP 5 Self Referencing Many-to-Many</a></li>
<li><a href="http://stackoverflow.com/questions/4660908/entity-framework-ctp5-fluent-api-rename-column-of-navigation-property">Entity framework (CTP5, Fluent API). Rename column of navigation property</a></li>
</ul>
<p>Eventually <a href="http://stackoverflow.com/questions/5008479/ef-code-first-ctp5-using-the-name-of-the-property-as-column-name-for-foreign-ke/5090600#5090600">Diego Mijelshon figured out what was amiss</a>. It seems the mapping failure was due to the Id property being defined in a base class rather than on the concrete class being mapped. Whether this is intentional behaviour or a bug in the CTP5, I’m not sure, but I worked around this issue by modifying the domain model and ditching the hierarchy of base classes altogether, leaving the Id and other common properties defined only on interfaces. <a href="http://ayende.com/blog/archive/2011/02/21/code-review-guidelines-avoid-inheritance-for-properties.aspx">Ayende would be pleased</a>.</p>
<p>Two days into my adventure, and my database and domain model were happily mapped. In <a href="https://blog.iannelson.uk/entity-framework-week-part-3-runtime-issues-encountered/">part three</a> I’ll look at some of the issues I encountered at runtime, which necessitated further tweaks to the domain model and database.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Entity Framework Week Part 1: Introduction, Configuration and Initialization</title>
      <link>https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/</link>
      <pubDate>Mon, 07 Mar 2011 09:03:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/</guid>
      <description>&lt;p&gt;In February 2011 I found myself doing some contract development work in a team that was still doing data access using raw ADO.NET and stored procedures. Being the &lt;a href=&#34;http://www.nhforge.org&#34;&gt;NHibernate&lt;/a&gt; fanboy that I am, I naturally attempted to persuade them of the benefits of moving over to NH, even going so far as to develop (in my own time) an NH-powered version of their application.&lt;/p&gt;
&lt;p&gt;My efforts were &lt;em&gt;partially&lt;/em&gt; successful. The team were sold on the idea of using an ORM, but wanted me to develop a second proof of concept using Microsoft ADO.NET &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb399572.aspx&#34;&gt;Entity Framework&lt;/a&gt; rather than NHibernate. This prompted much mirth amongst my FaceBook friends.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In February 2011 I found myself doing some contract development work in a team that was still doing data access using raw ADO.NET and stored procedures. Being the <a href="http://www.nhforge.org">NHibernate</a> fanboy that I am, I naturally attempted to persuade them of the benefits of moving over to NH, even going so far as to develop (in my own time) an NH-powered version of their application.</p>
<p>My efforts were <em>partially</em> successful. The team were sold on the idea of using an ORM, but wanted me to develop a second proof of concept using Microsoft ADO.NET <a href="http://msdn.microsoft.com/en-us/library/bb399572.aspx">Entity Framework</a> rather than NHibernate. This prompted much mirth amongst my FaceBook friends.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>I decided to throw myself into the task, and use this opportunity to spend some time getting to grips with Entity Framework in a real-life scenario for a couple of weeks. I figured that in the best-case scenario, I would learn to love EF even more than NH, and bolster my CV. Worst case, I’d hate it but would be moving on to a new contract shortly anyway, so wouldn’t have to live with it for too long. And of course I was getting paid for the experience either way, so what’s not to like?!</p>
<p>A couple of friends rightly suggested that I ought to blog about my experiences, so here we go.</p>
<p>This series of five blog posts details the thoughts and experiences I encountered during my week-long adventure with Entity Framework. It isn’t an EF walkthrough, nor is it a comprehensive EF-vs-NH feature comparison (the web is littered with those).</p>
<ol>
<li><a href="https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/">Introduction, Configuration and Initialization</a></li>
<li><a href="https://blog.iannelson.uk/entity-framework-week-part-2-conventions-and-fluent-mappings/">Conventions and Fluent Mappings</a></li>
<li><a href="https://blog.iannelson.uk/entity-framework-week-part-3-runtime-issues-encountered/">Runtime Issues Encountered</a></li>
<li><a href="https://blog.iannelson.uk/entity-framework-week-part-4-features-and-further-investigations/">Features and Further Investigations</a></li>
<li><a href="https://blog.iannelson.uk/entity-framework-week-part-5-concluding-thoughts/">Concluding Thoughts</a></li>
</ol>
<h3 id="choosing-code-first">Choosing Code-First</h3>
<p>When last I had a quick play with Entity Framework in the summer of 2008, it was very IDE and database-driven – the development process entailed dragging tables onto a designer surface which generated partial classes to represent objects, etc. Yuk! The lack of support for a domain-driven, persistence-ignorant approach was a real turn-off for me, prompting me to add my name to the list of signatories on the infamous <a href="http://efvote.wufoo.com/forms/ado-net-entity-framework-vote-of-no-confidence/">ADO.NET Entity Framework Vote of No Confidence</a>.</p>
<p>It was therefore a relief to discover that Entity Framework now supports a “Code-First” development paradigm, whereby EF can be used like a traditional ORM to fluently map an existing domain model to an existing database. At the time, this was still available only as a Community Technology Preview (<a href="http://www.microsoft.com/downloads/en/details.aspx?FamilyID=35adb688-f8a7-4d28-86b1-b6235385389d">CTP5</a>), but given my remit was to introduce EF to an existing solution, it was a no-brainer to choose this option for the proof of concept, even though this would potentially leave me exposed to bugs and breaking API changes.</p>
<h3 id="configuration">Configuration</h3>
<p>Configuring Entity Framework seemed a lot easier than the equivalent procedure with NHibernate, filled as it is with esoteric options which can often be somewhat perplexing to NH newbies. With EF, the walkthroughs told me that essentially, all I needed to do was create a subclass of DbContext and Bob would be my mother’s brother. They were right. If anything, it was all too easy, and I wondered how and where I would get the option to configure details such as the second-level cache provider and ADO batch size.</p>
<p>I made use of a constructor overload on DbContext which takes a string parameter called nameOrConnectionString. Initially I attempted to pass into this parameter a connection string obtained from the app.config file using System.Configuration.ConfigurationManager, but this led to error messages along the lines of</p>
<blockquote>
<p>“Unable to determine the provider name for connection of type ‘System.Data.SqlClient.SqlConnection’”</p></blockquote>
<p>It seems that the connection strings used by Entity Framework are not the common or garden connection strings that we know and love, but instead special EF connection strings. Fortunately, a simple remedy to this issue was to instead just pass the connection string <em>name</em> into the exact same parameter. <a href="http://social.msdn.microsoft.com/Forums/eu/adonetefx/thread/8d18825d-7e44-4c7f-9e7d-1e73479fe0e7">See this forum post for more details</a>.</p>
<h3 id="database-initializer-strategies">Database Initializer Strategies</h3>
<p><a href="http://efprof.com">Entity Profiler</a> revealed that Entity Framework was unsuccessfully attempting to access a nonexistent database table called dbo.EdmMetadata. A little light Googling revealed that this is used by Entity Framework to store (perhaps unsurprisingly) metadata about the Entity Data Model. Why does it do this? Presumably so that it can decide at application start up whether code changes to the model require it to automagically make associated changes to the database schema. Some Summer 2010 blog posts from Scotts <a href="http://weblogs.asp.net/scottgu/archive/2010/07/16/code-first-development-with-entity-framework-4.aspx">Guthrie</a> and <a href="http://www.hanselman.com/blog/SimpleCodeFirstWithEntityFramework4MagicUnicornFeatureCTP4.aspx">Hanselman</a> show off the ability of Entity Framework to automatically create and update databases in response to model changes.</p>
<p>Now, this is all very clever and might be fine for hobbyist websites, integration tests and those quintessential “Look – no code!” TechEd presentations, but in an enterprise scenario it’s liable to cause acute apoplexy in DBAs.</p>
<p>Fortunately we can opt to suppress this crazy behaviour altogether by passing a null strategy into DbDatabase.SetInitializer, thus:</p>
<p>That was day one over – I was officially up and running in the brave new (to me) world of Entity Framework. In <a href="https://blog.iannelson.uk/entity-framework-week-part-2-conventions-and-fluent-mappings/">part two of this series</a> I’ll take a look at the mapping tweaks I had to make to successfully map our existing domain model to our existing database.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Enterprise Integration Anti-Patterns #2 – Shared Assemblies</title>
      <link>https://blog.iannelson.uk/enterprise-integration-anti-patterns-2-shared-assemblies/</link>
      <pubDate>Wed, 01 Dec 2010 10:12:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/enterprise-integration-anti-patterns-2-shared-assemblies/</guid>
      <description>&lt;p&gt;Having slain the beast that is &lt;a href=&#34;https://blog.iannelson.uk/enterprise-integration-anti-patterns-1-the-shared-database/&#34;&gt;Shared Database&lt;/a&gt;, the next dragon to appear on my Enterprise Integration horizon is Shared Assemblies. That is, the suggestion that Application A can leverage the functionality of Application B by simply adding references to B’s DLLs. After all, this potential for reuse is why we put our code in reusable assemblies in the first place, isn’t it..?!&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Having slain the beast that is <a href="https://blog.iannelson.uk/enterprise-integration-anti-patterns-1-the-shared-database/">Shared Database</a>, the next dragon to appear on my Enterprise Integration horizon is Shared Assemblies. That is, the suggestion that Application A can leverage the functionality of Application B by simply adding references to B’s DLLs. After all, this potential for reuse is why we put our code in reusable assemblies in the first place, isn’t it..?!<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>Well, no. Actually we usually break our application apart into assemblies to create a maintainable and testable architecture. An assembly is a coarse-grained unit of encapsulated functionality in that architecture; the fact that it is the smallest deployable unit in the .NET world is not necessarily an indication that we intend or desire our assemblies to be shared with other applications.</p>
<p>In my experience, sharing assemblies works only when they have been developed with this intention in mind. It’s feasible to share DLLs that contain discrete chunks of easily-encapsulated functionality that have no need for external dependencies (hasn’t every dev shop got a “common” or “utilities” library hanging around somewhere?!) but it’s quite another matter to start taking a wholesale dependency on the guts of another application.</p>
<p>So, before you try the shared assemblies approach to enterprise integration, here are a few things to consider:</p>
<h3 id="is-it-even-possible">Is It Even Possible?</h3>
<p>Firstly, this approach makes the assumption that the application to be referenced has been developed such that all the logic to be invoked exists in the assemblies. If the application wasn’t originally developed with the intention of being shared in this way, there’s every possibility that some pertinent logic has instead been located in the front-end (e.g. the <a href="http://en.wikipedia.org/wiki/Magic_pushbutton">“Magic Pushbutton”</a> anti-pattern that was so prevalent in ASP.NET Web Forms development), or even client-side scripts.</p>
<h3 id="love-me-love-my-dependencies-">Love Me, Love My Dependencies…</h3>
<p>All applications have dependencies of one kind or another. If you’re lucky, this will just be the .NET Framework, and if you’re especially lucky it will be the same version that is used by the consuming application.</p>
<p>More likely, the application being referenced will depend on a whole bunch of third-party DLLs, and now they’ve suddenly become your dependencies, too! If your dev shop is anything like the places I’ve worked, each application will depend on various different versions of the NHibernate and Castle stacks and their associated dependencies. Good luck managing all those references while retaining your sanity.</p>
<h3 id="applications-are-more-than-just-dlls">Applications are more than just DLLs</h3>
<p>The average enterprise application is more than just a bunch of assemblies that can be referenced independently. They also tend to rely on configuration settings, external resources (e.g. databases), and a whole bunch of stuff triggered at application start-up time such as the configuration of an IoC container, logging, ORM, etc. The handling of authentication and authorization might also need rethinking before assembly sharing becomes a viable option.</p>
<h3 id="maintaining-the-combined-suite-of-applications">Maintaining the Combined Suite of Applications</h3>
<p>As I said in <a href="https://blog.iannelson.uk/enterprise-integration-anti-patterns-1-the-shared-database/">my previous post on this topic</a>, maintainability is a particular bugbear of mine as a developer, and sharing assemblies across multiple applications doesn’t help matters one iota.</p>
<p>Unless you work with unbearably large solutions containing every project in your suite of applications, it’s difficult to know the wider impact that modifications will have, and to avoid making breaking changes. For sure, it’s possible to run automated builds of all applications when shared code is changed (I blogged about one method of achieving this with the first version of Team Foundation Server some years ago before I came to the conclusion that this is A Bad Idea) but by then the hard work has been done, the code checked in and the damage done.</p>
<p>Arguably, sharing assemblies puts developers in an even stickier situation than sharing databases – at least with that anti-pattern the entanglement is limited to one particular layer of the architecture which can be largely ignored much of the time. But when assemblies are shared, the developers must always be considering whether their apparently innocent modifications will have an impact on some other application. Meaningful refactoring becomes impossible, and the software eventually falls into disrepair.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h3 id="in-conclusion-">In Conclusion…</h3>
<p>When all is said and done, there are only two realistic patterns for sharing functionality between enterprise applications – remote procedure invocation and messaging. Both serve to decouple the applications, and both are easy to achieve with popular technologies on the .NET stack such as <a href="http://msdn.microsoft.com/en-us/netframework/aa663324.aspx">WCF</a>, <a href="http://trac.caffeine-it.com/openrasta">OpenRasta</a> and <a href="http://masstransit-project.com/">MassTransit</a>.</p>
<p>There’s an abundance of resources out there detailing how to create effective service-oriented architectures, the obvious canonical reference tome being Hohpe and Woolf’s <a href="http://amzn.to/gkOq3C"><em>Enterprise Integration Patterns</em></a>. I also highly recommend Michael Nygard’s <a href="http://amzn.to/h9NVFK"><em>Release It!</em></a> for an entertaining overview of some of the problems that can be encountered when you start taking dependencies on remote services, and useful patterns for ensuring your application remains responsive at all times.</p>
<p>My preferred technology stack for application integration remains WCF, and in a future blog post I’ll outline some tips I’ve learned through trial and error for developing and consuming effective and maintainable WCF services.</p>
]]></content:encoded>
    </item>
    <item>
      <title>NHibernate and Mapping Aggregates</title>
      <link>https://blog.iannelson.uk/nhibernate-and-mapping-aggregates/</link>
      <pubDate>Thu, 25 Nov 2010 08:11:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/nhibernate-and-mapping-aggregates/</guid>
      <description>&lt;p&gt;A few days ago a friend emailed me the following question regarding NHibernate mappings for a solution he’s currently developing:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“I have an idea entity that has a collection of comment entities and I need to get the comment count for each idea. I made a massive mistake at the beginning by calling idea.Comments.Count (even worse, I did it in the view!), which due to the collection being lazy-loaded caused about 10 database calls so performance was sluggish even with second level cache. I was therefore wondering how you would do it – would you use HQL and use Comments.size or would you do something differently?”&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>A few days ago a friend emailed me the following question regarding NHibernate mappings for a solution he’s currently developing:</p>
<blockquote>
<p>“I have an idea entity that has a collection of comment entities and I need to get the comment count for each idea. I made a massive mistake at the beginning by calling idea.Comments.Count (even worse, I did it in the view!), which due to the collection being lazy-loaded caused about 10 database calls so performance was sluggish even with second level cache. I was therefore wondering how you would do it – would you use HQL and use Comments.size or would you do something differently?”</p></blockquote>
<p>Now, I’ve been pretty busy recently, so before I had opportunity to respond properly, he sent this follow-up:</p>
<blockquote>
<p>&ldquo;After looking for a solution for getting a Comment count back for each Idea, I found using the Nhibernate Formula method does the job – just wanting to make sure I was on the right track in terms of performance etc. My mapping class is as follows:&rdquo;</p></blockquote>
<p>I considered this for a while, and sent the following suggestions:</p>
<blockquote>
<p>“I’m glad to hear you resolved your SELECT N+1 problem but to be honest, I’m not a big fan of using formulas in NH mappings if at all possible, for the following reasons:</p>
<ol>
<li>I try to minimize my use of strings (and especially SQL) so as to make refactorings easier, and lessen the potential for runtime exceptions.</li>
<li>The default NH behaviour will be to evaluate that formula every time an Idea entity is loaded, which might not be desirable and could negatively impact on performance when loading your idea entities. I’m not sure if the recently-added <a href="http://ayende.com/Blog/archive/2010/01/27/nhibernate-new-feature-lazy-properties.aspx">Lazy Properties feature</a> of NH can be applied to these derived properties; if so then that could be used to negate this argument.</li>
<li>I try to avoid putting logic (however simple) in the OR mapping layer, as future developers are unlikely to expect to find it there! I like to reduce the element of surprise in my solutions, and put such logic in the domain layer. I think logic in the OR layer limits options going forward – for example if you subsequently decide all comments have to be moderated, does the CommentCount formula have to be modified to exclude comments awaiting moderation..?</li>
</ol>
<p>So, what would I do? Here are two options, depending on how often you’re using the CommentCount property:</p>
<p>If you’re only using the CommentCount occasionally and only along with a subset of the other properties from Idea, then I would write a specific query returning a projection of the required properties, including this CommentCount aggregate.</p>
<p>I’ve done this in the past where I had a requirement to populate a drop-down list with user names and the number of open work items assigned to each user, for example. I didn’t want or need to maintain an ActiveWorkItemCount property on the user object, I just wanted to do the calculation in one place (incidentally, LINQ made this a doddle).</p>
<p>Conversely, if the CommentCount property is something you’re going to be referencing frequently, then I would denormalise the database and add a CommentCount field to the Idea table. This presumes that you’re in a position to enforce the constraint that new Comments are only added to Ideas through your application (and as you know from <a href="https://blog.iannelson.uk/enterprise-integration-anti-patterns-1-the-shared-database/">my recent blog post</a>, I am very fond of this kind of constraint!). This approach should give the best performance and flexibility, at the expense of irking normalisation fascists.</p>
<p>Typically this would be done by creating AddComment and RemoveComment helper methods on the Idea entity, which can maintain a bidirectional relationship between Idea and Comment in addition to incrementing or decrementing CommentCount accordingly.</p>
<p>This approach will give the best performance, and keeps the logic where it belongs (and where it can be easily extended and tested, as in my earlier hypothetical comment moderation example).</p>
<p>For a good example of code to maintain bidirectional one-to-many class relationships with NHibernate, see pages 39-43 of <a href="http://bit.ly/c9oPqi">NHibernate 3.0 Cookbook</a>.</p>
<p>Hope this helps. As ever, it’s just my opinion, but these two techniques have worked well for me.”</p></blockquote>
<p>What do you think? Are there any other approaches worth considering?</p>
]]></content:encoded>
    </item>
    <item>
      <title>Enterprise Integration Anti-Patterns #1 – The Shared Database</title>
      <link>https://blog.iannelson.uk/enterprise-integration-anti-patterns-1-the-shared-database/</link>
      <pubDate>Mon, 08 Nov 2010 05:11:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/enterprise-integration-anti-patterns-1-the-shared-database/</guid>
      <description>&lt;p&gt;So, I was in the office at a client site, walking back to my desk after grabbing a quick coffee, when a developer on a sister product to my current project grabbed me and asked (I paraphrase somewhat):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Hey, Ian – [my app] needs to retrieve [small piece of data] from [your app], so I’ve stuck a stored proc in [your database], OK?”&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I felt quite violated. My poor app, what had it done to deserve this despicable treatment?&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>So, I was in the office at a client site, walking back to my desk after grabbing a quick coffee, when a developer on a sister product to my current project grabbed me and asked (I paraphrase somewhat):</p>
<blockquote>
<p>“Hey, Ian – [my app] needs to retrieve [small piece of data] from [your app], so I’ve stuck a stored proc in [your database], OK?”</p></blockquote>
<p>I felt quite violated. My poor app, what had it done to deserve this despicable treatment?</p>
<p>Before I start my rant about the downsides of directly accessing application databases in this way, let me first try to enumerate the benefits of such an approach. I can think of three:</p>
<ol>
<li>It’s a quick solution to develop (at least initially).</li>
<li>The technical concepts involved are well understood by the vast majority of developers and other team members.</li>
<li>The functionality is encapsulated in one place, i.e. the stored proc, which is at least preferable to allowing the execution of ad-hoc SQL.</li>
</ol>
<p>But despite this being seen as a quick-win, I think allowing application databases to be shared in this way is almost always a bad idea in the medium to long term.</p>
<p>As a developer, one of my primary goals is to create systems that are easy to maintain and enhance, in anticipation of the inevitable future change requests that will put food on my children’s plates. As well as making life easier for yourself, this approach is also common courtesy to the programmers that maintain the system after you’ve left. As the saying goes, “always code as if the guy who ends up maintaining your code will be a violent psychopath who knows where you live” – I think that’s good advice to heed for all developers who have an interest in building their reputation in our small and incestuous industry.</p>
<p>When we begin down the slippery slope of forcing a single database to serve the needs of multiple disparate consuming systems, we make a rod for our own backs. Any planned changes to the database to meet new requirements in the primary application need to consider the needs of the parasitic applications that care little for your ability to respond to change as long as they continue working. In our particular scenario, it’s worth highlighting that “my” application is using NHibernate as an ORM layer, so until this invasion we have been able to perform database schema refactorings with relative impunity. No longer – now we have to consider and potentially maintain someone else’s stored procedure when making changes.</p>
<p>Sure, at the start it’s “just a stored proc”, and the maintenance overhead is relatively low. But like the proverbial broken window, allowing that first chink in your carefully-crafted layered application architecture sets a dangerous precedent. If it goes unchecked, it may be seen as a valid pattern to be emulated by future developers, until the database schema ossifies and becomes almost impossible to change as it struggles to meet the requirements of multiple consuming applications.</p>
<p>If you think I’m scaremongering or labouring a point here I would urge you to spend some time hanging out on the NHibernate and Fluent NHibernate mailing lists. It won’t be long before you see messages that describe complex and intractable mapping problems and mention the caveat “I’m not allowed to change the database”.</p>
<p>Aside from the maintainability issue (which is my major gripe), the end result of this quick-and-dirty approach also leads to a poorer-quality solution which may struggle to meet nonfunctional requirements. Direct database access from external applications is a crude, low-level solution to a common problem. All the hard work done in creating a layered architecture with DAOs, business logic layer etcetera is swept aside by some other cowboy app which says “screw all that, gimme the data”. Any considerations that may have been given to concerns such as caching and application-level security go out of the window. The potential for locks and even deadlocks on the shared database is increased.</p>
<p>If you have the smallest shred of dignity and self-respect on behalf of your application, then please – don’t let its nether regions be exposed to all and sundry.</p>
]]></content:encoded>
    </item>
    <item>
      <title>MVC – Where To Put Business Logic?</title>
      <link>https://blog.iannelson.uk/mvc-where-to-put-business-logic/</link>
      <pubDate>Wed, 03 Nov 2010 12:11:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/mvc-where-to-put-business-logic/</guid>
      <description>&lt;p&gt;I just had an email from a friend asking where business logic should go when using MVC – the controller or the model.&lt;/p&gt;
&lt;p&gt;I thought I’d share my reply:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think asking whether the business logic should go in the Model or the Controller is a false dichotomy. There are different kinds of business logic, and there’s also the possibility of putting it somewhere else entirely.&lt;/p&gt;
&lt;p&gt;Much business logic does indeed belong in the model, particularly stuff like encapsulating calculations and projections, adding meaning to raw data properties, and ensuring domain objects are maintained in a valid state. I see this as the traditional side of OO design – encapsulating logic and restricting accessibility.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I just had an email from a friend asking where business logic should go when using MVC – the controller or the model.</p>
<p>I thought I’d share my reply:</p>
<blockquote>
<p>I think asking whether the business logic should go in the Model or the Controller is a false dichotomy. There are different kinds of business logic, and there’s also the possibility of putting it somewhere else entirely.</p>
<p>Much business logic does indeed belong in the model, particularly stuff like encapsulating calculations and projections, adding meaning to raw data properties, and ensuring domain objects are maintained in a valid state. I see this as the traditional side of OO design – encapsulating logic and restricting accessibility.</p>
<p>Then at a higher level we have logic which deals with interactions between objects, which are essentially transactions and generally map to business use cases. I contend that this kind of logic belongs in a separate &ldquo;service&rdquo; layer. The interfaces in that service layer can then be referenced by the controllers, which are rendered super-skinny and free of any complex &ldquo;business logic&rdquo;. The same service layer classes can be invoked from other front ends – Web Forms, Win Forms, WCF services, console apps, etc.</p>
<p>As a further aside, I’d recommend use of a view model or DTOs wherever possible rather than exposing the domain model objects up to the views / forms / console / service contracts etc. This encapsulates the domain model and increases the maintainability of the domain model.</p></blockquote>
<p>What do you think?</p>
]]></content:encoded>
    </item>
    <item>
      <title>Testing IoC Registrations</title>
      <link>https://blog.iannelson.uk/testing-ioc-registrations/</link>
      <pubDate>Fri, 09 Apr 2010 14:04:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/testing-ioc-registrations/</guid>
      <description>&lt;p&gt;When I first started writing automated unit tests for my code, I remember getting carried away writing lots of tiny little tests, each with a single Assert. It felt good initially to see all those green ticks, but rapidly became a maintenance headache, and I am now happier having fewer less-brittle tests that do more.&lt;/p&gt;
&lt;p&gt;I think it’s great when tools like &lt;a href=&#34;http://automapper.codeplex.com/&#34;&gt;AutoMapper&lt;/a&gt; provide powerful methods like…&lt;/p&gt;
&lt;p&gt;…allowing me to test large swathes of the system configuration with a single, stable test.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>When I first started writing automated unit tests for my code, I remember getting carried away writing lots of tiny little tests, each with a single Assert. It felt good initially to see all those green ticks, but rapidly became a maintenance headache, and I am now happier having fewer less-brittle tests that do more.</p>
<p>I think it’s great when tools like <a href="http://automapper.codeplex.com/">AutoMapper</a> provide powerful methods like…</p>
<p>…allowing me to test large swathes of the system configuration with a single, stable test.</p>
<p>I wanted to write a similar test to check that all the necessary system dependencies for my MVC application could be resolved by the IoC container. Here’s what I came up with:</p>
<p>A few things to note:</p>
<ol>
<li>I’m configuring my container using the <a href="http://fabiomaulo.blogspot.com/2009/11/guywire.html">GuyWire pattern described by Fabio Maulo</a>.</li>
<li>I’m using ControllerExtensions from the <a href="http://mvccontrib.codeplex.com/Wikipage">MvcContrib project</a> to identify controllers.</li>
<li>I’m accessing the IoC container via the <a href="http://commonservicelocator.codeplex.com">Common Service Locator</a>.</li>
<li>This only tests the dependencies that are referenced by dependency injection, and won’t pick up on any missing registrations that are only referenced via service locator (you’d have to write separate itty-bitty tests to check those registrations).</li>
</ol>
<p>What do you think? How, if at all, do you test your IoC container registrations?</p>
]]></content:encoded>
    </item>
    <item>
      <title>Testing LINQ Queries</title>
      <link>https://blog.iannelson.uk/testing-linq-queries/</link>
      <pubDate>Fri, 09 Apr 2010 13:04:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/testing-linq-queries/</guid>
      <description>&lt;p&gt;I’ve been asked “How do you test LINQ queries?” a couple of times in the past few months, so I thought I’d blog my answer for the benefit of all you lovely people.&lt;/p&gt;
&lt;p&gt;Firstly I should explain how I’ve been doing most of my data access in recent months. I find that the &lt;a href=&#34;http://martinfowler.com/eaaCatalog/repository.html&#34;&gt;Repository pattern&lt;/a&gt;, and particularly the &lt;a href=&#34;http://fabiomaulo.blogspot.com/2009/09/repository-or-dao-repository.html&#34;&gt;.NET implementation described here by Fabio Maulo&lt;/a&gt; meets the vast majority of requirements I have in my applications, and I fall back on additionally using custom DAOs when required.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I’ve been asked “How do you test LINQ queries?” a couple of times in the past few months, so I thought I’d blog my answer for the benefit of all you lovely people.</p>
<p>Firstly I should explain how I’ve been doing most of my data access in recent months. I find that the <a href="http://martinfowler.com/eaaCatalog/repository.html">Repository pattern</a>, and particularly the <a href="http://fabiomaulo.blogspot.com/2009/09/repository-or-dao-repository.html">.NET implementation described here by Fabio Maulo</a> meets the vast majority of requirements I have in my applications, and I fall back on additionally using custom DAOs when required.</p>
<p>So, my service classes can ask the IoC container for instances of IRepository<!-- raw HTML omitted -->, where IRepository<!-- raw HTML omitted --> implements IQueryable<!-- raw HTML omitted -->.</p>
<p>Now, in the best tradition of encapsulation, all but the most trivial of the queries I write against these repositories are defined in extension methods, for example:</p>
<p>Aside from the testability aspect (which I promise I’ll get onto in a second), this approach also helps keep us on the right side of the <a href="http://en.wikipedia.org/wiki/Law_of_Demeter">Law of Demeter</a>, as <a href="http://blog.robustsoftware.co.uk/2010/04/linq-and-law-of-demeter.html">Garry Shutler blogged about recently</a>. It also allows for method chaining, allowing us to enact multiple filters and other transformations in a single line of code:</p>
<p>But I digress. I was talking about how to test these LINQ queries. It’s easy really, the trick is knowing that IEnumerable<!-- raw HTML omitted --> offers an <a href="http://msdn.microsoft.com/en-us/library/bb908285%28v=VS.90%29.aspx">AsQueryable() method</a>. So, we can build up some dummy data in a List<!-- raw HTML omitted --> before calling AsQueryable() to obtain an object against which the extension method can act. Dead simple. The creation of the test data can even be automated using the open source <a href="http://nbuilder.org/">NBuilder</a> tool.</p>
<p>One caveat – this is merely testing that your LINQ query does what you think it should do, it doesn’t test the behaviour of the underlying LINQ provider. If you’re using, say, the NHibernate LINQ 1.0 provider (which is great but not at all feature-complete) then you’ll also need to write some suitable integration tests, say by testing against the <a href="http://sqlite.org/">Sqlite</a> database engine.</p>
]]></content:encoded>
    </item>
    <item>
      <title>WCF – Global Exception Handling</title>
      <link>https://blog.iannelson.uk/wcf-global-exception-handling/</link>
      <pubDate>Fri, 09 Apr 2010 13:04:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/wcf-global-exception-handling/</guid>
      <description>&lt;p&gt;I’ve done a fair bit of WCF development recently (and amazingly I came out of it relatively unscathed, both psychologically and emotionally). Using Castle Windsor’s WCF Facility helped a great deal, but I still found myself writing a fair bit of infrastructure and plumbing code. I thought I’d blog some of these code snippets lest I forget, and on the offchance they might help others.&lt;/p&gt;
&lt;p&gt;One of the things I wanted to achieve was to ensure that any unhandled exceptions that propagated to the top of the stack were logged. The following custom EndpointBehavior achieves that. I’m using Castle Logging Facility here, but you could of course swap out the logging code for whatever error handling code you require.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I’ve done a fair bit of WCF development recently (and amazingly I came out of it relatively unscathed, both psychologically and emotionally). Using Castle Windsor’s WCF Facility helped a great deal, but I still found myself writing a fair bit of infrastructure and plumbing code. I thought I’d blog some of these code snippets lest I forget, and on the offchance they might help others.</p>
<p>One of the things I wanted to achieve was to ensure that any unhandled exceptions that propagated to the top of the stack were logged. The following custom EndpointBehavior achieves that. I’m using Castle Logging Facility here, but you could of course swap out the logging code for whatever error handling code you require.</p>
<p>Here’s the relevant line from my Windsor configuration:</p>
]]></content:encoded>
    </item>
    <item>
      <title>WCF – Logging Before and After Operation Invocation</title>
      <link>https://blog.iannelson.uk/wcf-logging-before-and-after-operation-invocation/</link>
      <pubDate>Fri, 09 Apr 2010 13:04:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/wcf-logging-before-and-after-operation-invocation/</guid>
      <description>&lt;p&gt;Here’s another custom WCF EndpointBehavior I found useful recently.&lt;/p&gt;
&lt;p&gt;Not content with &lt;a href=&#34;https://blog.iannelson.uk/wcf-global-exception-handling/&#34;&gt;logging all unhandled errors&lt;/a&gt;, I wanted to output a DEBUG level log message before and after every operation invocation. As before, I’m using the Castle Windsor Logging Facility to handle my logging, but you can swap that out for your logger of choice if required.&lt;/p&gt;
&lt;p&gt;Firstly, here’s the EndPointBehaviour itself. This adds a custom CallContextInitializer to every service operation:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Here’s another custom WCF EndpointBehavior I found useful recently.</p>
<p>Not content with <a href="https://blog.iannelson.uk/wcf-global-exception-handling/">logging all unhandled errors</a>, I wanted to output a DEBUG level log message before and after every operation invocation. As before, I’m using the Castle Windsor Logging Facility to handle my logging, but you can swap that out for your logger of choice if required.</p>
<p>Firstly, here’s the EndPointBehaviour itself. This adds a custom CallContextInitializer to every service operation:</p>
<p>Here’s the custom CallContextInitializer:</p>
<p>And the Windsor configuration is much the same as last time:</p>
]]></content:encoded>
    </item>
    <item>
      <title>WCF – NHibernate Unit Of Work Endpoint Behavior</title>
      <link>https://blog.iannelson.uk/wcf-nhibernate-unit-of-work-endpoint-behavior/</link>
      <pubDate>Fri, 09 Apr 2010 13:04:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/wcf-nhibernate-unit-of-work-endpoint-behavior/</guid>
      <description>&lt;p&gt;OK, my last WCF-related code snippet of the day, I promise. This is quite similar to the last one. I required that the WCF service I was developing started a new NHibernate Session for each invocation, and closed it after invocation (i.e. session-per-request). I couldn’t rely on the ASP.NET session start and end events in global.asax as this particular WCF service was to respond to MSMQ messages rather than HTTP.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>OK, my last WCF-related code snippet of the day, I promise. This is quite similar to the last one. I required that the WCF service I was developing started a new NHibernate Session for each invocation, and closed it after invocation (i.e. session-per-request). I couldn’t rely on the ASP.NET session start and end events in global.asax as this particular WCF service was to respond to MSMQ messages rather than HTTP.</p>
<p>So, once again I found myself bashing out a custom EndpointBehavior to add a custom CallContextInitializer to every operation:</p>
<p>And the Windsor configuration is much the same as before:</p>
]]></content:encoded>
    </item>
    <item>
      <title>An MVC Gotcha and the PRG Pattern</title>
      <link>https://blog.iannelson.uk/an-mvc-gotcha-and-the-prg-pattern/</link>
      <pubDate>Fri, 09 Apr 2010 10:04:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/an-mvc-gotcha-and-the-prg-pattern/</guid>
      <description>&lt;p&gt;If you’ve recently moved across to ASP.NET MVC development following years of wrangling with the leaky abstraction that was WebForms, you may have encountered some seemingly curious behaviour when posting back to the same URL.&lt;/p&gt;
&lt;p&gt;Suppose we have the following simple, contrived and utterly imagination-free model:&lt;/p&gt;
&lt;p&gt;Here’s a view:&lt;/p&gt;
&lt;p&gt;And here’s the controller:&lt;/p&gt;
&lt;p&gt;Note that we have two separate Index actions – one for HTTP GET which instantiates and displays a new FooModel instance, and one for HTTP POST which modifies one of the properties on the posted FooModel instance before re-rendering the view.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If you’ve recently moved across to ASP.NET MVC development following years of wrangling with the leaky abstraction that was WebForms, you may have encountered some seemingly curious behaviour when posting back to the same URL.</p>
<p>Suppose we have the following simple, contrived and utterly imagination-free model:</p>
<p>Here’s a view:</p>
<p>And here’s the controller:</p>
<p>Note that we have two separate Index actions – one for HTTP GET which instantiates and displays a new FooModel instance, and one for HTTP POST which modifies one of the properties on the posted FooModel instance before re-rendering the view.</p>
<p>We issue a GET against the relevant URI, and the view renders as we expect (in that both the textbox and the literal show the value 1:<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>But here’s the gotcha – look what happens when we hit the increment button to post back:<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>Huh? What gives? The model has definitely been updated (as reflected in the literal which is now showing 2), but the textbox is still stubbornly displaying 1.</p>
<p>What’s happening is that the Html helpers for form fields (including hidden fields) take their values from the controller’s ModelState dictionary, which contains details of all the POSTed fields and any validation errors.</p>
<p>So how to achieve our desired behaviour? We could make a quick and dirty call to ModelState.Clear(), but that’s not such a good idea and might lead to undesirable results surrounding validation.</p>
<p>In fact, this gotcha is symptomatic of a deeper anti-pattern in evidence in this example, namely rendering views from POST actions. Consider what happens if the user refreshes their browser when viewing the POSTed view. Recognise these dialog boxes?<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --> <!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --> <!-- raw HTML omitted --><!-- raw HTML omitted --><!-- raw HTML omitted --></p>
<p>Pretty ugly, aren’t they? And you really don’t want to leave open the possibility of a user accidentally submitting duplicate transactions if at all possible.</p>
<p>Enter the <a href="http://en.wikipedia.org/wiki/Post/Redirect/Get">Post, Redirect, Get pattern</a>. Here, the POST action updates the model as before, but redirects to the GET action to perform the re-rendering of the view. Of course, you’ll need to persist the model somewhere in the meantime (e.g. session state). This pattern avoids the gotcha of a value from the ModelState being displayed instead of an updated figure, and ensures that your user will never see those ugly form resubmission dialog boxes, or submit duplicate transactions.</p>
<p>Here’s a quick reworking of the earlier controller to use this pattern. Note the introduction of a “New” action to handle the instantiation of a new Foo instance. This is crummy code fraught with potential uncaught NullReferenceExceptions, but you’ll get the gist, I’m sure.</p>
<p>And now we get the desired results on postback:<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>If you’re using MVC, and returning ViewResults from POST actions, I would urge you to consider the potential side-effects of that approach, and standardise instead on a PRG pattern.</p>
]]></content:encoded>
    </item>
    <item>
      <title>MoreLINQ – IEnumerable Extension From Jon Skeet</title>
      <link>https://blog.iannelson.uk/morelinq-ienumerable-extension-from-jon-skeet/</link>
      <pubDate>Tue, 30 Mar 2010 10:03:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/morelinq-ienumerable-extension-from-jon-skeet/</guid>
      <description>&lt;p&gt;I’ve just become aware of this &lt;a href=&#34;http://code.google.com/p/morelinq/&#34;&gt;MoreLINQ&lt;/a&gt; project containing some neat IEnumerable extensions authored by the inimitable &lt;a href=&#34;http://stackoverflow.com/users/22656/jon-skeet&#34;&gt;Jon Skeet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I particularly like the look of &lt;a href=&#34;http://code.google.com/p/morelinq/source/browse/trunk/MoreLinq/DistinctBy.cs&#34;&gt;DistinctBy&lt;/a&gt; – that’s gotta be a lot easier than passing custom instances of IEqualityComparer into Distinct().&lt;/p&gt;
&lt;p&gt;Fun fact – I used to work with someone who went to school with Jon Skeet! True Story!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I’ve just become aware of this <a href="http://code.google.com/p/morelinq/">MoreLINQ</a> project containing some neat IEnumerable extensions authored by the inimitable <a href="http://stackoverflow.com/users/22656/jon-skeet">Jon Skeet</a>.</p>
<p>I particularly like the look of <a href="http://code.google.com/p/morelinq/source/browse/trunk/MoreLinq/DistinctBy.cs">DistinctBy</a> – that’s gotta be a lot easier than passing custom instances of IEqualityComparer into Distinct().</p>
<p>Fun fact – I used to work with someone who went to school with Jon Skeet! True Story!</p>
]]></content:encoded>
    </item>
    <item>
      <title>On the Inherent Negativity of Computer Programmers</title>
      <link>https://blog.iannelson.uk/on-the-inherent-negativity-of-computer-programmers/</link>
      <pubDate>Mon, 01 Feb 2010 20:02:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/on-the-inherent-negativity-of-computer-programmers/</guid>
      <description>&lt;p&gt;A couple of weeks ago, early one morning, my friend and fellow coder Scott asked a curious question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Do you think that programming computers for a living gives you a negative outlook on life?”&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Now, Scott is unfortunately responsible for administering occasional TLC to a codebase that I cut as long ago as 2004, so I assumed he was referring to this and was about to raise some complaints about my hand-rolled query object criteria framework or other coding horror. I steeled myself to defend my work as he continued to explain:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>A couple of weeks ago, early one morning, my friend and fellow coder Scott asked a curious question:</p>
<blockquote>
<p>“Do you think that programming computers for a living gives you a negative outlook on life?”</p></blockquote>
<p>Now, Scott is unfortunately responsible for administering occasional TLC to a codebase that I cut as long ago as 2004, so I assumed he was referring to this and was about to raise some complaints about my hand-rolled query object criteria framework or other coding horror. I steeled myself to defend my work as he continued to explain:</p>
<blockquote>
<p>“Well, when coding we have to consider all the potential edge cases and exceptions – what happens if our methods get dodgy inputs etcetera. And it’s spilling over into my real life. We’re moving house at the moment, and I just find myself worrying about what happens if the buyers pull out, if we can’t get the mortgage, if the survey reveals problems… I’m really negative about the whole process.”</p></blockquote>
<p>At the time I smiled and put this down to the notoriously tortuous British house-buying process, but the more I think about it, the more I think Scott might be onto something.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>My wife and I are currently plotting a well-deserved summer vacation in sunnier climes, which theoretically should be an enjoyable task, right? But I can’t simply enjoy it and focus on the “sunny-day scenario”. My mind is full of edge cases (“What if we can’t fit all our stuff in the car?”), unhandled exceptions (“Will we get our passports in time?”), compatibility issues (“will our choice of dates suit my clients?”), unwise over-reliance on dependent components (“Will the airline have any child seats available?”) and of course user errors (“Suppose we book the wrong dates?!”). No focusing on the happy path for this codemonkey.</p>
<p>The more I think about it, the more I see that Scott has a point. Professional software development forces us to anticipate invalid input, stupid users, hackers,  insufficient hardware, unreachable remote services, and whether our software can pass <a href="http://www.moserware.com/2008/02/does-your-code-pass-turkey-test.html">the Turkey test</a>. We consider SQL injection, cross-site scripting, buffer overflows, and countless other common <a href="http://en.wikipedia.org/wiki/Category:Computer_security_exploits">threats and exploits</a>. Not to mention worrying about what happens when other devs get their grubby mitts on our codebase, or when the client inevitably unleashes some game-changing requirements late in the lifecycle. We’re all about expecting the worse, coding <a href="http://en.wikipedia.org/wiki/Defensive_programming">defensively</a>, and decoupling ourselves from dependencies. The ever-present potential for high-profile failures caused by something as simple as an inverted boolean comparison, combined with the likelihood of critique and criticism from our fellow coders, DBAs, auditors and sysadmins is enough to turn most devs into a nervous wreck before they’ve so much as initialised a variable. That reminds me, I must check that my Professional Indemnity insurance policy is up to date.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>So, anecdotal evidence and my own experience suggests to me that Border’s First Law is a truism. Programming Computers Can Cause Negativity, Cynicism and Pessimism.</p>
<p>Are these necessarily negative traits to have, or can such enforced forethought and consideration of potential issues be a benefit in “real life”, away from the screen? I suspect as with many things, the answer is that there is some balance to be had. So – getting to the airport on time is A Good Thing. Spending a fortnight’s vacation panicking on the offchance that the flight operator goes bust is, probabilistically, a bit silly.</p>
<p>I’m not sure where I’m going with this, or what the answer is, except perhaps to be a little more aware of this mindset and try to adopt a little restrain when applying programming principles to “real-life” conversations. Life, alas, is not a well-defined algorithm, and God knows it doesn’t come complete with a full suite of regression tests.</p>
<p>PS – You know, I just remembered that I <a href="https://blog.iannelson.uk/edge-cases/">blogged about this topic before</a>!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Deduplication Fail</title>
      <link>https://blog.iannelson.uk/deduplication-fail/</link>
      <pubDate>Wed, 02 Dec 2009 12:12:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/deduplication-fail/</guid>
      <description>&lt;p&gt;Oh, the irony!&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Oh, the irony!<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
]]></content:encoded>
    </item>
    <item>
      <title>A Circuit Breaker Which Trips On Frequency Of Failures</title>
      <link>https://blog.iannelson.uk/a-circuit-breaker-which-trips-on-frequency-of-failures/</link>
      <pubDate>Wed, 28 Oct 2009 11:10:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/a-circuit-breaker-which-trips-on-frequency-of-failures/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://twitter.com/jeremypearson&#34;&gt;@Jez&lt;/a&gt; &lt;a href=&#34;http://twitter.com/jeremypearson/statuses/5186129382&#34;&gt;tweeted&lt;/a&gt; last night:&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Funny, but not true. I am enamoured with the &lt;a href=&#34;http://www.castleproject.org/container/index.html&#34;&gt;Castle Windsor&lt;/a&gt; project because its power makes it fairly simple for me to develop loosely-coupled systems which are easily maintained and tested. The wide range of Facilities and Contrib projects also integrate nicely with the other parts of my current development stack (NHibernate, WCF, WF, log4net).&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><a href="http://twitter.com/jeremypearson">@Jez</a> <a href="http://twitter.com/jeremypearson/statuses/5186129382">tweeted</a> last night:<!-- raw HTML omitted --></p>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<p>Funny, but not true. I am enamoured with the <a href="http://www.castleproject.org/container/index.html">Castle Windsor</a> project because its power makes it fairly simple for me to develop loosely-coupled systems which are easily maintained and tested. The wide range of Facilities and Contrib projects also integrate nicely with the other parts of my current development stack (NHibernate, WCF, WF, log4net).</p>
<p>Whilst there is a lot of material on the web about the Dependency Injection capabilities of Windsor, the Aspect-Oriented Programming (AOP) features don’t seem to get as much exposure, so I thought I’d quickly blog about one way in which I’ve been making use of those in the system I’m currently developing.</p>
<p>Earlier this year <a href="http://davybrion.com">Davy Brion</a> posted <a href="http://davybrion.com/blog/2009/07/protecting-your-application-from-remote-problems/">an excellent C# implementation</a> of the Circuit Breaker pattern described in Michael Nygard’s equally excellent book <em><a href="http://www.amazon.co.uk/gp/product/0978739213?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=19450&amp;creativeASIN=0978739213">Release It! Design and Deploy Production-Ready Software</a></em>.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>For the uninitiated, this pattern advocates protecting your system from issues affecting any remote service on which it depends by wrapping your calls to that service with a circuit breaker component. This component notes any failed service invocations, until some threshold is reached, causing the circuit to trip. Subsequent attempted service invocations then “fail fast”, throwing a custom exception rather than passing the method call on to the remote service. This benefits your system, as it prevents you from tying up valuable threads creating expensive remote service calls which may be slow to timeout. And it benefits the remote system as you avoid piling further pressure on a service which is already down or unresponsive.</p>
<p>For more details of this pattern, and some entertaining war stories of situations in which they would have proved useful, I encourage you to read <a href="http://www.amazon.co.uk/gp/product/0978739213?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=19450&amp;creativeASIN=0978739213">Michael Nygard’s book</a>.</p>
<p>Now, I like Davy’s implementation of this pattern a lot, particularly since it is implemented as an interceptor for Castle Windsor, which as mentioned I’m already making heavy use of in my current projects. But my only concern is that it is configured to trip after the number of failed invocations reaches a specific figure, <em>irrespective of how long it takes to reach that threshold</em>. I want an implementation which is able to sense the difference between infrequent exceptions over a prolonged period, and a sudden flurry of exceptions – the latter causing the circuit breaker to trip.</p>
<p>To achieve this I’ve tweaked Davy’s implementation slightly by adding an extra parameter to the constructor specifying the historical period over which to total the number of exceptions. That is, you can configure it such that a certain number of failures <em>within the preceding y minutes</em> causes the circuit breaker to trip.</p>
<p>My forked version can be found on GitHub at <a href="https://github.com/ianfnelson/CircuitBreaker">https://github.com/ianfnelson/CircuitBreaker</a>.</p>
<p>I look forward to seeing what adverts Google sees fit to stick at the bottom of this post… 🙂</p>
]]></content:encoded>
    </item>
    <item>
      <title>Castle Windsor Array Resolution Gotcha</title>
      <link>https://blog.iannelson.uk/castle-windsor-array-resolution-gotcha/</link>
      <pubDate>Mon, 26 Oct 2009 10:10:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/castle-windsor-array-resolution-gotcha/</guid>
      <description>&lt;p&gt;The shiny new system which I’ve recently been developing makes heavy use of the Chain of Responsibility pattern, and as such a number of service classes take an array of objects in the constructor:&lt;/p&gt;
&lt;p&gt;I’m using Castle Windsor for dependency management, so I’ve been fluently registering all instances of ILeadAllocator:&lt;/p&gt;
&lt;p&gt;Easy, right? And yet at runtime Windsor surprised me by throwing this exception in my face:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Castle.MicroKernel.Handlers.HandlerException: Can’t create component ‘Marshalls.Leads.ApplicationService.LeadAllocationService’ as it has dependencies to be satisfied.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>The shiny new system which I’ve recently been developing makes heavy use of the Chain of Responsibility pattern, and as such a number of service classes take an array of objects in the constructor:</p>
<p>I’m using Castle Windsor for dependency management, so I’ve been fluently registering all instances of ILeadAllocator:</p>
<p>Easy, right? And yet at runtime Windsor surprised me by throwing this exception in my face:</p>
<blockquote>
<p>Castle.MicroKernel.Handlers.HandlerException: Can’t create component ‘Marshalls.Leads.ApplicationService.LeadAllocationService’ as it has dependencies to be satisfied.</p>
<p>Marshalls.Leads.ApplicationService.LeadAllocationService is waiting for the following dependencies:</p>
<p>Keys (components with specific keys)</p>
<p>– leadAllocators which was not registered.</p></blockquote>
<p>Huh?! What gives? Well, a little Googling revealed <a href="http://hammett.castleproject.org/?p=257">this post</a> from Castle founder Hamilton Verissimo explaining that by default the Castle MicroKernel expects me to define what should be included in the array. But he goes on to explain that the behaviour I desire can be achieved by registering a custom subresolver with the microkernel. That subresolver has since been included in the Castle Windsor distro, so in actual fact all I needed to do was add the following line of code when configuring my container:</p>
<p>So now, when new implementations of ILeadAllocator are added to the codebase, they are immediately available to the CofR pattern within the LeadAllocationService, with no additional work required by the developer. Hurrah!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Castle Windsor Lifestyle Gotcha</title>
      <link>https://blog.iannelson.uk/castle-windsor-lifestyle-gotcha/</link>
      <pubDate>Mon, 19 Oct 2009 05:10:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/castle-windsor-lifestyle-gotcha/</guid>
      <description>&lt;p&gt;I always knew my lifestyle choices would come back to bite me some day…&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;I’ve been making heavy use of the &lt;a href=&#34;http://www.castleproject.org/container/index.html&#34;&gt;Castle Windsor&lt;/a&gt; container to handle dependency and configuration management in the shiny new system that I’m currently developing. For the most part it’s been an absolute blast, allowing me to easily create a loosely-coupled system architecture and focus my efforts on what the system should be achieving for the client, rather than worrying about how it all hangs together.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I always knew my lifestyle choices would come back to bite me some day…<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>I’ve been making heavy use of the <a href="http://www.castleproject.org/container/index.html">Castle Windsor</a> container to handle dependency and configuration management in the shiny new system that I’m currently developing. For the most part it’s been an absolute blast, allowing me to easily create a loosely-coupled system architecture and focus my efforts on what the system should be achieving for the client, rather than worrying about how it all hangs together.</p>
<p>But recently I encountered a bit of a gotcha which made me think that perhaps I should spend some more time understanding exactly what Windsor is doing in the background.</p>
<p>See, it turns out that the default lifestyle for components registered with Windsor is Singleton. So, every time I asked Windsor for an IFooRepository, it supplied me with <em>exactly the same concrete instance of FooRepository</em>. Which would have been fine if it weren’t for the fact that FooRepository happened to indirectly hold a private reference to a thread-afine NHibernate session context. Ouchy.</p>
<p>The system I’m developing is a WCF service, and I’m using a Unit of Work pattern to open an NH session before the operation is invoked, and close it afterwards. To make this work, I simply needed to make sure that FooRepository (and any Castle-fulfilled component which has an IFooRepository dependency) has a transient lifestyle. Indeed, on further reflection, for most of the systems I develop, the transient lifestyles should be my default choice, and I do wonder why the Windsor developers chose to make singleton the default.</p>
<p>Davy Brion has more info on this topic in this blog post – <a href="http://davybrion.com/blog/2008/05/windsor-and-component-instance-lifetimes/">Windsor and Component Instance Lifetimes</a>.</p>
<p>So, moral of the story – understand how your IoC container is fulfilling your requests, and be prepared to specify non-default behaviours if necessary. Convention over configuration is only a benefit if you’re happy with the conventions.</p>
]]></content:encoded>
    </item>
    <item>
      <title>SQL 2008 – Missing Indexes Hints</title>
      <link>https://blog.iannelson.uk/sql-2008-missing-indexes-hints/</link>
      <pubDate>Thu, 11 Jun 2009 12:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/sql-2008-missing-indexes-hints/</guid>
      <description>&lt;p&gt;Improvements to the Execution Plan UI in SQL Server Management Studio 2008 sure do make it a doddle to improve query execution time.&lt;/p&gt;
&lt;p&gt;A client just reported that a particular stored procedure kept timing out.&lt;/p&gt;
&lt;p&gt;Viewing the Estimated Execution Plan for this query displayed a nice green message advising of a potentially missing index which could improve performance by &amp;gt;95%:&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Improvements to the Execution Plan UI in SQL Server Management Studio 2008 sure do make it a doddle to improve query execution time.</p>
<p>A client just reported that a particular stored procedure kept timing out.</p>
<p>Viewing the Estimated Execution Plan for this query displayed a nice green message advising of a potentially missing index which could improve performance by &gt;95%:<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>Right-clicking and selecting “Missing Index Details” then brings up a new query window containing the index creation DDL (I had changed the index name by the time I grabbed this capture):<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>Dead easy. Repeating the process identified a second index which could further improve performance by &gt;80%.</p>
<p>Of course, you still need to bear in mind other queries which access the table, and the effects on inserts/updates of creating additional indexes, but even so, this really helps the workflow.</p>
<p>The suggested indexes functionality was actually available in SSMS 2005 too, but the results were buried away in the XML version of the execution plan, and obscure properties windows, rather than being so in your face.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Agile Yorkshire @ The Pub – Gojko Adzic, 10th June 2009</title>
      <link>https://blog.iannelson.uk/agile-yorkshire-the-pub-gojko-adzic-10th-june-2009/</link>
      <pubDate>Fri, 05 Jun 2009 08:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/agile-yorkshire-the-pub-gojko-adzic-10th-june-2009/</guid>
      <description>&lt;p&gt;If you’re in the Leeds area next Wednesday, why not come along to this Agile Yorkshire session?&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&#34;10th-june-8211-gojko-adzic-slim-the-future-of-fitnesse&#34;&gt;10th June – Gojko Adzic: Slim, The Future Of FitNesse&lt;/h3&gt;
&lt;h4 id=&#34;details&#34;&gt;Details&lt;/h4&gt;
&lt;p&gt;This talk will introduce Slim, the most important upgrade to &lt;a href=&#34;http://fitnesse.org/&#34;&gt;FitNesse&lt;/a&gt; in years. Slim is the new test runner which promises to bring platform interoperability, easier integration, a much simpler programming model and lots of small helpers that will allow us to write and maintain executable specifications and acceptance tests easier. This is a session for .NET and Java developers. Some prior exposure to FitNesse and FIT would be beneficial, but not required.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If you’re in the Leeds area next Wednesday, why not come along to this Agile Yorkshire session?</p>
<blockquote>
<h3 id="10th-june-8211-gojko-adzic-slim-the-future-of-fitnesse">10th June – Gojko Adzic: Slim, The Future Of FitNesse</h3>
<h4 id="details">Details</h4>
<p>This talk will introduce Slim, the most important upgrade to <a href="http://fitnesse.org/">FitNesse</a> in years. Slim is the new test runner which promises to bring platform interoperability, easier integration, a much simpler programming model and lots of small helpers that will allow us to write and maintain executable specifications and acceptance tests easier. This is a session for .NET and Java developers. Some prior exposure to FitNesse and FIT would be beneficial, but not required.</p>
<h4 id="speaker">Speaker</h4>
<p>Gojko Adzic is a software craftsman with a passion for new technologies, programming and writing. He runs <a href="http://neuri.co.uk/">Neuri Ltd</a>, a UK-based consultancy that helps companies build better software by introducing agile practices and tools and improving communication between software teams, stakeholders and clients. See <a href="http://gojko.net/about/">http://gojko.net/about/</a> for more details.</p>
<p>Venue: Victoria Hotel, Central Leeds</p>
<p>Date/Time: Wednesday, 10th June, <strong>6:30pm sharp</strong>.</p>
<p>More details: <a href="http://www.agileyorkshire.org/">http://www.agileyorkshire.org/</a></p></blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>NHProf – NHibernate Profiler</title>
      <link>https://blog.iannelson.uk/nhprof-nhibernate-profiler/</link>
      <pubDate>Tue, 19 May 2009 17:05:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/nhprof-nhibernate-profiler/</guid>
      <description>&lt;p&gt;The inimitable &lt;a href=&#34;http://www.ayende.com&#34;&gt;Ayende Rahien&lt;/a&gt; is close to releasing version 1.0 of his &lt;a href=&#34;http://www.nhprof.com&#34;&gt;NHibernate Profiler&lt;/a&gt; tool, and it really is shaping up to be a rather lovely little addition to my developer toolbox.&lt;/p&gt;
&lt;p&gt;In much the same way that we can use &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ms181091.aspx&#34;&gt;SQL Server Profiler&lt;/a&gt; to monitor database activity, and &lt;a href=&#34;http://www.red-gate.com/products/ants_performance_profiler/&#34;&gt;ANTS Profiler&lt;/a&gt; to monitor the performance and memory usage of .NET applications, NHProf profiles the activity of the data access layer (&lt;a href=&#34;http://nhforge.org&#34;&gt;NHibernate&lt;/a&gt;), and even goes as far as providing helpful hints for potential improvements.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>The inimitable <a href="http://www.ayende.com">Ayende Rahien</a> is close to releasing version 1.0 of his <a href="http://www.nhprof.com">NHibernate Profiler</a> tool, and it really is shaping up to be a rather lovely little addition to my developer toolbox.</p>
<p>In much the same way that we can use <a href="http://msdn.microsoft.com/en-us/library/ms181091.aspx">SQL Server Profiler</a> to monitor database activity, and <a href="http://www.red-gate.com/products/ants_performance_profiler/">ANTS Profiler</a> to monitor the performance and memory usage of .NET applications, NHProf profiles the activity of the data access layer (<a href="http://nhforge.org">NHibernate</a>), and even goes as far as providing helpful hints for potential improvements.</p>
<p>NHibernate is powerful object relational mapper, but has a (perhaps deserved) reputation for having a steep learning curve. One of its major benefits is that it abstracts away much of the drudgery of writing data access code from the developer, but as an unfortunate side effect of this it can make it easy to create inefficient data access layers.</p>
<p>NHProf aims to reduce this risk by providing:</p>
<p>“Cognitive application awareness.</p>
<p>Visual insight into the interaction between your database and application code.</p>
<p>Analysis and detection of common pitfalls when using NHibernate.”</p>
<p>Sounds good, doesn’t it? So what does that mean in practice?</p>
<p>Here’s a screenshot of the release candidate. Note that the Session Factory Statistics functionality is disabled in the current build.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>Each profiled NHibernate session can be selected individually from the pane in the top left, and from there we can drill down to see the details of each SQL statement executed against the database (formatted in nice readable manner), along with details of any parameters, and even an option of viewing the rows resulting from the statement.</p>
<p>The statements are interpreted, and suggestions and warnings are flagged as alerts, along with hyperlinks to online guidance explaining how the data access can be improved.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>A stack trace is also provided for each statement, allowing us to identify the code that caused the data access to occur. It’s possible to double-click on a row within this trace to jump straight to the code in Visual Studio.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>In addition to showing the SQL statements executed by each session, details of the entities loaded by each session are also given.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>…and there’s a summary of the NHibernate usage for each session.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>As well as providing session-by-session detail of what’s happening, NHProf allows us to analyse the overall activity. Here, I’m looking at unique queries containing the string “study” (note that differing parameters don’t count towards “uniqueness”):<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>We can also obtain analysis by Method, Url (for web applications) and Overall Usage statistics:<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>In my opinion NHProf has the potential to become an essential tool when creating or maintaining a solution which leverages the power of NHibernate. In addition to highlighting performance and other issues, it is a great aid when learning about NHibernate, or when familiarising oneself with an inherited solution. Overall, it’s the next best thing to having Ayende sat by your side lending a guiding hand.</p>
]]></content:encoded>
    </item>
    <item>
      <title>TFS: Using Alternative Diff/Merge Tools</title>
      <link>https://blog.iannelson.uk/tfs-alternative-diff-merge-tools/</link>
      <pubDate>Tue, 19 May 2009 07:05:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/tfs-alternative-diff-merge-tools/</guid>
      <description>&lt;p&gt;There are many things I love about Team Foundation Server, but the supplied diff/merge tool is not one of them. It is – how can I put this? – somewhat basic. Indeed, I’ve heard tell of people going out of their way to avoid merges purely because they find the process so clunky.&lt;/p&gt;
&lt;p&gt;Here’s the good news – you can easily configure TFS to use a different, third-party, diff/merge tool, perhaps the one you’ve grown to know and love over many years of happy software development using other SCM products. Maybe you like &lt;a href=&#34;http://winmerge.org/&#34;&gt;WinMerge&lt;/a&gt;, or love &lt;a href=&#34;http://tortoisesvn.tigris.org/TortoiseMerge.html&#34;&gt;TortoiseMerge&lt;/a&gt;. Perhaps you’re like my friend &lt;a href=&#34;http://www.johnsadventures.com&#34;&gt;John&lt;/a&gt; and swear by &lt;a href=&#34;http://www.sourcegear.com/diffmerge/downloads.html&#34;&gt;SourceGear DiffMerge&lt;/a&gt;. Or maybe, like me, you’re a &lt;a href=&#34;http://www.scootersoftware.com/&#34;&gt;Beyond Compare&lt;/a&gt; fanboy. No problem, they can all be used by TFS. Here’s how:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>There are many things I love about Team Foundation Server, but the supplied diff/merge tool is not one of them. It is – how can I put this? – somewhat basic. Indeed, I’ve heard tell of people going out of their way to avoid merges purely because they find the process so clunky.</p>
<p>Here’s the good news – you can easily configure TFS to use a different, third-party, diff/merge tool, perhaps the one you’ve grown to know and love over many years of happy software development using other SCM products. Maybe you like <a href="http://winmerge.org/">WinMerge</a>, or love <a href="http://tortoisesvn.tigris.org/TortoiseMerge.html">TortoiseMerge</a>. Perhaps you’re like my friend <a href="http://www.johnsadventures.com">John</a> and swear by <a href="http://www.sourcegear.com/diffmerge/downloads.html">SourceGear DiffMerge</a>. Or maybe, like me, you’re a <a href="http://www.scootersoftware.com/">Beyond Compare</a> fanboy. No problem, they can all be used by TFS. Here’s how:</p>
<ul>
<li>Open up the Visual Studio options (<strong>Tools</strong> –&gt; <strong>Options</strong>).</li>
<li>Expand the <strong>Source Control</strong> –&gt; <strong>Visual Studio Team Foundation Server</strong> section.</li>
<li>Click the <strong>Configure User Tools…</strong> button:<!-- raw HTML omitted --></li>
</ul>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<ul>
<li>Click the <strong>Add…</strong> button to set up a new file extension operation:<!-- raw HTML omitted --></li>
</ul>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<ul>
<li>Set up a <strong>Compare</strong> operation to run against all files (extension of *****):<!-- raw HTML omitted --></li>
</ul>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<ul>
<li>Repeat the process to add a <strong>Merge</strong> operation to run against all file extensions.</li>
</ul>
<p>At this point, you’re probably thinking “wooah, what do those argument parameters mean? How do I know what to enter?”. MSDN won’t help you out (“<a href="http://msdn.microsoft.com/en-us/library/ms181446.aspx">type any arguments that your tool requires</a>” – thanks for that!).</p>
<p>Fortunately <a href="http://blogs.msdn.com/jmanning/default.aspx">James Manning</a> has posted <a href="http://blogs.msdn.com/jmanning/articles/535573.aspx">a blog article</a> which not only explains what the argument parameters mean, but also suggests recommended parameters for various popular tools, including those mentioned at the beginning of this post. Thanks, James!</p>
<p>Voila! <strong>OK</strong> your way back out of the dialog boxes, and your Compares and Merges will now be displayed using your favourite Diff/Merge tool. Feel your productivity and confidence soar!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Agile Yorkshire @ The Pub – Exploratory Testing, May 13th</title>
      <link>https://blog.iannelson.uk/agile-yorkshire-the-pub-exploratory-testing-may-13th/</link>
      <pubDate>Thu, 07 May 2009 11:05:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/agile-yorkshire-the-pub-exploratory-testing-may-13th/</guid>
      <description>&lt;p&gt;If I can get a pass out from helping to look after the burgeoning Nelson family for an evening, I’ll be going along to this Agile Yorkshire session next Wednesday.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;may-13th-ralph-williams-exploratory-testing&#34;&gt;May 13th – Ralph Williams: Exploratory Testing&lt;/h3&gt;
&lt;h4 id=&#34;details&#34;&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;In this session, Ralph will provide an overview of some techniques that bring Agility into the world of testing. (The world of testing is a strange place: regarded by most people as a nice place to visit but you wouldn’t want to live there, it is an unmapped wilderness where the waterfall methodology still roams unfettered.)&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>If I can get a pass out from helping to look after the burgeoning Nelson family for an evening, I’ll be going along to this Agile Yorkshire session next Wednesday.</p>
<hr>
<h3 id="may-13th-ralph-williams-exploratory-testing">May 13th – Ralph Williams: Exploratory Testing</h3>
<h4 id="details"><strong>Details</strong></h4>
<p>In this session, Ralph will provide an overview of some techniques that bring Agility into the world of testing. (The world of testing is a strange place: regarded by most people as a nice place to visit but you wouldn’t want to live there, it is an unmapped wilderness where the waterfall methodology still roams unfettered.)</p>
<p>The main focus will be on one such technique, Exploratory Testing. It is defined by many as “simultaneous learning, test design and test execution”, but Ralph will attempt to be more helpful. After the presentation many of you will claim this is what you have been doing all along, but now it has a fancy name you can use it without shame and companies can sell you high-priced consultancy in it.</p>
<h4 id="speaker">Speaker</h4>
<p>Ralph Williams is a Test Consultant at the Yorkshire Building Society, based in Bradford. The Society develops much of the application software used throughout its 140 branches and offices, and Ralph is responsible for managing the testing for some of these systems. He has previously worked in various management, testing and development roles at Erudine, Wanadoo and British Telecom, and specialises in Agile Testing and chocolate.</p>
<p>Venue: Victoria Hotel, Central Leeds</p>
<p>Date/Time: Wednesday, 13th May, 6.30pm for a 7.00pm start.</p>
<p>More details: <a href="http://www.agileyorkshire.org/">http://www.agileyorkshire.org/</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Alt.Net UK In The North</title>
      <link>https://blog.iannelson.uk/alt-net-uk-in-the-north/</link>
      <pubDate>Sun, 19 Apr 2009 20:04:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/alt-net-uk-in-the-north/</guid>
      <description>&lt;p&gt;I spent much of this weekend over in Bradford, talking shop with the good folks at the Alt.Net UK ‘in the North’ conference. I had a great time, learned much, and am grateful to &lt;a href=&#34;http://blogs.blackmarble.co.uk/blogs/rfennell/&#34;&gt;Richard Fennell&lt;/a&gt; of &lt;a href=&#34;http://www.blackmarble.co.uk/&#34;&gt;Black Marble&lt;/a&gt; and the other organisers and sponsors for making the event possible.&lt;/p&gt;
&lt;p&gt;This was the first &lt;a href=&#34;https://en.wikipedia.org/wiki/Open_Space_Technology&#34;&gt;Open Spaces&lt;/a&gt; event I’ve attended, and I was pleasantly surprised at how orderly and productive the sessions turned out to be. Unlike conventional sales-pitch conferences of the MSDN roadshow variety, this was more of an open forum, with an expectation that all of the relatively small number (25ish?) of participants would, well, &lt;em&gt;participate&lt;/em&gt;!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I spent much of this weekend over in Bradford, talking shop with the good folks at the Alt.Net UK ‘in the North’ conference. I had a great time, learned much, and am grateful to <a href="http://blogs.blackmarble.co.uk/blogs/rfennell/">Richard Fennell</a> of <a href="http://www.blackmarble.co.uk/">Black Marble</a> and the other organisers and sponsors for making the event possible.</p>
<p>This was the first <a href="https://en.wikipedia.org/wiki/Open_Space_Technology">Open Spaces</a> event I’ve attended, and I was pleasantly surprised at how orderly and productive the sessions turned out to be. Unlike conventional sales-pitch conferences of the MSDN roadshow variety, this was more of an open forum, with an expectation that all of the relatively small number (25ish?) of participants would, well, <em>participate</em>!</p>
<p>I was also surprised to find that there were more pragmatists in attendance than architecture astronauts. Maybe it’s a reflection of the current economic climate, but a common theme was on finding toolings that were <em>good enough</em> with which to deliver suitable solutions quickly and effectively, rather than striving for architectural purity and perfection.</p>
<p>It was great to hear some war stories, and learn about technologies, tools, methodologies and ideas that are currently exciting other people. It would be difficult to come away from a weekend like this one without some inspiration and a big list of several things to follow up on. Here’s mine:</p>
<ul>
<li><strong><a href="http://www.asp.net/mvc/">MVC Framework</a></strong> – like myself, a lot of the attendees have had enough of the WebForms model, and are excited about the potential of ASP.NET MVC.</li>
<li><strong><a href="http://fluentnhibernate.org/">Fluent NHibernate</a></strong> – it sounds like the project being feverishly worked on by <a href="http://blog.jagregory.com/">James Gregory</a> et al is ready for prime time. People spoke very positively of the ability to ditch XML HBM files in favour of this strongly-typed configuration.</li>
<li><strong><a href="http://www.balsamiq.com/">Balsamiq Mockups</a></strong> – loved by everyone, even despite (or should that be because of?) its use of <!-- raw HTML omitted -->Comic Sans MS<!-- raw HTML omitted -->!</li>
<li><strong>Inversion of Control</strong> – there was a wide mix of IoC containers being used. I’ve tried <a href="http://www.castleproject.org/container/index.html">Castle Windsor</a>, other people made positive murmurings about <a href="http://msdn.microsoft.com/en-us/library/cc468366.aspx">Unity</a> and <a href="http://structuremap.sourceforge.net/Default.htm">StructureMap</a>.</li>
<li><strong><a href="http://www.typemock.com">TypeMock Isolator</a></strong> – apparently capable of mocking the unmockable.</li>
<li><strong><a href="http://www.amazon.co.uk/gp/product/0123740371?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=19450&amp;creativeASIN=0123740371">Sketching User Experiences</a></strong> – everyone who’d heard of him spoke highly of Bill Buxton’s work.</li>
<li><strong><a href="http://www.openquarters.org">Open Quarters CMS</a></strong> – a great demonstration of a CMS built on ASP.NET MVC by <a href="http://www.anthonymain.com/">Anthony Main</a> and Andrew Magee. I look forward to taking a squizz at the source, I’m sure it will be an excellent learning aid.</li>
<li><strong><a href="http://sourceforge.net/projects/ulti-swat">SWAT</a></strong> – a web testing tool developed by some folks at Ultimate Software and released on Sourceforge as an open source project (thanks to <a href="http://mckennatribe.com/">Nick</a> for the link).</li>
<li><strong>Wild Blue Yonder</strong> – a delicious amber ale from Oregon which was on tap at the Sir Titus Salt pub, to where we decamped after the planning session on Friday night. Yum!</li>
</ul>
<p>I’m probably forgetting some things, there was a lot to take in, and I regret not having a pad of paper on hand. Hopefully my memory will be jogged by the blog postings of the other attendees.</p>
<p>Thanks again to all who made it possible, and all the attendees for quality the chat and inspiration.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Seeking Kindred Spirits</title>
      <link>https://blog.iannelson.uk/seeking-kindred-spirits/</link>
      <pubDate>Sun, 12 Apr 2009 14:04:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/seeking-kindred-spirits/</guid>
      <description>&lt;p&gt;I’m coming round to the realization that my hugely enjoyable first contract at &lt;a href=&#34;http://www.ventura.co.uk&#34;&gt;Ventura&lt;/a&gt; last summer might have been something of an anomaly. That project was decidedly agile, test-driven, and used a bunch of modern technologies including Monorail, ExtJS, Subversion, NUnit and NHibernate. The requirements were well-defined, and the team was highly effective, with a pragmatic project management team who kept the development team free from bureaucratic processes, leaving us able to get on with delivering some cracking software in double-quick time.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I’m coming round to the realization that my hugely enjoyable first contract at <a href="http://www.ventura.co.uk">Ventura</a> last summer might have been something of an anomaly. That project was decidedly agile, test-driven, and used a bunch of modern technologies including Monorail, ExtJS, Subversion, NUnit and NHibernate. The requirements were well-defined, and the team was highly effective, with a pragmatic project management team who kept the development team free from bureaucratic processes, leaving us able to get on with delivering some cracking software in double-quick time.</p>
<p>So, it has been something of a surprise to move onto pastures new and discover that there are still organisations out there who follow the <a href="http://en.wikipedia.org/wiki/Waterfall_model">Waterfall model</a> and highly prescriptive change control processes. It also seems that no amount of evangelism or proselytism from freelancers such as myself is likely to change the situation any time soon – it’s just the organisational culture. To be realistic, there comes a point in time at which I have to accept that fact, shut up, and knuckle down to achieving the project deliverables in the manner requested by the client. The customer is always right, as they say.</p>
<p>As I bide my time looking for some new clients who share my development methodology ideologies, I’ve been trying to retain some semblance of sanity by keeping on top of agile techniques and technologies, and by seeking kindred spirits with whom to discuss the same. I was pleasantly surprised to discover the existence of the <a href="http://www.agileyorkshire.org">Agile Yorkshire Club</a>, who meet monthly in the back room of a pub in Leeds. So I pitched up last Wednesday, enjoyed the free beer, met some friendly and seemingly like-minded people, and listened to an interesting session by <a href="http://blogs.blackmarble.co.uk/blogs/rfennell">Richard Fennell</a> of Black Marble as he talked about <a href="http://www.amazon.co.uk/gp/product/0201699478?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=19450&amp;creativeASIN=0201699478">Alistair Cockburn’s Crystal Clear</a> methodology, which seemed to me to be essentially “Pragmatic SCRUM”.</p>
<p>I’ve often heard people say that it’s a good idea to get involved with a local user group, or attend community events, and now I’m starting to appreciate why. In addition to the mind-broadening opportunities, the networking potential for freelancers is also an obvious benefit. If, like me, you’ve never before tried to get “out there” and meet other IT professionals, why not give it a shot? If a shy and reserved geek like me can do it, anyone can.</p>
<p>And if you organise or know of other, similar groups local to Leeds, I’d be interested in hearing about them.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Failed MCP Exam 70-553 :(</title>
      <link>https://blog.iannelson.uk/failed-mcp-exam-70-553/</link>
      <pubDate>Sun, 12 Apr 2009 13:04:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/failed-mcp-exam-70-553/</guid>
      <description>&lt;p&gt;My current primary client has an annoying habit of closing for random days and half-days, including last Thursday afternoon. I decided to try to make the most of this time off, by taking &lt;a href=&#34;http://www.microsoft.com/learning/en/us/exams/70-553.mspx&#34;&gt;Microsoft exam 70-553&lt;/a&gt;, which has the snappy title “&lt;em&gt;UPGRADE: MCSD Microsoft .NET Skills to MCPD Enterprise Application Developer by Using the Microsoft .NET Framework: Part 1&lt;/em&gt;”. I’ve already passed the second part of the upgrade process (70-554), so passing this exam would give me no fewer than four new certifications, including the prestigious MCPD Enterprise Application Developer.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>My current primary client has an annoying habit of closing for random days and half-days, including last Thursday afternoon. I decided to try to make the most of this time off, by taking <a href="http://www.microsoft.com/learning/en/us/exams/70-553.mspx">Microsoft exam 70-553</a>, which has the snappy title “<em>UPGRADE: MCSD Microsoft .NET Skills to MCPD Enterprise Application Developer by Using the Microsoft .NET Framework: Part 1</em>”. I’ve already passed the second part of the upgrade process (70-554), so passing this exam would give me no fewer than four new certifications, including the prestigious MCPD Enterprise Application Developer.</p>
<p>I was not as prepared as I should have been before facing such an exam, but it is currently available at a 40% discount, and having the afternoon to spare I thought it was worth a shot.</p>
<p>Well, unfortunately I failed by a narrow margin. The exam is in three sections, covering the material from three other exams which is new to .NET 2.0. I passed both the <a href="http://www.microsoft.com/learning/en/us/exams/70-536.aspx">Application Development Foundation</a> and <a href="http://www.microsoft.com/learning/en/us/exams/70-528.mspx">Web-Based Client Development</a>, but fell short of passing the <a href="http://www.microsoft.com/learning/en/us/exams/70-526.mspx">Windows-Based Client Development</a> section by the equivalent of one question! That’s probably a fair result, as I’ve spent much less time working with Winforms than Webforms.</p>
<p>So, back to the books I go, and await another suitable opportunity to retake the exam that doesn’t involve losing out on half a day’s revenue. Areas on which I plan to bone up include the TableLayoutPanel, ContextMenuStrip, PropertyGrid, ErrorProvider, BackgroundWorker, and ClickOnce deployment technologies.</p>
<p>On the positive side, failing the exam has at least helped me to discover where there are gaps in my .NET knowledge, and enhanced my respect for the MS certifications in general – you can’t just pitch up on a whim and expect to pass these things, you really do have to know the syllabus material.</p>
]]></content:encoded>
    </item>
    <item>
      <title>ASP.NET Just Became a Legacy Platform</title>
      <link>https://blog.iannelson.uk/asp-net-just-became-a-legacy-platform/</link>
      <pubDate>Sun, 22 Mar 2009 21:03:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/asp-net-just-became-a-legacy-platform/</guid>
      <description>&lt;p&gt;One of the least surprising but more significant announcements to come out of &lt;a href=&#34;http://live.visitmix.com/&#34;&gt;Mix ‘09&lt;/a&gt; last week was the general availability of &lt;a href=&#34;http://www.asp.net/mvc/&#34;&gt;ASP.NET MVC 1.0&lt;/a&gt;. The development process for this framework has been very transparent, with no fewer than eight previews, betas and release candidates made available over the past year or so.&lt;/p&gt;
&lt;p&gt;Microsoft are being careful to tout ASP.NET MVC as being “an alternative, not a replacement, for ASP.NET Web Forms”, but just look at their list of some of its benefits:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>One of the least surprising but more significant announcements to come out of <a href="http://live.visitmix.com/">Mix ‘09</a> last week was the general availability of <a href="http://www.asp.net/mvc/">ASP.NET MVC 1.0</a>. The development process for this framework has been very transparent, with no fewer than eight previews, betas and release candidates made available over the past year or so.</p>
<p>Microsoft are being careful to tout ASP.NET MVC as being “an alternative, not a replacement, for ASP.NET Web Forms”, but just look at their list of some of its benefits:</p>
<ul>
<li>Clear separation of concerns</li>
<li>Testability – support for Test-Driven Development</li>
<li>Fine-grained control over HTML and JavaScript</li>
<li>Intuitive URLs</li>
</ul>
<p>Which begs the question – if you were kicking off development of a new web-based application on the Microsoft platform today, why would you even consider using Web Forms? Surely the choice now boils down to Silverlight or ASP.NET MVC? I fully expect that, by the time the summer Olympics come to London, Web Forms will be considered to be a legacy platform, with job adverts referring to it as “<em>Classic ASP.NET</em>”.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>And that’s probably no bad thing. Sure, for those of us who lived through the static web, CGI forms and classic ASP, ASP.NET was a godsend, with its cunning state management techniques, custom controls, and page lifecycle events. But, even in the hands of decent developers, it does tend to promote a magic pushbutton anti-pattern, with untestable business logic frequently dumped in the code-behind. So, as a fanboy of OOP, TDD, and Separation of Concerns, this eventual release of ASP.NET MVC comes as a source of great pleasure to me, and means that I can look forward to many more years of enjoyably developing web apps on the MS platform.</p>
<p>But hang on a cotton-picking minute – what exactly is truly new, here? Haven’t we been able to do MVC development on the MS platform for years, using <a href="http://www.castleproject.org/MonoRail/">Castle Monorail</a>? Well, yes we have – I had the pleasure of using it last summer when developing systems for <a href="http://www.cmoptions.org/">Child Maintenance Options</a>. And Monorail itself was inspired by <a href="http://api.rubyonrails.org/">Ruby on Rails</a>, and the J2EE platform has had <a href="http://struts.apache.org/">Apache Struts</a> for donkey’s years (I used it briefly in the summer of 2002 when developing systems for <a href="http://www.three.co.uk">Three</a>).</p>
<p>So, if we could do this stuff already, even on the ASP.NET platform, why does the release of ASP.NET MVC still matter so much?</p>
<p>The slightly depressing but inevitable truth is that it matters because it’s a product which has been developed by and will be fully supported by Microsoft. To many organisations, that’s reason enough to use it when they would have never in a month of Sundays considered using the likes of Monorail.</p>
<p>As a crude indicator of popularity, consider the questions posted on <a href="http://stackoverflow.com/">Stack Overflow</a> to date. 1819 of them have been tagged “ASP.NET-MVC”, whilst a mere 22 have been tagged “Monorail” or “Castle-Monorail”.</p>
<p>The same can be seen of many other modern technologies used in the development of custom applications. Take <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">ORM</a> for example – <a href="http://www.hibernate.org/343.html">NHibernate</a> has been around for, what, around six years or so since it was originally ported from <a href="http://www.hibernate.org/">Hibernate</a> (I seem to have <a href="https://blog.iannelson.uk/nhibernate/">first mentioned it on this blog in 2004</a>). But the traction that <a href="http://msdn.microsoft.com/en-us/library/bb386976.aspx">LINQ to SQL</a> and <a href="http://msdn.microsoft.com/en-us/library/bb399572.aspx">Entity Framework</a> have garnered in their short existence has already almost outstripped the popularity of NHibernate by some metrics.</p>
<p>Entity Framework, while not to everyone’s taste, at least has the potential to offer something quite different and distinct from NHibernate. But the same can’t be said of some other recent examples of Microsoft’s ongoing <a href="http://en.wikipedia.org/wiki/Embrace,_extend_and_extinguish">Embrace, Extend and Extinguish</a> policy – what does Visual Studio Unit Testing offer that <a href="http://www.nunit.org/index.php">NUnit</a> didn’t? Why develop the <a href="http://msdn.microsoft.com/en-us/library/cc468366.aspx">Unity Application Block</a> in a universe that already contains <a href="http://www.castleproject.org/container/index.html">Castle Windsor</a> and a plethora of other <a href="http://en.wikipedia.org/wiki/Inversion_of_Control">IoC</a> containers? How long will it be before Microsoft write their own <a href="http://en.wikipedia.org/wiki/Mock_object">mock object</a> framework? Surely they will eventually do so, to meet the demands of the large proportion of dev shops that simply won’t touch none-MS tooling.</p>
<p>Why this should be the case, I can’t really say, but as a freelance developer I’ve seen it with my own eyes – working with organisations with technical strategies that specify the use of Microsoft technologies wherever possible, and shun the adoption of open source or third-party solutions. I hear people say “we’ll wait for Entity Framework to mature, rather than trying NHibernate”, and I see the funny stares people give me when I meekly suggest that we use <a href="http://www.codeplex.com/xunit">xUnit.Net</a> or <a href="http://code.google.com/p/moq/">Moq</a> on a project.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>So, perhaps we can’t entirely blame Microsoft. True, their practices do sometimes feel to be anti-competitive and limiting of choice. But they are a business after all, and are merely meeting the demands of their customers.</p>
<p>And is it really in my best interests to complain about these practices? I am a freelance developer and Microsoft registered partner and have to be pragmatic about this. I am in business developing custom applications for the Microsoft platform, and in doing so I want to use 21st-century techniques such as ORM, the MVC pattern, unit testing, mocking, IoC, etc. If my clients are more likely to be receptive to those concepts if there exists a suitable Microsoft implementation, then so be it. But please, let me continue using NHibernate instead of Entity Framework…</p>
<p>ASP.NET RIP. Long live ASP.NET MVC.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Zero Interest Bug Arrives</title>
      <link>https://blog.iannelson.uk/zero-interest-bug-arrives/</link>
      <pubDate>Thu, 05 Feb 2009 15:02:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/zero-interest-bug-arrives/</guid>
      <description>&lt;p&gt;So, base rates are now down to 1.0%, and the &lt;a href=&#34;https://blog.iannelson.uk/zero-interest-bug/&#34;&gt;Zero Interest Bug&lt;/a&gt; is not just conjecture.&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;http://www.timesonline.co.uk/tol/money/property_and_mortgages/article5668432.ece&#34;&gt;The Times&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“About 1,500 customers who took out a tracker mortgages pegged at 1.01 points below the base rate with Cheltenham &amp;amp; Gloucester (C&amp;amp;G), owned by Lloyds Banking Group, will be paying no interest at all on their home loans from next month.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;It is the first time that a mortgage lender has been forced to reduce the interest on their home loans to zero.&lt;/em&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>So, base rates are now down to 1.0%, and the <a href="https://blog.iannelson.uk/zero-interest-bug/">Zero Interest Bug</a> is not just conjecture.</p>
<p>From <a href="http://www.timesonline.co.uk/tol/money/property_and_mortgages/article5668432.ece">The Times</a>:</p>
<p><em>“About 1,500 customers who took out a tracker mortgages pegged at 1.01 points below the base rate with Cheltenham &amp; Gloucester (C&amp;G), owned by Lloyds Banking Group, will be paying no interest at all on their home loans from next month.</em></p>
<p><em>It is the first time that a mortgage lender has been forced to reduce the interest on their home loans to zero.</em></p>
<p><em>Lloyds Banking Group, now 43 per cent owned by the taxpayer and also the owner of C&amp;G, said that there was a zero floor to the deal and that <strong>because its computer systems could not cope with zero</strong>, it would be temporarily charging 0.001 per cent, or 8p a month for a borrower with a £100,000 mortgage. However, that money will be refunded.”</em></p>
<p>I bet those jammy 1,500 people are feeling quite smug today. Needless to say, I’m still kicking myself very hard for fixing my mortgage last summer… sob!</p>
]]></content:encoded>
    </item>
    <item>
      <title>NDepend</title>
      <link>https://blog.iannelson.uk/ndepend/</link>
      <pubDate>Wed, 04 Feb 2009 15:02:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/ndepend/</guid>
      <description>&lt;p&gt;OK, dear readers, today I’d like to talk about tools.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Software development isn’t really so different from traditional skilled crafts in that it is important to have an understanding of the tools available to help you create a quality products in the least amount of time possible.&lt;/p&gt;
&lt;p&gt;For .NET developers, the Visual Studio IDE is usually just the starting point, and most of us will come to rely on some of the tools listed in Scott Hanselman’s famous &lt;a href=&#34;http://www.hanselman.com/tools&#34;&gt;tools list&lt;/a&gt;. Personally, I can’t imagine coding without first installing &lt;a href=&#34;http://www.devexpress.com/refactor&#34;&gt;Refactor Pro&lt;/a&gt;, editing text files in anything other than &lt;a href=&#34;http://www.textpad.com&#34;&gt;TextPad&lt;/a&gt;, or working on a machine that doesn’t have Snag It installed.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>OK, dear readers, today I’d like to talk about tools.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>Software development isn’t really so different from traditional skilled crafts in that it is important to have an understanding of the tools available to help you create a quality products in the least amount of time possible.</p>
<p>For .NET developers, the Visual Studio IDE is usually just the starting point, and most of us will come to rely on some of the tools listed in Scott Hanselman’s famous <a href="http://www.hanselman.com/tools">tools list</a>. Personally, I can’t imagine coding without first installing <a href="http://www.devexpress.com/refactor">Refactor Pro</a>, editing text files in anything other than <a href="http://www.textpad.com">TextPad</a>, or working on a machine that doesn’t have Snag It installed.</p>
<h4 id="mri-for-your-net-application">MRI For Your .NET Application</h4>
<p>Another one of the tools that I reach for frequently, and the subject of this blog post, is <strong><a href="http://www.ndepend.com">NDepend</a></strong>, which performs rapid static analysis of a set of .NET assemblies and provides a deliciously visual interface for interpreting and understanding the results. Through the use of this tool, architects and developers can quickly spot problems or potential areas for improvements in a codebase. It’s essentially an MRI Scanner for your .NET code!<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h4 id="so-what-does-it-do">So.. What Does It Do?</h4>
<p>I’ve briefly mentioned my use of NDepend before – for example I <a href="https://blog.iannelson.uk/msb3247-dependent-assembly-conflicts/">blogged in December</a> about how I was able to use NDepend to resolve an MSB3247 compiler warning which a developer was experiencing. But there’s much more to it than just helping solve simple assembly reference problems. Some of my favourite features include:</p>
<p>An interactive <strong>Dependency Graph</strong>, giving a visual representation of the relationships between assemblies (both within your application, and any third-party and system dependencies). Here’s an example output from analysing the S#arp Architecture project:<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>The <strong>Dependency Matrix</strong> cross-tabulates all the references between assemblies, allowing for drilling down to member level. Remember all those dictats you issued to the dev team in your coding standards, such as “don’t reference the data layer from the front-end”? Well, this is the window you’ll use for ensuring that the team are abiding by such rules. Usefully, cyclical references between namespaces are particularly highlighted.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>The <strong>Metrics Window</strong> is where I tend to spend most of my time, using the inbuilt CQL (Code Query Language) to identify areas of the codebase which are ripe for refactoring. This area of the tool is like FxCop on steroids.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>I’m also a big fan of the <strong>Changes Explorer</strong> functionality, which highlights at a glance the changes made between any two builds of an application. Also the ability to import <strong>Code Coverage</strong> files from NCover or Visual Studio Team System, to similarly highlight the areas of a solution which are adequately covered by <a href="https://blog.iannelson.uk/12-reasons-why-i-love-unit-tests/">unit tests</a>.</p>
<h4 id="real-world-benefits">Real-World Benefits</h4>
<p>NDepend is useful when looking at your own code, but really comes into its own when you want to quickly grok a codebase developed by someone else. Here’s an example:</p>
<p>My current client have the IP rights to a bespoke .NET application which has been developed for them by a third party. They plan to bring the development of this application in house, and recently asked me to take a look through the source and feed back my thoughts on the architecture.</p>
<p>Initially, I made the mistake of doing this code review solely by looking at the code itself, through the IDE. I was impressed – the code was exceedingly clean, the solution well-structured, and everything looked very straightforward. The object model was mapped to the database using <a href="https://blog.iannelson.uk/on-the-joys-of-object-relational-mapping/">NHibernate</a>, which in turn was abstracted from the appliation code by a standard DAO pattern. So far so good, and I was about to email a thumbs-up.</p>
<p>But I smelled a rat – the code was almost too clean, and I couldn’t find the actual meat of the business logic. So, I whipped out NDepend (which I really should have done initially), ran an analysis, and realised that the cleanliness and simplicity of the middle tier was due to over two-thirds of the solution logic existing in the user interface layer! In fact 28% of the IL instructions from the entire solution were contained in the code-behind of just three web pages. It was a classic example of the <a href="http://en.wikipedia.org/wiki/Magic_pushbutton">magic pushbutton anti-pattern</a>, and I very nearly failed to spot it.</p>
<h4 id="tmi">TMI?</h4>
<p>If I had to identify a drawback to NDepend, it is the risk that much of the output information may be meaningless to the average .NET developer. Returning to my earlier medical analogies, an X-Ray or MRI Scan is useless in itself until it is viewed by a medical professional with the knowledge and experience to interpret the results.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>This potential problem is somewhat alleviated by the explanatory videos, <a href="http://codebetter.com/blogs/patricksmacchia/">Patrick’s extensive blogging</a>, and indeed the range of predefined CQL queries which serve to interpret the results and highlight potential problems. Even so, I suspect NDepend is more likely to be found in the toolkit of the architect or lead developer rather than the hobbyist – especially given the EUR 299 price tag for a professional license.</p>
<h4 id="final-thoughts">Final Thoughts</h4>
<p>To summarise, NDepend provides a short-cut to quickly understanding a .NET codebase and identifying potential improvements. If the quality of your code is important to you, or you frequently have to review code developed by other people, then I think you’ll find NDepend to be indispensable.</p>
<p><em>Disclaimer: Ian Nelson was provided with a complementary review copy of NDepend Professional version 2.0, and has subsequently paid for later editions of the software.</em></p>
]]></content:encoded>
    </item>
    <item>
      <title>.NET Coding Standards</title>
      <link>https://blog.iannelson.uk/net-coding-standards/</link>
      <pubDate>Fri, 23 Jan 2009 15:01:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/net-coding-standards/</guid>
      <description>&lt;p&gt;Sometimes, when you join a new team as a .NET developer, the team lead proudly points you in the direction of a Word document or wiki page detailing the team’s house coding standards.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;In my experience, these documents are invariably:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Incomplete.&lt;/li&gt;
&lt;li&gt;Subjective.&lt;/li&gt;
&lt;li&gt;Not enforced.&lt;/li&gt;
&lt;li&gt;Largely copied from the interweb.&lt;/li&gt;
&lt;li&gt;Obsessed with the trivial (e.g. whitespace) while failing to mention the genuinely useful (e.g. boxing/unboxing, avoiding use of deprecated classes, Dispose pattern, etc).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I know this because I’ve been involved in creating such documents in the past 🙂&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Sometimes, when you join a new team as a .NET developer, the team lead proudly points you in the direction of a Word document or wiki page detailing the team’s house coding standards.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>In my experience, these documents are invariably:</p>
<ul>
<li>Incomplete.</li>
<li>Subjective.</li>
<li>Not enforced.</li>
<li>Largely copied from the interweb.</li>
<li>Obsessed with the trivial (e.g. whitespace) while failing to mention the genuinely useful (e.g. boxing/unboxing, avoiding use of deprecated classes, Dispose pattern, etc).</li>
</ul>
<p>I know this because I’ve been involved in creating such documents in the past 🙂</p>
<p>Don’t get me wrong, I’m all in favour of creating clean code, and promoting standards within a team. I just find that most in-house style guides fail to achieve this, for the reasons listed above.</p>
<p>So, as I was walking through the city today, I started having a little debate with myself. “OK then, smarty-pants. What’s your alternative? What would your in-house coding standards guidelines look like?”</p>
<p>I think it can be summarised by four simple points, listed in order of importance:</p>
<p><strong>1. Don’t Ignore Compiler Warnings</strong></p>
<p>You might think this would be an obvious one, but I’ve lost count of the number of times I’ve retrieved a solution from source control, compiled it, and been presented with a list of compiler warnings. Most of the time, there’s no excuse for this. If the <em>compiler</em> smells a rat in your code, then you’ve got a problem, be it variables that are used without being initialized, unused variables, unreachable code, or whatever. It’s sloppy code, and it’s easily avoided, so don’t leave it for the next guy to clean up. I am, if you hadn’t guessed, a big fan of setting the “treat compiler warnings as errors” flag in a project’s build properties.</p>
<p><strong>2. Follow the Framework Design Guidelines</strong></p>
<p>The <a href="http://www.amazon.co.uk/gp/product/0321545613?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=19450&amp;creativeASIN=0321545613">Framework Design Guidelines</a> is another one of those books whose name doesn’t do it justice. The sagely guidance it contains is appropriate not only to Microsofties developing the FCL itself, but to anyone writing any .NET code. Don’t let your developers near a copy of Visual Studio until they’ve provided a sworn affidavit confirming that they’ve read this book! 🙂</p>
<p>All of the guidelines are concisely boiled down into Do, Consider, Avoid, and Do Not recommendations, and you would do well to adhere to these. Getting a few copies of this book for your team is a much more effective and cost-effective approach than trying to develop your own coding standards.</p>
<p><strong>3. Run FxCop</strong></p>
<p>Having read and digested the Framework Design Guidelines, you need an easy way to enforce them. This is best achieved by running <a href="http://www.amazon.co.uk/gp/product/0321545613?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=19450&amp;creativeASIN=0321545613">FxCop</a> against your code (now integrated into some of the Visual Studio SKUs as a “Code Analysis” option).</p>
<p>Depending on the target audience for your solution, you may consider it reasonable to ignore some of the localization recommendations (i.e. when developing in-house line of business applications with limited geographical reach). But generally, if FxCop flags a warning in your code, I believe you would be well advised to correct the problem. Doing this helps to avoid a wide range of performance, security and design issues, in addition to enforcing consistent source code conventions.</p>
<p><strong>4. Run StyleCop</strong></p>
<p>Finally, if you simply must achieve that uniform source code appearance that the whitespace Nazis in every team strive for, consider requiring that your devs run their code through <a href="http://code.msdn.microsoft.com/sourceanalysis">StyleCop</a> before checking in. It may initially be a bit annoying, and for sure some of the recommendations are highly subjective, but there’s no arguing that it does enforce a standard style, with a strong focus on increasing readability and reducing ambiguity.</p>
<p><strong>And After That…?</strong></p>
<p>Following the four points above should result in the low-level codebase produced by a team being readable, of high quality, in a common style, and free of many common “gotchas”. It doesn’t validate the higher-level architectural considerations, but in my opinion that is outside the scope of such a document, and could best be achieved through the use of a tool such as <a href="https://blog.iannelson.uk/ndepend/">NDepend</a>. But that’s a topic for another post…</p>
]]></content:encoded>
    </item>
    <item>
      <title>SQL Server Point-in-Time Restore</title>
      <link>https://blog.iannelson.uk/sql-server-point-in-time-restore/</link>
      <pubDate>Fri, 23 Jan 2009 14:01:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/sql-server-point-in-time-restore/</guid>
      <description>&lt;p&gt;One of the multiple hats that I’m currently wearing for a client is that of SQL Server DBA. In this guise, I have recently fielded a couple of email queries from users concerned about the data recovery options available to them, should application data be inadvertently deleted:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“What kind of database backup and restore mechanism is in place for [application]? If someone deletes any data from [application] front end is it possible to restore it? Generally the way to recover data would be to restore the database from a database backup file, however this would restore all data held in the backup and would overwrite any changes made since the time of the backup.”&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>One of the multiple hats that I’m currently wearing for a client is that of SQL Server DBA. In this guise, I have recently fielded a couple of email queries from users concerned about the data recovery options available to them, should application data be inadvertently deleted:</p>
<blockquote>
<p>“What kind of database backup and restore mechanism is in place for [application]? If someone deletes any data from [application] front end is it possible to restore it? Generally the way to recover data would be to restore the database from a database backup file, however this would restore all data held in the backup and would overwrite any changes made since the time of the backup.”</p></blockquote>
<p>and</p>
<blockquote>
<p>“If user A corrupts data entry in some way, and needs to go back to a version X of the database before the corruption, will user B also have to go back to version X and potentially lose any ‘good’ they themselves might have added since version X?”</p></blockquote>
<p>I replied explaining that this is one of the many reasons for choosing SQL Server to provide the database back-end for critical applications, rather than, say, Access (don’t get me started on the prevalence of Access in mission-critical applications, it’s a bit of a bugbear).</p>
<p>If you have your SQL database recovery model set to Full or Bulk-Logged (and if not, why not?) then it is possible to <a href="http://www.microsoft.com/technet/prodtechnol/sql/2000/maintain/sqlbackuprest.mspx#ET2AE">restore from transaction log backups to a point in time</a>. So, in a data loss scenario like those outlined in the emails above, you would take a backup of the transaction log, and restore a <strong>new copy</strong> of the database to a point in time just before the deletion. The missing data could then be copied from the restored copy across to the live database. Easy.</p>
<p>Even so, just because this functionality exists doesn’t mean you should plan to use it. Flipping back to my system developer persona makes me question why the application allows users to perform non-logged hard deletes? Soft deletes would be far preferable (i.e. setting a “deleted” bit on the relevant rows). Better still are ledgering systems (like the bank statement paradigm), which handle updates and deletions by making a change entry, or entering an offsetting transaction.</p>
]]></content:encoded>
    </item>
    <item>
      <title>On 64-bit TFS, Virtualization, and Conchango SCRUM</title>
      <link>https://blog.iannelson.uk/on-64-bit-tfs-virtualization-and-conchango-scrum/</link>
      <pubDate>Fri, 23 Jan 2009 12:01:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/on-64-bit-tfs-virtualization-and-conchango-scrum/</guid>
      <description>&lt;p&gt;Earlier this week I picked up a hire car and headed over to deepest Cheshire to install an instance of Team Foundation Server 2008 for a client. Before setting off, I tried to make sure that all the prerequisites were in place – i.e. that there was a suitably-specced server available for use, which was connected to the domain, that all the necessary service accounts were created, and firewall ports opened, etc.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Earlier this week I picked up a hire car and headed over to deepest Cheshire to install an instance of Team Foundation Server 2008 for a client. Before setting off, I tried to make sure that all the prerequisites were in place – i.e. that there was a suitably-specced server available for use, which was connected to the domain, that all the necessary service accounts were created, and firewall ports opened, etc.</p>
<p>So, I kicked myself somewhat on arrival when I realised that the server was running a 64-bit OS, and remembered that the application tier of TFS only supports 32-bit. Doh! This blog entry is partly intended to prevent me from ever forgetting that again.</p>
<p>However, it all turned out fine in the end. There were other reasons why I didn’t relish the prospect of installing TFS on the box in question – namely that it was also being used as a domain controller and SQL Server (this isn’t as bad as it sounds – the server exists solely to provide an R&amp;D development environment for a new project with demanding timescales). So, the solution I opted for was to install <a href="http://www.microsoft.com/windowsserversystem/virtualserver/">Virtual Server 2005 R2</a>, and then install TFS on a virtual machine running a 32-bit OS. This worked well, as the host server was massively over-specced for the tasks at hand.</p>
<p>I think virtualization is a technology whose time has really come, it certainly makes it very easy to set up development environments like this one, where the number of servers required exceeds the number of physical servers available. Occasionally I come across posts on the web from people who’re trying to install, say, TFS, SQL Server, SharePoint, and Exchange all on the same server, and getting into a pickle. Don’t do it. Embrace virtualization. Developers know all about <a href="http://en.wikipedia.org/wiki/Separation_of_concerns">separation of concerns</a> when designing software solutions – try the equivalent approach when configuring your development servers.</p>
<p>As an aside – the team chose to use <a href="http://scrumforteamsystem.com/en/default.aspx">Conchango’s SCRUM for Team System process template</a>, which seems to work very well, and I recommend it for anyone running a project using the SCRUM methodology. Remember, TFS is process-agnostic, you’re not limited to using MSF.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Zero Interest Bug</title>
      <link>https://blog.iannelson.uk/zero-interest-bug/</link>
      <pubDate>Fri, 19 Dec 2008 12:12:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/zero-interest-bug/</guid>
      <description>&lt;p&gt;I started my career in professional software development a decade or so ago by testing and fixing banking code that had fallen victim to the millennium bug.&lt;/p&gt;
&lt;p&gt;Could the prospect of zero percent interest rates create a similar boom in demand for software developers?&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;http://www.contractoruk.com/004128.html&#34;&gt;Contractor UK&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Interest rates have plummeted from 5% to 2% since early October and are heading lower. Some analysts say 0% is not out of the question.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I started my career in professional software development a decade or so ago by testing and fixing banking code that had fallen victim to the millennium bug.</p>
<p>Could the prospect of zero percent interest rates create a similar boom in demand for software developers?</p>
<p>From <a href="http://www.contractoruk.com/004128.html">Contractor UK</a>:</p>
<blockquote>
<p>Interest rates have plummeted from 5% to 2% since early October and are heading lower. Some analysts say 0% is not out of the question.</p>
<p>Imagine all the policy bounds checkers and field validation routines that need modifying to handle zero percent interest rates. The entire insurance industry will be clambering to find COBOL programmers able to understand 30 year old code and everybody else will benefit as demand escalates.</p></blockquote>
]]></content:encoded>
    </item>
    <item>
      <title>MSB3247 – Dependent Assembly Conflicts</title>
      <link>https://blog.iannelson.uk/msb3247-dependent-assembly-conflicts/</link>
      <pubDate>Thu, 04 Dec 2008 21:12:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/msb3247-dependent-assembly-conflicts/</guid>
      <description>&lt;p&gt;Earlier today a dev came over to ask me about a compiler warning he was getting when building a .NET solution:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MSB3247: Found conflicts between different versions of the same dependent assembly.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is basically telling you that one project or dependency in your solution is referencing one version of an assembly, whilst another project or dependency is trying to reference a different version of the same assembly. Unhelpfully, the message and build output don’t tell you &lt;em&gt;which&lt;/em&gt; dependent assembly is causing the problem!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Earlier today a dev came over to ask me about a compiler warning he was getting when building a .NET solution:</p>
<blockquote>
<p>MSB3247: Found conflicts between different versions of the same dependent assembly.</p></blockquote>
<p>This is basically telling you that one project or dependency in your solution is referencing one version of an assembly, whilst another project or dependency is trying to reference a different version of the same assembly. Unhelpfully, the message and build output don’t tell you <em>which</em> dependent assembly is causing the problem!</p>
<p>To solve this, I reached for <a href="http://www.ndepend.com">NDepend</a> and tried to analyze the compiled assemblies. The conflicting assemblies were both excluded from the analysis and a warning message explained that this was a clash between two versions of System.Web.Extensions.dll – 3.5.0.0 was being referenced by a Telerik UI control, and an earlier version was being used by the developer’s application. This kind of dependency clash is one potential drawback of relying too heavily on third-party controls.</p>
<p>I was going to suggest bringing the application up to date and referencing the newer dll, but a quick squizz at NDepend’s dependency graph revealed that the Telerik assembly wasn’t actually being used by the application at all, and nor were several other referenced components! Deleting the unused references left a slightly leaner, faster-compiling solution with zero build warnings.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Performance of Loops on Collections</title>
      <link>https://blog.iannelson.uk/performance-of-loops-on-collections/</link>
      <pubDate>Fri, 28 Nov 2008 12:11:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/performance-of-loops-on-collections/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://codebetter.com/blogs/patricksmacchia/archive/2008/11/19/an-easy-and-efficient-way-to-improve-net-code-performances.aspx&#34;&gt;Interesting article&lt;/a&gt; from &lt;a href=&#34;http://codebetter.com/blogs/patricksmacchia&#34;&gt;Patrick Smacchia&lt;/a&gt; (the &lt;a href=&#34;http://www.ndepend.com&#34;&gt;NDepend&lt;/a&gt; guy) in which he runs some benchmarks on the cost of looping in different ways over different constructs and comes to the conclusion that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“looping on array using for is &lt;strong&gt;5 times cheaper&lt;/strong&gt; than looping on List&lt;!-- raw HTML omitted --&gt; using foreach (which I believe, is what we all do)”&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Well worth a read, although I suspect that in my solutions the bottlenecks will remain the out-of-process calls, i.e. database access and web service calls. Still, a 5x gain is not to be sniffed at.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><a href="http://codebetter.com/blogs/patricksmacchia/archive/2008/11/19/an-easy-and-efficient-way-to-improve-net-code-performances.aspx">Interesting article</a> from <a href="http://codebetter.com/blogs/patricksmacchia">Patrick Smacchia</a> (the <a href="http://www.ndepend.com">NDepend</a> guy) in which he runs some benchmarks on the cost of looping in different ways over different constructs and comes to the conclusion that:</p>
<blockquote>
<p>“looping on array using for is <strong>5 times cheaper</strong> than looping on List<!-- raw HTML omitted --> using foreach (which I believe, is what we all do)”</p></blockquote>
<p>Well worth a read, although I suspect that in my solutions the bottlenecks will remain the out-of-process calls, i.e. database access and web service calls. Still, a 5x gain is not to be sniffed at.</p>
<p><a href="http://codebetter.com/blogs/patricksmacchia/archive/2008/11/19/an-easy-and-efficient-way-to-improve-net-code-performances.aspx">Patrick Smacchia – An easy and efficient way to improve .NET code performance</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>12 Reasons Why I Love Unit Tests</title>
      <link>https://blog.iannelson.uk/12-reasons-why-i-love-unit-tests/</link>
      <pubDate>Tue, 11 Nov 2008 22:11:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/12-reasons-why-i-love-unit-tests/</guid>
      <description>&lt;p&gt;On my continuing journey through this thrilling world of professional software development, I frequently encounter teams who hold no truck with this crazy new-fangled concept of unit testing. Heck, truth be told, I sometimes come across teams who don’t use &lt;em&gt;source control&lt;/em&gt;, but that’s by the bye.&lt;/p&gt;
&lt;p&gt;In these situations, I try my best to lead by example, continuing to practise TDD on any new code that I cut, and insisting on covering with unit tests any pre-existing code which I have to modify. Sooner or later, this prompts someone to ask why I am doing this (often insinuating that I am wasting my time, and by implication the client’s money). At that point, flustered, I invariably struggle to remember or adequately articulate the many and various ways in which unit testing makes me a better developer. So, consider this blog post a personal aide-mémoire to help me the next time this occurs (as well as being a homage to &lt;a href=&#34;http://uk.youtube.com/watch?v=DW1AHrTNBao&#34;&gt;Jake Shillingford’s second-best song&lt;/a&gt;).&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>On my continuing journey through this thrilling world of professional software development, I frequently encounter teams who hold no truck with this crazy new-fangled concept of unit testing. Heck, truth be told, I sometimes come across teams who don’t use <em>source control</em>, but that’s by the bye.</p>
<p>In these situations, I try my best to lead by example, continuing to practise TDD on any new code that I cut, and insisting on covering with unit tests any pre-existing code which I have to modify. Sooner or later, this prompts someone to ask why I am doing this (often insinuating that I am wasting my time, and by implication the client’s money). At that point, flustered, I invariably struggle to remember or adequately articulate the many and various ways in which unit testing makes me a better developer. So, consider this blog post a personal aide-mémoire to help me the next time this occurs (as well as being a homage to <a href="http://uk.youtube.com/watch?v=DW1AHrTNBao">Jake Shillingford’s second-best song</a>).</p>
<p><strong>1. I know that my code works.</strong></p>
<p>Let’s get the obvious one out of the way first. If I take the time to write unit tests for my code, then I know that the code “works” (i.e. that it behaves as I intended, or hopefully as the specification requested). Any time I want to check that my code works, I can do so with a few clicks. The confidence and feeling of well-being that this brings can’t be underestimated. If you don’t have unit tests, how do you know that your code works?</p>
<p><strong>2. I know when I’m finished.</strong></p>
<p>As you’ll know if you’ve read my <a href="https://blog.iannelson.uk/remember-the-milk/">post professing my undying love for Remember The Milk</a>, I’m fond of organising my life through to-do lists. When I’m developing software, the unit tests that I create before developing the code act as my to-do list, help me focus on what it is that I’m trying to achieve, without getting distracted making unrelated changes to the codebase. When all the tests go green, I know I’m done and can move on to the next task.</p>
<p><strong>3. I can develop cleaner APIs.</strong></p>
<p>I’m not much of a UI developer; I spend much more of my time working in the middle tier, making class libraries, object models, WCF services and the like. When practicing TDD, I write tests to consume my code before I write the code itself. This forces me to think about things like method signatures and member visibility. Should that method really be public? Do I really need that “out” parameter? Will all those overloads get used? If I didn’t write tests for the middle tier in this way, I wouldn’t consider these questions in quite so much detail, and these issues wouldn’t come to light until I (or worse, someone else), began consuming my code for real.</p>
<p><strong>4. Testable code is well-designed code.</strong></p>
<p>This one came as an unexpected surprise to me after I had been writing unit tests for a while and forced myself to make the effort to test code which I initially felt was difficult to test.</p>
<p>It turns out that many of the techniques which can be used to make code more testable are the exact same techniques which make code better designed, understandable, flexible and maintainable.</p>
<p>Be honest, when you’re cutting code, how often do you consider things like Low Coupling, High Cohesion, and adhering to the Single Responsibility Principle? Probably not often, I’ll bet. I know I didn’t. But since I started asking myself “How can I make this code testable?” I’ve been delighted to realise that my code magically acquired these properties as a pleasant side effect. Similarly, using techniques like Dependency Injection and Inversion of Control along with Mocking Frameworks for the purposes of testability also serves to make the solution more open to change, and reduces dependencies during the development process (no longer do you hear “Gee boss, I’d love to get started writing the Foo class, but it depends on the Bar class, and Dave hasn’t finished writing that, what with the accident with the bus and all…”).</p>
<p><strong>5. I can refactor mercilessly and fearlessly.</strong></p>
<blockquote>
<p>“Nel-son!!”</p></blockquote>
<p>I like refactoring. No, wait, scrub that – I <em>love</em> refactoring. Some people get their kicks from gardening, well, I could spend many happy hours weeding a big tangled codebase. Now, in the past, this has gotten me into trouble, when the “improvements” I’ve rashly made have inadvertently caused bugs (sorry John, Sion, Scott and Colin!). Since adopting TDD however, I’ve been confident that my code is sufficiently covered by unit tests that I may refactor mercilessly, safe in the knowledge that the test suite will highlight any unintended side effects. This results in a winning combination of clean code and co-workers who don’t have an urge to throttle me.</p>
<p><strong>6. I Release Fewer Stupid Mistakes.</strong></p>
<blockquote>
<p>“Ah, yeah, silly me, I just copied-and-pasted a line in the DAL, and now all your customers are displaying as having the same forename and surname! Smith Smith, Brown Brown, ha ha!”</p></blockquote>
<p>Perversely, some coders seem to wear their really dumb mistakes as a “badge of honour”, proof of their fallibility, a sign that they are human. It’s as if they are suggesting to their boss/client not to worry, that they <em>only</em> make dumb mistakes on the easy code, but concentrate much harder when coding the tough algorithms. Honest, guv’.</p>
<p>I don’t buy this crap. Stupid mistakes are stupid mistakes, period. I think that dumb mistakes, uncaught at an early stage, waste the time of the test team, result in rework, and ultimately waste the client’s money. That’s nothing to laugh about. Covering even the simple, easy code with unit tests reduces the likelihood of these knucklehead bugs getting through, increasing my likelihood of a “right-first-time” reputation. And <em>that’s</em> something to be proud of.</p>
<p><strong>7. Bugs don’t come back.</strong></p>
<blockquote>
<p>“But I’m <em>sure</em> we fixed that bug months ago!”</p></blockquote>
<p>Before I fix a bug, I write a failing test. That test then becomes a permanent fixture in the test suite, and therefore I can be confident that no “undead bug” will ever come back to haunt me. It’s a very simple concept, but it works. Bug reactivations imply loose development practices, and that’s not an implication I want to be made about my work. Kill the bug once, and keep it dead.</p>
<p><strong>8. It’s the fastest way to test my changes.</strong></p>
<p>Testing my changes through artificial unit tests is invariably quicker than testing the functionality by calling it through “real life” use of the overall system.</p>
<p>Suppose that I’m working on amended postage charge logic for an online retailer – I could test this by either:</p>
<p>a) Repeatedly manually walking through the application, adding a product to my basket, attempting to “check out”, and calculating whether the displayed postage charge is as I expect, or</p>
<p>b) Writing a unit test once to automate the testing of the new logic.</p>
<p>Gee, let me think about that for a while…</p>
<p><strong>9. I spend more time coding, less time in the debugger.</strong></p>
<p>Stop me if this conversation sound<br>
s at all familiar:</p>
<blockquote>
<p>“How was your day today, darling?”</p>
<p>“Ugh, don’t ask. I spent, like, <em>seven hours</em> trying to track down a bug. I pulled out Reflector, and even started debugging into the .NET framework class library – I was convinced for a while there it was a problem in System.String. But it turned out I just had some Boolean logic the wrong way round.”</p>
<p>“That’s nice, dear. More mange tout?”</p></blockquote>
<p>Visual Studio has excellent debugging tools, but still, I’d rather be spending my time cutting new code, thanks all the same. I’m sure the clients who pay my invoices feel much the same. Catching the bugs early, through effective unit testing, means that I spend far less time in the debugger.</p>
<p><strong>10. Writing documentation and sample code is boring.</strong></p>
<p>Visiting the dentist. Cleaning the bathroom. Writing documentation. All things which I’d rather put off until tomorrow, thank you very much.</p>
<p>If, on any given day, I have the choice between firing up Word and documenting my class library, or firing up Visual Studio and adding shiny new functionality to the same library, well, it’s no contest.</p>
<p>But here’s the neat thing – having taken the time to create a comprehensive suite of unit tests for my own, selfish purposes, it turns out that potential consumers of my library can benefit from them as a de facto set of usage examples and documentation. Yay!</p>
<p><strong>11. I can hand the code over to other people.</strong></p>
<blockquote>
<p>“Dave’s the only person who understands that code.”</p></blockquote>
<p>Oh really? What happens when Dave is on holiday? Or quits to get a better-paid job? Or gets hit by a bus? That’s a bit of a risk for your project, surely.</p>
<p>Maybe you’re a Dave, and your unique knowledge of a particular system means that you only ever get to work on that one application. Shiny new projects come along, and get handed to your colleagues, because you’re too busy supporting the Legacy App From Hell, until you quit to get that better paid job, or walk in front of a bus in desperation.</p>
<p>If, on the other hand, you’ve covered the code in unit tests, then you have effectively documented the codebase, provided example usages, and made it near-impossible for any future developers to break existing functionality due to their ignorance of the system. They can try making a change, run the unit tests, and instantly find out whether their change works. This helps to make possible <a href="http://www.extremeprogramming.org/rules/collective.html">Collective Code Ownership</a>, a variety of work for all members of the team, and no risky dependencies on Dave and his jaywalking habits.</p>
<p><strong>12. I’m A Professional</strong></p>
<p>I’ll return to what I said in the opening sentence of this article – this is <em>professional</em> software development. This isn’t just my hobby, or my day job. It’s my career, my business, my passion and the livelihood of myself and my family. I strive to improve and hopefully excel at it. All the research and my own experience suggests that practicing TDD results in fewer defects, saves time in the medium and long term, and is generally the approach to be expected of a professional. If you’re looking for a quick-fix from a cowboy contractor, go elsewhere and save yourself some money… in the short term 🙂</p>
]]></content:encoded>
    </item>
    <item>
      <title>A Keyboard Makes A Hell Of A Difference</title>
      <link>https://blog.iannelson.uk/a-keyboard-makes-a-hell-of-a-difference/</link>
      <pubDate>Fri, 01 Aug 2008 16:08:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/a-keyboard-makes-a-hell-of-a-difference/</guid>
      <description>&lt;p&gt;It occurred to me recently that I’m not getting any younger, and that sitting hunched over a keyboard for a dozen hours a day will probably lead to some form of RSI sooner or later. So I started looking for ways to improve my daily working environment.&lt;/p&gt;
&lt;p&gt;Unlike &lt;a href=&#34;http://www.johnsadventures.com/archives/2008/05/a-chair-makes-a-hell-of-a-difference.html&#34;&gt;John&lt;/a&gt;, I can’t afford a Herman Miller chair, and even if I could, I’m a freelancer rather than a telecommuter* so I would have to regularly carry the chair on the train to client sites, where they would probably ostracise me for being a weirdo who brings his own chair to the office. So I looked for something a little more portable, and decided that perhaps it was finally time for me to try one of those fancy split ergonomic keyboards that I’ve always scoffed at. After reading a few review on Amazon, I plumped for the &lt;a href=&#34;http://amzn.to/RPdDlW&#34;&gt;Microsoft Natural Ergonomic Keyboard 4000&lt;/a&gt;.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>It occurred to me recently that I’m not getting any younger, and that sitting hunched over a keyboard for a dozen hours a day will probably lead to some form of RSI sooner or later. So I started looking for ways to improve my daily working environment.</p>
<p>Unlike <a href="http://www.johnsadventures.com/archives/2008/05/a-chair-makes-a-hell-of-a-difference.html">John</a>, I can’t afford a Herman Miller chair, and even if I could, I’m a freelancer rather than a telecommuter* so I would have to regularly carry the chair on the train to client sites, where they would probably ostracise me for being a weirdo who brings his own chair to the office. So I looked for something a little more portable, and decided that perhaps it was finally time for me to try one of those fancy split ergonomic keyboards that I’ve always scoffed at. After reading a few review on Amazon, I plumped for the <a href="http://amzn.to/RPdDlW">Microsoft Natural Ergonomic Keyboard 4000</a>.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>I should probably mention at this point that I’ve never been formally taught to type, and I don’t touch-type in the traditional way, with fingers sticking loyally around the ASDF JKL: keys. I’ve been more of an autodidact, typing quickly but inefficiently, a few finger dancing crazily around the keys whilst the others (notably my pinkies) float lazily in the air, dreaming of the time they were once called upon to pull a wishbone or contribute to a clenched fist.</p>
<p>This means that initially, I found adjusting to the layout of the ergonomic keyboard quite tough – I was slowed down, and had to relearn the relative positions of the keys. For a week or so, I only used the new keyboard at home, as it would have been too slow and frustrating for workaday use. But gradually I grew accustomed to it, and found that I appreciated being able to rest my palms on the wrist-rest, with fingers dropping down towards the keys courtesy of the reverse slope.</p>
<p>So, I took a further plunge, and bought a second keyboard to take to the office. A few months more have passed, and now I can’t imagine using anything else on a daily basis. It really is more comfortable, and my shoulders and arms feel considerably more relaxed. I’m also back up to the kind of wpm that achieved on a standard keyboard.</p>
<p>Other than the ergonomic design, the 4000 series boasts a few other features, some of which may appeal, depending on the kind of applications you frequently use:</p>
<p>Notably, all the function keys have been relabelled with additional functionality such as Undo, Redo, New, Open, Close, Spell, Save and Print. Depending on your mentality you will either find this incredibly useful or incredibly annoying (if you’re in the latter camp then you’ll be pleased to know that ordinary service can be resumed thanks to an “F Lock” key.</p>
<p>I am fond of the button which launches Calculator (one of my most often-launched applications), as well as the buttons to control volume and pause media player (which works fine with iTunes 7).</p>
<p>I also appreciate the additional four buttons above the numeric keypad – putting an extra equals, parentheses and backspace where you’ll find them most useful when working with a spreadsheet or similar</p>
<p>There are also buttons to launch a web browser, email application, navigate to a search engine, open favourites, navigate back and forth, a zoom control, and five customisable buttons – but to be honest I haven’t made use of any of these. YMMV.</p>
<p>So, in summary – having got past those difficult early “getting to know you” dates, I now foresee a long and happy relationship with the 4000 series. And I’m sure my shoulders will be happy to hear that.</p>
<ul>
<li>does anybody say “telecommuter” these days?  It sounds very 1996…</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Database Design – Still Important In These ORM-Obsessed Days</title>
      <link>https://blog.iannelson.uk/database-design-still-important-in-these-orm-obsessed-days/</link>
      <pubDate>Tue, 29 Jul 2008 16:07:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/database-design-still-important-in-these-orm-obsessed-days/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.tobinharris.com/2008/7/28/is-or-m-is-encouraging-db-normalization&#34;&gt;Tobin blogged earlier this week&lt;/a&gt; about how quality ORM tools like NHibernate make it easier to code to normalized schemas.&lt;/p&gt;
&lt;p&gt;Here’s a corollary for you: The use of ORM tools doesn’t absolve the need to maintain good database design principles, and even NHibernate won’t save you from your own stupidity.&lt;/p&gt;
&lt;p&gt;Following an application upgrade release last night, I’ve spent a disproportionate amount of today trying to debug the following exception, which appeared to originate in an area of the codebase which I personally had heavily modified:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><a href="http://www.tobinharris.com/2008/7/28/is-or-m-is-encouraging-db-normalization">Tobin blogged earlier this week</a> about how quality ORM tools like NHibernate make it easier to code to normalized schemas.</p>
<p>Here’s a corollary for you: The use of ORM tools doesn’t absolve the need to maintain good database design principles, and even NHibernate won’t save you from your own stupidity.</p>
<p>Following an application upgrade release last night, I’ve spent a disproportionate amount of today trying to debug the following exception, which appeared to originate in an area of the codebase which I personally had heavily modified:</p>
<p>_NHibernate.HibernateException: More than one row with the given identifier was found: 42806, for class: Cmec.Core.Domain.Customer<br>
at NHibernate.Loader.Entity.AbstractEntityLoader.Load(ISessionImplementor session, Object id, Object optionalObject, Object optionalId)<br>
at NHibernate.Loader.Entity.AbstractEntityLoader.Load(Object id, Object optionalObject, ISessionImplementor session)<br>
at NHibernate.Persister.Entity.AbstractEntityPersister.Load(Object id, Object optionalObject, LockMode lockMode, ISessionImplementor session)<br>
at NHibernate.Impl.SessionImpl.DoLoad(Type theClass, Object id, Object optionalObject, LockMode lockMode, Boolean checkDeleted)<br>
at NHibernate.Impl.SessionImpl.DoLoadByClass(Type clazz, Object id, Boolean checkDeleted, Boolean allowProxyCreation)<br>
at NHibernate.Impl.SessionImpl.InternalLoad(Type clazz, Object id, Boolean eager, Boolean isNullable)<br>
at NHibernate.Type.EntityType.ResolveIdentifier(Object id, ISessionImplementor session, Object owner)<br>
at NHibernate.Impl.SessionImpl.InitializeEntity(Object obj)<br>
at NHibernate.Loader.Loader.InitializeEntitiesAndCollections(IList hydratedObjects, Object resultSetId, ISessionImplementor session)<br>
at NHibernate.Loader.Loader.DoQuery(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies)<br>
at NHibernate.Loader.Loader.DoQueryAndInitializeNonLazyCollections(ISessionImplementor session, QueryParameters queryParameters, Boolean returnProxies)<br>
at NHibernate.Loader.Loader.DoList(ISessionImplementor session, QueryParameters queryParameters)<br>
at NHibernate.Loader.Loader.List(ISessionImplementor session, QueryParameters queryParameters, ISet querySpaces, IType[] resultTypes)<br>
at NHibernate.Hql.Classic.QueryTranslator.List(ISessionImplementor session, QueryParameters queryParameters)<br>
at NHibernate.Impl.SessionImpl.Find(String query, QueryParameters parameters, IList results)<br>
at NHibernate.Impl.SessionImpl.Find[T](String query, QueryParameters parameters)<br>
at NHibernate.Impl.QueryImpl.List[T]()<br>
at Ventura.NHibernate.Data.DaoBase`2.GetByHql(String hql, String[] <em>params)<br>
at Cmec.Data.CorrespondenceRequestDao.GetCorrespondenceExtractRequests()<br>
at Cmec.Core.Tasks.CorrespondenceExtractCreationTask.TaskProcess()<br>
at Cmec.Core.Tasks.BaseTask.PerformTask()<br>
at CmecService.CmecService._timer_Tick(Object state)</em></p>
<p>Got that?  NHibernate is telling me that it has found two customers on the database with the same surrogate primary key, which is obviously not the case.</p>
<p>Trusting NHibernate as I do, and not generally being the kind of coder who assumes that the technology is to blame, I then spent literally hours digging through my amended code, trying to figure out what nonsense I could be trying to pull that was confusing NHibernate so, but found nothing.</p>
<p>Too late in the day, I dusted down Occam’s trusty razor, and realised that whilst the main Customers table was correctly enforcing primary keys, I hadn’t checked the various child tables. Lo and behold, less than a minute later I found the following reference data in an innocuous looking table of referrers:<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>Removing the duplicated entry for “Other”, which was incorrectly using the same ID as “Website”, solved my problems instantly. And needless to say, I’ve made a note to go add a primary key to that table at the earliest opportunity.</p>
<p>The moral of this cautionary tale – using an ORM makes your life as an application developer easier, makes it faster to develop a DAL, and (to a large extent) decouples your application from your choice of database. What it doesn’t do is allow you to forget the tenets of good database design, in fact as Tobin points out it actually serves to encourage them.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Remember The Milk</title>
      <link>https://blog.iannelson.uk/remember-the-milk/</link>
      <pubDate>Thu, 26 Jun 2008 06:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/remember-the-milk/</guid>
      <description>&lt;p&gt;In response to &lt;a href=&#34;http://blog.rememberthemilk.com/2008/05/guest-post-advanced-gtd-with-remember.html&#34;&gt;a blog post&lt;/a&gt; that I’d shared in Google Reader, &lt;a href=&#34;http://jpg1723.blogspot.com/&#34;&gt;Jez&lt;/a&gt; emailed me to ask:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;“Do you use &lt;a href=&#34;http://www.rememberthemilk.com&#34;&gt;RTM&lt;/a&gt;? It’s always been one of those web apps that seem really useful, but I’ve never made the leap to actually using it in anger. I suppose you need to adopt it in tandem with the five-point &lt;a href=&#34;http://en.wikipedia.org/wiki/Getting_Things_Done&#34;&gt;GTD&lt;/a&gt; philosophy to get real benefit?”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;My response:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;“Yes, I do use RTM, and I love it. I’ve been looking for a decent way of managing my to-do lists effectively for years, and RTM really scratches that itch! I now have the web app permanently open in a Firefox tab, and use “MilkSync” to synchronize with my Pocket PC every half hour.&lt;/em&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>In response to <a href="http://blog.rememberthemilk.com/2008/05/guest-post-advanced-gtd-with-remember.html">a blog post</a> that I’d shared in Google Reader, <a href="http://jpg1723.blogspot.com/">Jez</a> emailed me to ask:</p>
<hr>
<p><em>“Do you use <a href="http://www.rememberthemilk.com">RTM</a>? It’s always been one of those web apps that seem really useful, but I’ve never made the leap to actually using it in anger. I suppose you need to adopt it in tandem with the five-point <a href="http://en.wikipedia.org/wiki/Getting_Things_Done">GTD</a> philosophy to get real benefit?”</em></p>
<hr>
<p>My response:</p>
<hr>
<p><em>“Yes, I do use RTM, and I love it. I’ve been looking for a decent way of managing my to-do lists effectively for years, and RTM really scratches that itch! I now have the web app permanently open in a Firefox tab, and use “MilkSync” to synchronize with my Pocket PC every half hour.</em></p>
<p><em>I’m not sure that you need to adopt a particular task-management philosophy in order to get benefit – RTM is flexible enough to allow you to work the way you want to. I started off pretty basic, with just three lists, one each for personal, business, and current client tasks. But recently (having read <a href="http://blog.rememberthemilk.com/2008/05/guest-post-advanced-gtd-with-remember.html">that article</a> and re-read the relevant bits of GTD), I have begun using tags and locations and using these to get the benefit of some smart lists. So, I’m currently on the train to work, and I can look at my “@Train” list and see at a glance the stuff tagged with “na” (for “next actions”) and a location of @Train – i.e the stuff that I can and should be doing from here!</em></p>
<p><em>The RTM website is clean, slick, and easy to use (especially if you make the effort to memorise the keyboard shortcuts), which means there is little friction involved in maintaining your tasks during the day, which of course is vital to making any system work.<br>
One of the other sites that I’m logged into all day long is Gmail, and there’s a really good Firefox extension (3.0-compatible) which integrates RTM into Gmail brilliantly – RTM can even automatically create a task when you star a mail.</em></p>
<p><em>What else?  Did I mention the API, Blackberry support, Offline access (via Google Gears), iGoogle widget, Google Calendar integration, Atom feeds, Twitter integration, Google Maps integration…..?  The list goes on – if you can think of a neat feature that you’d like to have in a web app circa 2008, chances are that RTM has it.</em></p>
<p><em>Give it a go, but don’t blame me if you become dependent upon it!”</em></p>
<hr>
<p>For the record, I have no connections with Remember The Milk other than being a very happy user of their product. And thanks to Colin for originally bringing RTM to my attention.</p>
]]></content:encoded>
    </item>
    <item>
      <title>On the Joys of Object-Relational Mapping</title>
      <link>https://blog.iannelson.uk/on-the-joys-of-object-relational-mapping/</link>
      <pubDate>Wed, 09 Apr 2008 19:04:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/on-the-joys-of-object-relational-mapping/</guid>
      <description>&lt;p&gt;My name is Ian Nelson. I’m a recovering &lt;!-- raw HTML omitted --&gt;SQL&lt;!-- raw HTML omitted --&gt; addict. It’s been four weeks since my last stored procedure.&lt;/p&gt;
&lt;p&gt;One of my reasons for &lt;a href=&#34;https://blog.iannelson.uk/going-for-it/&#34;&gt;leaving my cosy permanent job and entering the scary cut-throat world of freelancing&lt;/a&gt; was to get a broader exposure to different tools, technologies and methodologies, while remaining with my feet planted firmly in the .NET universe. So, when I got offered a position in a team who were using &lt;a href=&#34;http://subversion.tigris.org/&#34;&gt;Subversion&lt;/a&gt;, &lt;a href=&#34;http://www.castleproject.org/MonoRail/&#34;&gt;Monorail&lt;/a&gt;, &lt;a href=&#34;http://extjs.com/&#34;&gt;Ext.JS&lt;/a&gt;, &lt;a href=&#34;http://www.nunit.org&#34;&gt;NUnit&lt;/a&gt;, &lt;a href=&#34;http://www.oracle.com/database/index.html&#34;&gt;Oracle&lt;/a&gt; and &lt;a href=&#34;http://www.nhibernate.org&#34;&gt;NHibernate&lt;/a&gt;, I jumped at the opportunity.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>My name is Ian Nelson. I’m a recovering <!-- raw HTML omitted -->SQL<!-- raw HTML omitted --> addict. It’s been four weeks since my last stored procedure.</p>
<p>One of my reasons for <a href="https://blog.iannelson.uk/going-for-it/">leaving my cosy permanent job and entering the scary cut-throat world of freelancing</a> was to get a broader exposure to different tools, technologies and methodologies, while remaining with my feet planted firmly in the .NET universe. So, when I got offered a position in a team who were using <a href="http://subversion.tigris.org/">Subversion</a>, <a href="http://www.castleproject.org/MonoRail/">Monorail</a>, <a href="http://extjs.com/">Ext.JS</a>, <a href="http://www.nunit.org">NUnit</a>, <a href="http://www.oracle.com/database/index.html">Oracle</a> and <a href="http://www.nhibernate.org">NHibernate</a>, I jumped at the opportunity.</p>
<p>Of those technologies, it’s definitely NHibernate which has most dramatically changed my perspective on how enterprise solutions can (and should) be developed. For many years now, I’ve considered deep database (particularly SQL Server) skills to be one of my core proficiencies, and have merrily spent (wasted?) countless man hours writing dreary &ldquo;plumbing&rdquo; code, by the way of <!-- raw HTML omitted -->CRUD<!-- raw HTML omitted --> stored procedures and repetitive Data Access Layers in order to persist my <!-- raw HTML omitted -->CLR<!-- raw HTML omitted --> entities to the <!-- raw HTML omitted -->RDBMS<!-- raw HTML omitted -->.</p>
<p>Well, no longer, those days are over. I’ve seen the light and embraced the wonders of NHibernate. For those who are unfamiliar with it, NHibernate is an <a href="http://en.wikipedia.org/wiki/Object-relational_mapping">Object-Relational Mapper</a>, and is a port of a Java utility, Hibernate. The premise is beautifully simple – by decorating your objects with attributes or, more neatly, by creating <!-- raw HTML omitted -->XML<!-- raw HTML omitted --> mapping files, you define the mappings between your .NET domain objects and their persisted representation on the database. Then NHibernate handles all the grunt work of saving your objects to and from the database.</p>
<p>Digging deeper, I discovered that NHibernate has been developed in such a way as to make it easy to embrace best practices in database access techniques. Several years ago I read through <a href="http://www.martinfowler.com">Fowler’s</a> seminal <em><a href="http://www.amazon.co.uk/gp/product/0321127420?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0321127420">Patterns of Enterprise Application Architecture</a></em>, and wondered how I would ever find time to develop solutions which made use of the cunning O-R behavioural patterns he described – <a href="http://martinfowler.com/eaaCatalog/lazyLoad.html">Lazy Load</a>, <a href="http://martinfowler.com/eaaCatalog/unitOfWork.html">Unit of Work</a>, <a href="http://martinfowler.com/eaaCatalog/identityMap.html">Identity Map</a>, <a href="http://martinfowler.com/eaaCatalog/queryObject.html">Query Object</a>, <a href="http://martinfowler.com/eaaCatalog/repository.html">Repository</a>, etc. I utterly failed to pick up on this paragraph on page 171:</p>
<blockquote>
<p><em>&ldquo;Remember that you don’t have to build a full-featured database-mapping layer. It’s a complicated beast to build, and there are products available that do this for you.&rdquo;</em></p></blockquote>
<p>Products such as, yes, NHibernate. Or <a href="http://www.ormapper.net/">Wilson ORM</a>, or more recently, the <a href="http://msdn2.microsoft.com/en-us/library/bb425822.aspx">LINQ to SQL</a> offering introduced by Microsoft in the .NET 3.5 Framework.</p>
<p>I’m glad that I have a solid grounding in SQL, and I still believe that other skills related to RDBMSs are useful in the enterprise (i.e. database design, normalisation and index tuning), but I’m pleased that I can now bring myself to relax, stop worrying, and leave an ORM to take care of generating the repetitive CRUD statements required for persisting my domain objects.</p>
<p>So, what have I been doing with all this &ldquo;free time&rdquo; that I now have available to me during a hard day at the code face? Well, I’ve been trying to create systems which are more robust and well-designed by making a concerted effort to embrace Test-Driven Development (for real, this time!) But that’s a good topic for <a href="https://blog.iannelson.uk/12-reasons-why-i-love-unit-tests/">a future post</a>…</p>
<p>A few useful NHibernate / ORM Resources:</p>
<ul>
<li><a href="http://www.nhibernate.org">NHibernate</a></li>
<li><a href="http://www.ormapper.net">Wilson ORM</a></li>
<li><a href="http://msdn2.microsoft.com/en-us/library/bb425822.aspx">LINQ to SQL</a></li>
<li><a href="http://www.codeproject.com/KB/architecture/NHibernateBestPractices.aspx">NHibernate Best Practices with ASP.NET</a> – article by Billy McCafferty</li>
<li>My del.icio.us links tagged with <a href="http://del.icio.us/ianfnelson/nhibernate">NHibernate</a> / <a href="http://del.icio.us/ianfnelson/orm">ORM</a> / <a href="http://del.icio.us/ianfnelson/linq">LINQ</a></li>
<li><a href="http://www.dotnetrocks.com/default.aspx?showNum=240">Dot Net Rocks – the ORM Smackdown Show</a></li>
<li><a href="http://www.amazon.co.uk/gp/product/1932394923?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=6738&amp;creativeASIN=1932394923">NHibernate In Action</a></li>
<li><a href="http://www.amazon.co.uk/gp/product/1933988169?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=6738&amp;creativeASIN=1933988169">LINQ In Action</a></li>
<li><a href="http://www.ayende.com/">Ayende’s Blog</a></li>
<li><a href="http://blogs.hibernatingrhinos.com/nhibernate/Default.aspx">The NHibernate FAQ</a></li>
<li><a href="http://en.wikipedia.org/wiki/Object-relational_mapping">Wikipedia – Object-Relational Mapping</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Inside Microsoft SQL Server 2005: The Storage Engine</title>
      <link>https://blog.iannelson.uk/inside-microsoft-sql-server-2005-the-storage-engine/</link>
      <pubDate>Sat, 05 Jan 2008 21:01:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/inside-microsoft-sql-server-2005-the-storage-engine/</guid>
      <description>&lt;p&gt;During 2007, I unexpectedly achieved a long-held ambition by increasing the number of books I regularly read (as opposed to merely buying, then leaving them to languish on the bookcase!). I read plenty of techie books of course, but also made use of local libraries and devoured plenty of books on other subjects, and even found time for some fiction. I think having a young baby in the house was partially responsible for this achievement – not much else to do of an evening any more!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>During 2007, I unexpectedly achieved a long-held ambition by increasing the number of books I regularly read (as opposed to merely buying, then leaving them to languish on the bookcase!). I read plenty of techie books of course, but also made use of local libraries and devoured plenty of books on other subjects, and even found time for some fiction. I think having a young baby in the house was partially responsible for this achievement – not much else to do of an evening any more!</p>
<p>Some books were great and will remain on my shelves for years to come. Plenty others were quickly returned to the libraries, or resold on Amazon Marketplace. Either way, I figure that it might be a nice addition to the old blog if I take the time to say a few words about some of them, so let’s start with the book I’ve finished most recently.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p><em>Inside Microsoft SQL Server 2005: The Storage Engine</em> by Kalen Delaney is one in a series of four books from MS Press, the other three having subtitles of <em><a href="http://www.amazon.co.uk/gp/product/0735621977?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0735621977">T-SQL Programming</a>, <a href="http://www.amazon.co.uk/gp/product/0735623139?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0735623139">T-SQL Querying</a>,</em> and <em><a href="http://www.amazon.co.uk/gp/product/0735621969?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0735621969">Query Tuning and Optimization</a></em>. I suspect that <em>The Storage Engine</em> is the most deep and esoteric of the four volumes, offering an insight into the architecture and inner workings of SQL Server that isn’t matched even by my old favourite <em><a href="https://blog.iannelson.uk/sql-2005-unleashed/">SQL Server 2005 Unleashed</a>.</em></p>
<p>By no stretch of the imagination could this be considered an introduction to SQL Server, and frequently I found myself skipping forward a few pages at a time, reasoning to myself that “there is no reason why I will ever need to know this!” – indeed, plenty of the first half of the book on topics such as architecture, configuration, files, logging, and recovery, would be of more use to DBAs and sysadmins rather than developers such as myself – not that it isn’t nice to have an appreciation of these topics though.</p>
<p>From a developer perspective, it is the second half where this book really springs to life, with three great chapters on Tables, Indexes, and Locking &amp; Concurrency. These are 235 pages of pure gold, offering to the willing reader a really <em>deep</em> understanding of what is really going on under the hood, and how exactly MSSQL goes about implementing your requests. It certainly blew apart some of my incorrect assumptions about internal table structures, and has given me a better understanding of the internal structures of clustered and nonclustered indexes.</p>
<p>SQL Server is one of the most widely used products in Microsoft’s server range, and in my opinion also one of the most widely abused. Anyone who has worked in this industry for any length of time has inevitably witnessed some awful database designs (no primary keys? no foreign keys? no indexes? every column a varchar(50)? you know the kind of thing!), but we can all learn to improve our database designs, and the level of understanding offered by Kalen’s book should help in the quest for perfection.</p>
<p>As long as my career keeps its technical focus, and I’m using SQL Server 2005, then this one is a keeper, and I’ve already ordered Kalen’s other book in the series, <em><a href="http://www.amazon.co.uk/gp/product/0735621969?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0735621969">Query Tuning and Optimization</a></em>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>A LINQ Gotcha – First Operator</title>
      <link>https://blog.iannelson.uk/a-linq-gotcha-first-operator/</link>
      <pubDate>Fri, 14 Dec 2007 14:12:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/a-linq-gotcha-first-operator/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;</description>
      <content:encoded><![CDATA[<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
]]></content:encoded>
    </item>
    <item>
      <title>Software Architect 2007</title>
      <link>https://blog.iannelson.uk/software-architect-2007/</link>
      <pubDate>Sun, 17 Jun 2007 18:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/software-architect-2007/</guid>
      <description>&lt;p&gt;Last week I had the pleasure of spending a few days in London attending the &lt;a href=&#34;http://www.software-architect.co.uk&#34;&gt;Software Architect 2007&lt;/a&gt; conference at the Barbican centre. It was a good conference, providing me with some useful and interesting new ideas and food for thought, whilst confirming that our team at &lt;a href=&#34;http://www.marshalls.co.uk&#34;&gt;Marshalls&lt;/a&gt; are generally going about things in “the right way”, which is nice.&lt;/p&gt;
&lt;p&gt;Looking through my notes, the main themes that kept recurring within the different presentations that I attended were:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Last week I had the pleasure of spending a few days in London attending the <a href="http://www.software-architect.co.uk">Software Architect 2007</a> conference at the Barbican centre. It was a good conference, providing me with some useful and interesting new ideas and food for thought, whilst confirming that our team at <a href="http://www.marshalls.co.uk">Marshalls</a> are generally going about things in “the right way”, which is nice.</p>
<p>Looking through my notes, the main themes that kept recurring within the different presentations that I attended were:</p>
<ul>
<li>Avoid coupling at all costs. Use interfaces, contracts and facades to decouple components. Avoid directly referencing vendor’s class libraries or infrastructure libraries.</li>
<li>Appreciate the impact of small decisions which can eventually have a big impact on the overall architecture.</li>
<li>Devote more time and consideration to designing interfaces, contracts and public APIs (which are difficulty to change retrospectively), than private implementations which are relatively simple to change.<!-- raw HTML omitted --></li>
</ul>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>These issues kept coming up again and again – most notably in talks by Kevlin Henney on “The Selfish Object” and Ralf Westphal on “True Component Orientation”, but also to an extent in some of Dave Wheeler’s demonstration of how to use some of the Gang of Four design patterns in .NET. So, it amazed me that a number of my fellow delegates kept raising their hands and asking questions which invariably began “Yeah, but why can’t I just…”, followed by suggestions which effectively seemed to boil down to creating hardcoded, inflexible solutions! To say that this was supposedly a conference of architects, even relatively simple concepts such as Reflection, Polymorphism and Generics seemed to be lost on some people, who apparently would be more comfortable maintaining massive switch statements for the rest of eternity!</p>
<p>This is one of the issues I have with the XP rules – I don’t believe that <a href="http://www.extremeprogramming.org/rules/simple.html">doing the simplest thing that could possibly work</a> is a good idea, at least not when creating public APIs and interfaces. Some forethought is necessary in order to architect loosely coupled solutions that will allow continued flexibility and agility when faced with inevitable change requests. I’m not arguing for the <a href="http://www.extremeprogramming.org/rules/early.html">premature development of functionality that may never be required</a>, but interfaces, APIs, inheritance models and database models are a right royal pain to change at a later date and in my experience, upfront design in these areas pays dividends.</p>
<p>Oh, my other issue with the XP rules is the notion of <a href="http://www.extremeprogramming.org/rules/collective.html">collective code ownership</a> – I’m not precious about my code (honest), but there are inevitably areas of specialism (in terms of technology and business knowledge) in which I seek to focus my energies, and other areas that I don’t care for, or wish to maintain. We can’t all understand everything about every system, and it’s foolish to pretend that this is the case. Allowing or requiring an entire team to be comfortable maintaining the whole codebase is likely to prohibit anybody learning very much about anything, and even with rigorously enforced coding standards and comprehensive unit tests can lead to an unfortunate swiss cheese / patchwork quilt effect. All IMHO, of course.</p>
<p>My favourite session of the conference was by <a href="http://www.ralfw.de">Ralf Westphal</a>, who clearly and concisely (his English is better than that of many native speakers!) explained the benefits of using Contract First Development and a microkernel approach to remove component dependencies and development bottlenecks. It’s an approach that I can’t wait to try.</p>
<p>One of the other things that pleased me about the conference was the realisation that we at Marshalls are (especially for such a stable, old-economy company), way ahead of the pack in terms of technology – whilst other delegates I spoke with are still using earlier versions of .NET, or even still on VB6 / Win32 API, we continue to make appropriate use of the latest offerings from Redmond.</p>
<p>A few other observations from my days in London:</p>
<ul>
<li>Trying to change from the Circle to Piccadilly lines at King’s Cross at rush hour involves crossing a packed concourse buzzing with hardened commuters that brought to mind that Zurich insurance TV advert which shows futuristic cars on traffic signal-free intersections narrowly avoiding collisions thanks to automated guidance systems!</li>
<li>Unlike at MSDN events (where all speakers use vanilla installations of Vista/XP and search Windows Live using IE7), there’s a great variety of hardware and software in popular use now – I witnessed presentations on Dell, Sony Vaio, and MacBook (running both OS X and Vista, through BootCamp), with some highly-configured operating systems, and every presenter used Safari or Firefox – no IE in sight. Didn’t see any Ubuntu, mind.</li>
<li>Section 20 of the <a href="http://www.opsi.gov.uk/ACTS/acts1997/97022--f.htm#20">Architect’s Act 1997</a> prohibits the use of the “Software Architect” job title. Curiously, “Golf Course Architect” is fine.</li>
<li>In all respects, central London is about as far removed from the Isle of Mull (where I was a week previously) as it’s possible to imagine. Increasingly so, it really does come across as a kind of city state, a world city, with a cosmopolitan feeling quite unlike anywhere else in the UK.</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>A C# Postcode Struct with Parser</title>
      <link>https://blog.iannelson.uk/a-c-postcode-struct-with-parser/</link>
      <pubDate>Tue, 29 May 2007 12:05:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/a-c-postcode-struct-with-parser/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;As &lt;a href=&#34;https://blog.iannelson.uk/postcode-validation/&#34;&gt;discussed recently&lt;/a&gt;, I’ve been trying to knock together a class struct to represent a UK postcode, provide a means of parsing a string as &lt;em&gt;potentially&lt;/em&gt; being a valid postcode (or optionally just an outer code), and split that postcode into “outer” and “inner” code.&lt;/p&gt;
&lt;p&gt;I say &lt;em&gt;potentially&lt;/em&gt; because, as you’ll know if you’ve looked into this topic at all, it’s impossible to validate whether a string truly does represent a postcode without querying the (copyrighted and expensive-to-license) Postcode Address File.  As a result, my solution is not very stringent – it is possible to persuade it to successfully parse an invalid postcode, but hopefully there should be no occasions when a valid postcode is rejected.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<!-- raw HTML omitted -->
<p>As <a href="https://blog.iannelson.uk/postcode-validation/">discussed recently</a>, I’ve been trying to knock together a class struct to represent a UK postcode, provide a means of parsing a string as <em>potentially</em> being a valid postcode (or optionally just an outer code), and split that postcode into “outer” and “inner” code.</p>
<p>I say <em>potentially</em> because, as you’ll know if you’ve looked into this topic at all, it’s impossible to validate whether a string truly does represent a postcode without querying the (copyrighted and expensive-to-license) Postcode Address File.  As a result, my solution is not very stringent – it is possible to persuade it to successfully parse an invalid postcode, but hopefully there should be no occasions when a valid postcode is rejected.</p>
<p>The code validates strings by checking for compliance with the standards defined in <a href="http://www.govtalk.gov.uk/gdsc/html/frames/PostCode.htm">BS7666</a>, followed by checking for BFPO postcodes, and finally for a handful of notable exceptions (e.g. Girobank).  If you know of any valid postcodes that are rejected by this routine, do let me know.</p>
<p>Oh, and incidentally, this was the first time I’ve used Visual Studio Orcas in anger to develop anything meatier than a Hello World.  Although I wasn’t exactly pushing the technological envelope, I found the IDE to be pretty fast and stable, considering it’s a beta 1.</p>
<p>Source available on GitHub at <a href="https://github.com/ianfnelson/Postcode">https://github.com/ianfnelson/Postcode</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>Postcode Validation</title>
      <link>https://blog.iannelson.uk/postcode-validation/</link>
      <pubDate>Wed, 23 May 2007 13:05:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/postcode-validation/</guid>
      <description>&lt;p&gt;Wikipedia cracks me up sometimes. I’m sat here at my desk, trying to knock together some C# code to quickly validate an entered string as being a UK postcode. Naturally I turned to this &lt;a href=&#34;http://en.wikipedia.org/wiki/UK_postcodes&#34;&gt;Wikipedia article&lt;/a&gt; for assistance, where I find this quip:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Automatic validation of postcodes on the basis of pattern feasibility is therefore almost impossible to design, and the system contains no self-validating feature such as a check digit. &lt;strong&gt;Completely accurate validation is only possible by attempting to deliver mail to the address, and verifying with the recipient.&lt;/strong&gt;&amp;rdquo;&lt;/em&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Wikipedia cracks me up sometimes. I’m sat here at my desk, trying to knock together some C# code to quickly validate an entered string as being a UK postcode. Naturally I turned to this <a href="http://en.wikipedia.org/wiki/UK_postcodes">Wikipedia article</a> for assistance, where I find this quip:</p>
<blockquote>
<p><em>&ldquo;Automatic validation of postcodes on the basis of pattern feasibility is therefore almost impossible to design, and the system contains no self-validating feature such as a check digit. <strong>Completely accurate validation is only possible by attempting to deliver mail to the address, and verifying with the recipient.</strong>&rdquo;</em></p></blockquote>
<p>I think that’s what is known as a <a href="http://en.wikipedia.org/wiki/Long_running_transaction">long-running transaction</a>!!</p>
<p><strong>Update</strong> – the C# code that I wrote to handle this issue is available <a href="https://blog.iannelson.uk/a-c-postcode-struct-with-parser/">here</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>SQL 2005 Unleashed</title>
      <link>https://blog.iannelson.uk/sql-2005-unleashed/</link>
      <pubDate>Fri, 18 May 2007 06:05:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/sql-2005-unleashed/</guid>
      <description>&lt;p&gt;Many moons (and about four jobs) ago, a wise DBA by the name of David Hanson once recommended to me a book called &lt;a href=&#34;http://www.amazon.co.uk/gp/product/0672324679?ie=UTF8&amp;amp;tag=ianesbl-21&amp;amp;linkCode=as2&amp;amp;camp=1634&amp;amp;creative=6738&amp;amp;creativeASIN=0672324679&#34;&gt;Microsoft SQL Server 2000 Unleashed&lt;/a&gt;. I took his advice, bought a copy, and it rapidly became one of the most dog-eared and oft-thumbed computing books I have ever owned. It is comprehensive, deep, broad, well-written and covers everything one might ever wish to know about SQL Server 2000. With its help and guidance I came to love and respect Microsoft’s premier database product, passing the &lt;a href=&#34;http://www.microsoft.com/learning/exams/70-229.mspx&#34;&gt;70-229 exam&lt;/a&gt; by a comfortable margin.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Many moons (and about four jobs) ago, a wise DBA by the name of David Hanson once recommended to me a book called <a href="http://www.amazon.co.uk/gp/product/0672324679?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0672324679">Microsoft SQL Server 2000 Unleashed</a>. I took his advice, bought a copy, and it rapidly became one of the most dog-eared and oft-thumbed computing books I have ever owned. It is comprehensive, deep, broad, well-written and covers everything one might ever wish to know about SQL Server 2000. With its help and guidance I came to love and respect Microsoft’s premier database product, passing the <a href="http://www.microsoft.com/learning/exams/70-229.mspx">70-229 exam</a> by a comfortable margin.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p>So, following the release of SQL Server 2005, I was hoping that SAMS would publish a similar tome about that new platform. Once said book was announced, I pre-ordered<a href="https://blog.iannelson.uk/sql-2005-unleashed#preorder">*</a> a copy, and I’m delighted to report that after many months of patient waiting, the sequel (sorry) landed on my desk last week – and for a computing book, it’s simply awesome.</p>
<p><a href="http://www.amazon.co.uk/gp/product/0672328240?ie=UTF8&amp;tag=ianesbl-21&amp;linkCode=as2&amp;camp=1634&amp;creative=6738&amp;creativeASIN=0672328240">Microsoft SQL Server 2005 Unleashed</a> is even bigger than it’s predecessor. In fact, it’s so large that eight chapters have been left out of the physical book, and are included only in a PDF version supplied on CD-ROM. These aren’t just padding or filler, either – they’re solid chapters on interesting topics as Notification Services, Service Broker, Recovery Planning, and T-SQL Tips n Tricks. Including the bonus chapters, the whole package weighs in at over 2,000 pages – no wonder I had to wait a while for its publication!</p>
<p>I think you would be hard-pressed to find any other single SQL 2005 book which covers quite so much material to such depth. While perhaps not being suitable for beginners, for those with some experience of SQL Server or other relational database products, this book works on many levels – reference, tutorial, guidance, or just as an interesting read. If you work with, or anticipate working with, SQL 2005, then you owe it to yourself to get a copy now!</p>
<hr>
<ul>
<li>I hate this term, but that’s what Amazon call it – “pre-order”. Whilst I understand the implication, I don’t think there’s any real linguistic difference between “ordering” and “pre-ordering”. Even less so the distinction between to “book” and to “pre-book”, a service offered by some cinemas…</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>MSDN Technical Roadshow 2007</title>
      <link>https://blog.iannelson.uk/msdn-technical-roadshow-2007/</link>
      <pubDate>Mon, 12 Mar 2007 22:03:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/msdn-technical-roadshow-2007/</guid>
      <description>&lt;p&gt;I’m off to the &lt;a href=&#34;http://www.microsoft.com/uk/techroadshow2007/msdn/default.mspx&#34;&gt;MSDN Technical roadshow&lt;/a&gt; in Harrogate tomorrow, and am actually really looking forward to it this time. These events are free, so always well worth attending when they’re local, but some years are certainly better than others – it mostly depends on the material being covered. I remember one year circa 2003-4, when .NET was well established, but before the Whidbey release, so the majority of the day was effectively just a sales pitch covering elementary .NET concepts, presumably for those laggards who hadn’t yet made the great leap from VB6. Another data-binding demo, anybody?  Yawn.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I’m off to the <a href="http://www.microsoft.com/uk/techroadshow2007/msdn/default.mspx">MSDN Technical roadshow</a> in Harrogate tomorrow, and am actually really looking forward to it this time. These events are free, so always well worth attending when they’re local, but some years are certainly better than others – it mostly depends on the material being covered. I remember one year circa 2003-4, when .NET was well established, but before the Whidbey release, so the majority of the day was effectively just a sales pitch covering elementary .NET concepts, presumably for those laggards who hadn’t yet made the great leap from VB6. Another data-binding demo, anybody?  Yawn.</p>
<p>By contrast, this time round there’s no shortage of exciting potential topics, and as I’ve mentioned recently, I’ve been having difficulty making time to get stuck into learning some of the new technologies that are on the horizon. So the opportunity of a day out watching some powerpoint presentations, demos, and trying to soak up an understanding of this stuff really appeals to me – is that sad?!</p>
<p>The two sessions I’m most looking forward to are <a href="http://www.danielmoth.com/Blog/">Daniel Moth</a> covering LINQ and other forthcoming language enhancements in the Orcas release, and <a href="http://blogs.msdn.com/mikeormond/default.aspx">Mike Ormond</a>‘s session on AJAX development. Should be good.</p>
<p>Oh, entertainingly, someone found my blog this week by Googling for <a href="http://www.google.com/search?q=%22msdn&#43;event%22&#43;dress&#43;code&amp;">“msdn event” dress code</a> – my advice is to go casual; stick to the usual geek staples of t-shirt with jeans or combats and you can’t go far wrong!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Ian Nelson, MCSD.Net</title>
      <link>https://blog.iannelson.uk/ian-nelson-mcsd-net/</link>
      <pubDate>Sun, 11 Feb 2007 16:02:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/ian-nelson-mcsd-net/</guid>
      <description>&lt;p&gt;I am now a Microsoft Certified Solution Developer in .NET 1.x technologies. This is a qualification that I’ve been working towards on and (more often than not) off for the past four years or so. It’s not really the case that the exams were super-hard, just that it took occasional motivation to get round to taking them!&lt;/p&gt;
&lt;p&gt;So, was it worth it?  Did I learn anything en route?  Did the exams boost my employability?  Would I be more inclined to employ someone with an MCSD than an applicant without?&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I am now a Microsoft Certified Solution Developer in .NET 1.x technologies. This is a qualification that I’ve been working towards on and (more often than not) off for the past four years or so. It’s not really the case that the exams were super-hard, just that it took occasional motivation to get round to taking them!</p>
<p>So, was it worth it?  Did I learn anything en route?  Did the exams boost my employability?  Would I be more inclined to employ someone with an MCSD than an applicant without?</p>
<p>Stepping back in time a little, my first real conversation about .Net was in November 2000, at a job interview for a position with <a href="http://www.ioko.com">ioko</a>{.} (then Infocom), when <a href="http://www.farend.co.uk/">Matthew</a>{.} asked me something vague along the lines of “what did I understand regarding Microsoft’s .NET initiative?”  I honestly can’t remember my answer, but it can’t have utterly sucked as I got the job, and started the following month.</p>
<p>A year later, December 2001, and I attended the two-day .NET launch at the London Hilton, at which a certain Bill Gates gave a keynote speech explaining why .NET was the future. It was one of the few sessions at that conference which didn’t go over my head – the rest utterly blew my mind, and made me feel extremely ignorant – me with my VB6 and ASP3 skills!</p>
<p>Another year passed, and a quiet market meant that I still hadn’t had any opportunity to cut my teeth on any .NET projects. But crucially (and in retrospect foolishly), I also hadn’t put any personal effort into learning these important new technologies. So, on 3rd December 2002, I ordered some self-study books for exams 70-315 and 70-316. Apparently expecting to learn by osmosis, I then popped them on my bookshelf, and headed off to Australia to visit my friends Bruce and Suzanne.</p>
<p>When I got back from Down Under, in January 2003, my job at ioko was not waiting for me. That quiet market wasn’t getting any noisier, a cull had to occur, and, since I didn’t have any proven .Net skills…</p>
<p>Redundancy wasn’t a pleasant experience, and I wanted to get back into the world of work ASAP (after all, the mortgage wasn’t going to pay itself), so I quickly took up what I always expected to be a stop-gap VB6/ASP job – the pay wasn’t great but it beat daytime TV, spamming the employment agencies and constantly refreshing jobserve.com. It was at this point in time I realised that the only person with the capability to improve my skills and career prospects was myself. For too long I had equated career success to “luck” in being placed on the right projects. Now it was time for me to invest some time and energy learning those all-important .NET skills that I’d been reading about for the past few years.</p>
<p>For much of the long hot summer of 2003, I burnt the midnight oil developing a three-tier web application for the investment club of which I was the treasurer at that time. This served a number of purposes:  Of course, the website was useful to those who had access to it, but more importantly to me, it provided a way to develop the .NET skills that I saw as being the keys to a better job. Now, the obvious shortcoming of using a personal project as a way to learn a set of technologies is that you’re unlikely to stumble across those enterprise-y features in the Framework that are of particular use in business scenarios. So, I supplemented my late-night hacking sessions (which incidentally resulted in my neighbours complaining about my playing pop music at 2am) with some diligent studying of the 70-306 guide that I’d bought the previous winter. On 14th June 2003, after spending around £80 of my own cash to take the exam, I passed that test, becoming an MCP for the first time.</p>
<p>Was it worth it?  I think so. My efforts meant I got a good grounding in aspects of the technologies that I would not otherwise have stumbled across, and it gave me something concrete and .NET-related to put on my CV (effectively saying “yeah, I know I haven’t worked with these technologies professionally, but that doesn’t mean I don’t understand them”). A few months later, as the market started to gradually pick up again, I got the job I still have – as a .NET developer for Marshalls. I’ve no doubt that the MCP exam helped to at least get my foot in the door.</p>
<p>I took the remaining four exams at my leisure over the next few years. Whilst studying for the SQL Server (70-229), Web Services and Server Components (70-320) and Requirements and Architectures (70-300) exams, I always found myself learning several things that I hadn’t picked up on the job – in that sense at least, I think undertaking the exams was worthwhile. The final exam I took was the Windows App exam (70-316), and this was a bit of a stroll in all honesty, after the previous four exams and three year’s of .NET experience.</p>
<p>Would I be more inclined to employ someone with an MCSD than an applicant without?  I think the qualification helps greatly in identifying potential candidates, but there are many other factors that make a good developer that aren’t covered in any depth by these exams. Design Patterns and OOP concepts in general were not really tested, even on the 70-300 exam. Knowledge of IIS was not covered on 70-306 – I guess it’s assumed that this is the realm of the Systems Administrator rather than the coder, but in reality (especially in small teams), a good ASP.NET developer needs an intimate understanding of how their web server works and is configured. What about covering topics such as source control, automated builds, and release management?  Issues such as unit testing and the benefits of code reviews were mentioned in the 70-300 exam, but there’s a difference between knowing the theory and applying this in practice. An MCSD qualification certainly demonstrates the former, but a few searching questions at interview are still required to prove the latter.</p>
<p>So what’s next for me?  Upgrading to the “<a href="http://www.microsoft.com/learning/developer/eadev.mspx">MCPD: Enterprise Applications Developer</a>” qualification is the obvious path, and I’ll probably do so in due course, but right now I’d like to like to spend more time getting to grips with SQL Server 2005 by taking the relevant <a href="http://www.microsoft.com/learning/mcp/mcts/sql/default.mspx">MCTS exam (70-431)</a>. If that goes well, then maybe I’ll continue onto the <a href="http://www.microsoft.com/learning/mcp/mcitp/dbdev/default.mspx">MCITP: DB Dev</a> qualification. We’ll see.</p>
]]></content:encoded>
    </item>
    <item>
      <title>A Serializable KeyValuePair Class</title>
      <link>https://blog.iannelson.uk/a-serializable-keyvaluepair-class/</link>
      <pubDate>Sun, 17 Sep 2006 17:09:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/a-serializable-keyvaluepair-class/</guid>
      <description>&lt;p&gt;Having accepted that &lt;a href=&#34;http://www.hanselman.com/blog/ReturningDataSetsFromWebServicesIsTheSpawnOfSatanAndRepresentsAllThatIsTrulyEvilInTheWorld.aspx&#34;&gt;Returning DataSets from WebServices is the Spawn of Satan and Represents All That Is Truly Evil in the World&lt;/a&gt; (or at least, not exactly best practice), I’ve been trying to make a conscious effort to instead use lightweight custom objects in my middle tier, to be exposed via web services for use by other applications. I felt sure that some of the new Generic classes in the .NET 2.0 FCL would help me in my quest. Specifically, as I often need to expose simple arrays of Key/Value Pair metadata, I planned to create an instance of the  System.Collections.ObjectModel.Collection class, containing a bunch of System.Collections.Generic.KeyValuePair objects. &lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Having accepted that <a href="http://www.hanselman.com/blog/ReturningDataSetsFromWebServicesIsTheSpawnOfSatanAndRepresentsAllThatIsTrulyEvilInTheWorld.aspx">Returning DataSets from WebServices is the Spawn of Satan and Represents All That Is Truly Evil in the World</a> (or at least, not exactly best practice), I’ve been trying to make a conscious effort to instead use lightweight custom objects in my middle tier, to be exposed via web services for use by other applications. I felt sure that some of the new Generic classes in the .NET 2.0 FCL would help me in my quest. Specifically, as I often need to expose simple arrays of Key/Value Pair metadata, I planned to create an instance of the  System.Collections.ObjectModel.Collection class, containing a bunch of System.Collections.Generic.KeyValuePair objects. </p>
<p>Well, this all seemed to go to plan, and worked just fine within my app. But when I exposed the method as a web service, I discovered that neither the Key nor the Value properties were serialized – I was left to consume a lovely generic collection of objects with no members – not a whole lot of use.</p>
<p>A little Googling turned up <a href="http://blogs.msdn.com/seshadripv/archive/2005/11/02/488273.aspx">this blog entry</a>, which explains that the Key and Value properties on the KeyValuePair class are both read-only, and by design the XmlSerializer will not serialize properties that don’t have a set accessor!</p>
<p>Damned if that little matter was going to stop me, I whipped out my copy of Lutz Roeder’s reflector to reverse engineer the KeyValuePair class (to be honest, I could have guessed most of it), and added a <!-- raw HTML omitted -->private<!-- raw HTML omitted --> set accessor to both properties, thus persuading the XmlSerializer to, well, do some serializing 🙂</p>
<p>Here’s the code for this new class:</p>
<p>Having done that, to add a little clarity when using this class in the way I anticipate and eliminate repeated code, I decided to create some specific versions of the Collection, ReadOnlyCollection and KeyedCollection classes:</p>
<p>&lt;!&gt;</p>
<p>&lt;!&gt;</p>
]]></content:encoded>
    </item>
    <item>
      <title>Big Integer</title>
      <link>https://blog.iannelson.uk/big-integer/</link>
      <pubDate>Mon, 17 Jul 2006 08:07:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/big-integer/</guid>
      <description>&lt;p&gt;As I mentioned &lt;a href=&#34;https://blog.iannelson.uk/project-euler/&#34;&gt;last summer&lt;/a&gt;, I do enjoy whiling away a few hours attempting to solve the maths / progamming challenges set on &lt;a href=&#34;http://mathschallenge.net/index.php?section=project&#34;&gt;Project Euler&lt;/a&gt;. My language of choice for most puzzles is C#, but this hampered me on some of the questions as there is no in-built support for really big integers.&lt;/p&gt;
&lt;p&gt;However, a little bit of Googling and I came across this excellent &lt;a href=&#34;http://www.codeproject.com/csharp/biginteger.asp&#34;&gt;BigInteger class&lt;/a&gt; on Code Project which does everything I need and more – and it seems bloody fast, too. Thanks to this class, I’ve been able to knock off several more problems this weekend, and now have a rating of “11% Genius” – still some way to go, then…&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>As I mentioned <a href="https://blog.iannelson.uk/project-euler/">last summer</a>, I do enjoy whiling away a few hours attempting to solve the maths / progamming challenges set on <a href="http://mathschallenge.net/index.php?section=project">Project Euler</a>. My language of choice for most puzzles is C#, but this hampered me on some of the questions as there is no in-built support for really big integers.</p>
<p>However, a little bit of Googling and I came across this excellent <a href="http://www.codeproject.com/csharp/biginteger.asp">BigInteger class</a> on Code Project which does everything I need and more – and it seems bloody fast, too. Thanks to this class, I’ve been able to knock off several more problems this weekend, and now have a rating of “11% Genius” – still some way to go, then…</p>
]]></content:encoded>
    </item>
    <item>
      <title>Universal Comparer for .NET</title>
      <link>https://blog.iannelson.uk/universal-comparer-for-net/</link>
      <pubDate>Mon, 27 Feb 2006 22:02:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/universal-comparer-for-net/</guid>
      <description>&lt;p&gt;Back in November 2004, I had the idea of making a &amp;ldquo;&lt;a href=&#34;https://blog.iannelson.uk/a-generic-sorter-for-strongly-typed-collections/&#34;&gt;Generic Sorter for Strongly-Typed Collections&lt;/a&gt;&amp;rdquo;, by harnessing the mighty power of reflection. Well, earlier this month somebody anonymously emailed me some code that takes this to a whole different level, enabling sorting on multiple properties and to arbitrary depths within the domain model hierarchy, all by taking a single SQL-like parameter. It’s really very clever indeed, and I’m going to use this method in the future – thanks, anonymous code fairy!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Back in November 2004, I had the idea of making a &ldquo;<a href="https://blog.iannelson.uk/a-generic-sorter-for-strongly-typed-collections/">Generic Sorter for Strongly-Typed Collections</a>&rdquo;, by harnessing the mighty power of reflection. Well, earlier this month somebody anonymously emailed me some code that takes this to a whole different level, enabling sorting on multiple properties and to arbitrary depths within the domain model hierarchy, all by taking a single SQL-like parameter. It’s really very clever indeed, and I’m going to use this method in the future – thanks, anonymous code fairy!</p>
<p>Oh, while I’m at it, I decided to rename the class, as the use of &ldquo;Generic&rdquo; could be confusing now we have the generic language feature in .NET 2.0. Also, this class doesn’t actually do the sorting, it just implements IComparer to do the comparing. So, with the help of a thesaurus, I settled on &ldquo;UniversalComparer&rdquo;!</p>
]]></content:encoded>
    </item>
    <item>
      <title>String.IsNullOrEmpty</title>
      <link>https://blog.iannelson.uk/string-isnullorempty/</link>
      <pubDate>Sat, 25 Feb 2006 14:02:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/string-isnullorempty/</guid>
      <description>&lt;p&gt;The single most popular entry on this blog is, surprisingly enough, this &lt;a href=&#34;https://blog.iannelson.uk/is-my-string-empty-some-c-performance-metrics/&#34;&gt;quick post from Summer 2004&lt;/a&gt; where I did a quick experiment to &amp;ldquo;prove&amp;rdquo; that in .NET the quickest way of proving that a string is empty is to compare its length to zero.&lt;/p&gt;
&lt;p&gt;Well, as of .NET 2.0, we have a new static method on the System.String class – &lt;code&gt;IsNullOrEmpty&lt;/code&gt; – that allows you to easily test whether a string is, well, null or empty!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>The single most popular entry on this blog is, surprisingly enough, this <a href="https://blog.iannelson.uk/is-my-string-empty-some-c-performance-metrics/">quick post from Summer 2004</a> where I did a quick experiment to &ldquo;prove&rdquo; that in .NET the quickest way of proving that a string is empty is to compare its length to zero.</p>
<p>Well, as of .NET 2.0, we have a new static method on the System.String class – <code>IsNullOrEmpty</code> – that allows you to easily test whether a string is, well, null or empty!</p>
<p>It’s one of many convenience methods in the .NET 2.0 FCL that tend to get overlooked as developers (perhaps rightly) focus on the big new features such as nullable types, generics, partial classes, etc. I find this method particularly handy when validating parameters passed to publicly-visible methods, as in:</p>
<pre><code>public void SayHello( string name )  {    if ( string.IsNullOrEmpty( name ) )        throw new ArgumentNullException( &quot;name&quot;; );    Console.WriteLine( string.Concat( &quot;Hello, &quot;, name ) );}
</code></pre>
<p>It’s not brain surgery, but it does make the resulting code a little cleaner than in the .NET 1.1 days. Oh, and in case you’re wondering, here’s how the method is implemented in System.String (thanks to <a href="http://www.aisto.com/roeder/dotnet">Lutz Roeder’s Reflector</a>):</p>
<pre><code>public static bool IsNullOrEmpty( string value )  {    if ( value != null )    {        return ( value.Length == 0 );    }    return true;}
</code></pre>
<p>More info:</p>
<ul>
<li><a href="http://msdn2.microsoft.com/en-us/library/490acw3e%28vs.80%29.aspx">MSDN documentation</a></li>
<li><a href="http://www.gotdotnet.com/team/fxcop/Docs/Rules/Performance/TestForEmptyStringsUsingStringLength.html">FxCop violation documentation</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>John&#39;s Background Switcher</title>
      <link>https://blog.iannelson.uk/johns-background-switcher/</link>
      <pubDate>Sat, 10 Dec 2005 20:12:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/johns-background-switcher/</guid>
      <description>&lt;p&gt;What’s on your desktop background?  Some bland corporate logo perhaps, or maybe one of the bog-standard Windows wallpapers, or maybe a photograph you took years ago?&lt;br&gt;
Let’s face it, when was the last time you changed your background?  Wouldn’t it be great if you could specify a few keywords and have your background periodically change to show a new image courtesy of Flickr?  Say, a sunrise, a mountain, a wintry scene, a favourite holiday destination, or, well, whatever takes your fancy?&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>What’s on your desktop background?  Some bland corporate logo perhaps, or maybe one of the bog-standard Windows wallpapers, or maybe a photograph you took years ago?<br>
Let’s face it, when was the last time you changed your background?  Wouldn’t it be great if you could specify a few keywords and have your background periodically change to show a new image courtesy of Flickr?  Say, a sunrise, a mountain, a wintry scene, a favourite holiday destination, or, well, whatever takes your fancy?</p>
<p>This is exactly what <a href="http://www.johnsadventures.com/backend/BackgroundSwitcher/index.html">John’s Background Switcher</a> (version 2.0!) does, and it’s available for free right now.  I’ve had the pleasure of beta-testing this over the past few weeks, and it really does work!  I used to claim that I needed two screens for the productivity benefits, but now I find myself devoting one of them to cheering my day with regularly changing pictures courtesy of JBS.  Perhaps this is a good time to try recycling one of our <a href="http://del.icio.us/search/?all=%22digital&#43;picture&#43;frame%22&#43;laptop">old laptops as a digital photo frame</a>…?</p>
]]></content:encoded>
    </item>
    <item>
      <title>ASP.NET 2.0 – one month on</title>
      <link>https://blog.iannelson.uk/asp-net-2-0-one-month-on/</link>
      <pubDate>Sat, 10 Dec 2005 19:12:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/asp-net-2-0-one-month-on/</guid>
      <description>&lt;p&gt;It’s over a month now since Visual Studio 2005 officially RTM’d, and during that time I’ve been fortunate enough to have been using it for the majority of my time on most working days. One of the things we’re trying to achieve is the integration of several distinct internal corporate web applications into a bespoke portal system, with single sign-on, common authorization model, common look and feel, etc. There’s been quite a heavy R&amp;amp;D / proof-of-concept aspect to the workload so far, as we try out different ways of achieving this, and grow familiar with the new technologies available to us in ASP.NET 2.0.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>It’s over a month now since Visual Studio 2005 officially RTM’d, and during that time I’ve been fortunate enough to have been using it for the majority of my time on most working days. One of the things we’re trying to achieve is the integration of several distinct internal corporate web applications into a bespoke portal system, with single sign-on, common authorization model, common look and feel, etc. There’s been quite a heavy R&amp;D / proof-of-concept aspect to the workload so far, as we try out different ways of achieving this, and grow familiar with the new technologies available to us in ASP.NET 2.0.</p>
<p>I thought I’d share with you a few of the links that have been of most help to me over the past month or so:</p>
<ul>
<li><a href="http://weblogs.asp.net/scottgu/">Scott Guthrie’s Blog</a>. If you develop ASP.NET applications, this is the one site, above all others, to which you should subscribe. Every single one of Scott’s posts provides extremely useful tips and tricks – such as <a href="http://weblogs.asp.net/scottgu/archive/2005/11/11/430382.aspx">Tips For Nested Master Pages and Design Time</a>, <a href="http://weblogs.asp.net/scottgu/archive/2005/11/18/430943.aspx">How to Change the Default Browser</a> (not obvious, is it?). More importantly, it’s here that you’ll first learn about VS2005 add-ons such as <a href="http://weblogs.asp.net/scottgu/archive/2005/11/06/429723.aspx">Web Deployment Projects</a> and the forthcoming new <a href="http://weblogs.asp.net/scottgu/archive/2005/12/07/432630.aspx">Web Project Model</a>.</li>
<li><a href="http://pluralsight.com/blogs/craig/archive/2005/10/19/15696.aspx">Serializing a KeyedCollection</a>. It doesn’t work, but it’s not your fault – it’s a bug in the .NET Framework. Had I found this page earlier I would have saved myself multiple hours of frustration.</li>
<li>Another serialization problem that foxed me for a while – I had a custom Principal object in a locally referenced assembly. Every time I tried to set my Context.User to an instance of this, I got a SerializationException with a “Type is not resolved..” message. Huh?  More Googling threw up <a href="http://tinyurl.com/7tp97">this post</a> [Google Groups] from Nov 29 explaining the issue and giving some workarounds.</li>
<li><a href="http://weblogs.asp.net/dwahlin/archive/2005/11/16/430779.aspx">Dan Wahlin – Sharing Master Pages across IIS Applications</a>. This is *exactly* what we’ve been trying to do – Dan’s post gave us a real leg-up.</li>
<li><a href="http://blogs.msdn.com/davidebb/archive/2005/10/30/487160.aspx">David Ebbo – Turning an ascx user control into a redistributable server control</a>. Sounds like a neat trick, although I haven’t had cause to try it yet.</li>
<li><a href="http://west-wind.com/weblog/posts/3016.aspx">Rich Strahl – Understanding Page Inheritance in ASP.NET 2.0</a>. If you’ve got into the habit of dynamically loading user controls into your pages in ASP.NET 1.1, and were planning on doing the same going forward, then you should check out Rick’s article first. Things aren’t quite as straightforward as they used to be…</li>
<li><a href="http://msdn.microsoft.com/asp.net/reference/design/default.aspx?pull=/library/en-us/dnaspp/html/aspnetusstan.asp">MSDN: Building ASP.NET 2.0 Web Sites using Web Standards</a>. Don’t scoff, it’s an important topic!  I’ve been waiting for valid (X)HTML output from Visual Studio for a long time, I’m glad to see MS are finally taking standards (and Accessibility) seriously.</li>
<li><a href="http://msdn.microsoft.com/library/default.asp?url=https://blog.iannelson.uk/library/en-us/dnaspp/html/GridViewEx.asp">MSDN: GridView Examples</a>. <a href="http://www.scottonwriting.net/sowBlog/">Scott Mitchell’s</a> huge (122 page) article explaining how to do anything (well, almost) with the GridView control. Talking of which, you could do worse than also subscribe to Marcie Robillard’s new site, <a href="http://www.gridviewgirl.com/GridViewGirl/">GridViewGirl</a>.</li>
</ul>
<p>Also, two books which have really helped me get up to speed:</p>
<ul>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0764559885">Professional .NET Generics</a> – a Wrox book (not a huge one, thankfully) on this useful new (to .NET) programming feature.</li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0596008120">ASP.NET 2.0 – A Developer’s Notebook</a>. One of those books from the O’Reilly “notebook” series that aims to get you up to speed quickly on new features. It works.</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Rounding Up The Result of Integer Division</title>
      <link>https://blog.iannelson.uk/rounding-up-the-result-of-integer-division/</link>
      <pubDate>Tue, 06 Sep 2005 11:09:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/rounding-up-the-result-of-integer-division/</guid>
      <description>&lt;p&gt;Here’s a damn useful piece of information which should be in the armoury of every modern codemonkey:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In Java, if it is required to round up the result of dividing &lt;code&gt;m&lt;/code&gt; by &lt;code&gt;n&lt;/code&gt; (where &lt;code&gt;m&lt;/code&gt; and &lt;code&gt;n&lt;/code&gt; are integers), one should compute &lt;code&gt;(m+n-1)/n&lt;/code&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Source: &lt;a href=&#34;http://www.cs.nott.ac.uk/%7Ercb/G51MPC/slides/NumberLogic.pdf&#34;&gt;Number Conversion, Roland Backhouse, 2001&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I’ve used this deliciously elegant result in production J2EE code in the past, but it’s equally valid in C#, &lt;em&gt;as long as you can make the additional assertion that m/n is positive&lt;/em&gt;. This is because whilst Java treats integer division by rounding to zero, &lt;a href=&#34;http://msdn2.microsoft.com/library/6a71f45d%28en-us,vs.80%29.aspx&#34;&gt;C# merely truncates the result&lt;/a&gt; (in an unchecked context). In my experience, the most frequentuse for this result is the deft answering of questions such as “if I have x items in my dataset and I display y per page, how many pages do I have in total?”, where it is obviously safe to make the assertion of a positive result.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Here’s a damn useful piece of information which should be in the armoury of every modern codemonkey:</p>
<blockquote>
<p>In Java, if it is required to round up the result of dividing <code>m</code> by <code>n</code> (where <code>m</code> and <code>n</code> are integers), one should compute <code>(m+n-1)/n</code></p></blockquote>
<p>Source: <a href="http://www.cs.nott.ac.uk/%7Ercb/G51MPC/slides/NumberLogic.pdf">Number Conversion, Roland Backhouse, 2001</a></p>
<p>I’ve used this deliciously elegant result in production J2EE code in the past, but it’s equally valid in C#, <em>as long as you can make the additional assertion that m/n is positive</em>. This is because whilst Java treats integer division by rounding to zero, <a href="http://msdn2.microsoft.com/library/6a71f45d%28en-us,vs.80%29.aspx">C# merely truncates the result</a> (in an unchecked context). In my experience, the most frequentuse for this result is the deft answering of questions such as “if I have x items in my dataset and I display y per page, how many pages do I have in total?”, where it is obviously safe to make the assertion of a positive result.</p>
]]></content:encoded>
    </item>
    <item>
      <title>10 Things That Should Be More Popular</title>
      <link>https://blog.iannelson.uk/10-things-that-should-be-more-popular/</link>
      <pubDate>Wed, 31 Aug 2005 09:08:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/10-things-that-should-be-more-popular/</guid>
      <description>&lt;p&gt;Some days I feel like I’m spitting in the wind. It amazes me that the following ten concepts, websites and applications aren’t more widely used:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Web_feed&#34;&gt;RSS Feeds&lt;/a&gt; – why waste your time repeatedly trawling dozens of sites looking for new content?  Let it come to you!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt; – practically everyone I know has a digital camera, but still relatively few have a Flickr account. Share your photos, don’t keep them unseen on your hard drive!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.gmail.com&#34;&gt;GMail&lt;/a&gt; – by far the most effective web-based email.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mozilla.com/firefox&#34;&gt;FireFox&lt;/a&gt; – if only for the tabbed browsing. But really, it’s so much nicer than IE6, and a myriad of different extensions are available.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://microsoft.com/office/onenote&#34;&gt;OneNote&lt;/a&gt; – so much better than scraps of paper.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Desktop_search&#34;&gt;Desktop Search&lt;/a&gt; – I don’t care &lt;a href=&#34;http://desktop.google.com/&#34;&gt;which&lt;/a&gt; &lt;a href=&#34;http://www.copernic.com/en/products/desktop-search/&#34;&gt;desktop&lt;/a&gt; &lt;a href=&#34;http://www.microsoft.com/windows/desktopsearch/&#34;&gt;search&lt;/a&gt; &lt;a href=&#34;http://desktop.yahoo.com/&#34;&gt;program&lt;/a&gt; you use, but please install one!  You’ll find it so much easier to find old emails and other files.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://del.icio.us&#34;&gt;del.icio.us&lt;/a&gt; – access your bookmarks anywhere, and share them with friends.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microsoft.com/typography/ClearTypeInfo.mspx&#34;&gt;ClearType&lt;/a&gt; – if you have a flatscreen monitor, you should turn ClearType on. Period.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microsoft.com/windows/virtualpc/default.mspx&#34;&gt;Virtual PC&lt;/a&gt; – there’s no need to test beta software on your main machine, or keep several differently-configured computers around the house any more!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microsoft.com/windowsxp/using/digitalphotography/prophoto/synctoy.mspx&#34;&gt;SyncToy&lt;/a&gt; – this is a great little app for synchronizing and backing-up folders; it’s really useful for combining media folders, and for synching files with a portable hard drive.&lt;/li&gt;
&lt;/ol&gt;</description>
      <content:encoded><![CDATA[<p>Some days I feel like I’m spitting in the wind. It amazes me that the following ten concepts, websites and applications aren’t more widely used:</p>
<ol>
<li><a href="http://en.wikipedia.org/wiki/Web_feed">RSS Feeds</a> – why waste your time repeatedly trawling dozens of sites looking for new content?  Let it come to you!</li>
<li><a href="http://www.flickr.com/">Flickr</a> – practically everyone I know has a digital camera, but still relatively few have a Flickr account. Share your photos, don’t keep them unseen on your hard drive!</li>
<li><a href="http://www.gmail.com">GMail</a> – by far the most effective web-based email.</li>
<li><a href="http://www.mozilla.com/firefox">FireFox</a> – if only for the tabbed browsing. But really, it’s so much nicer than IE6, and a myriad of different extensions are available.</li>
<li><a href="http://microsoft.com/office/onenote">OneNote</a> – so much better than scraps of paper.</li>
<li><a href="http://en.wikipedia.org/wiki/Desktop_search">Desktop Search</a> – I don’t care <a href="http://desktop.google.com/">which</a> <a href="http://www.copernic.com/en/products/desktop-search/">desktop</a> <a href="http://www.microsoft.com/windows/desktopsearch/">search</a> <a href="http://desktop.yahoo.com/">program</a> you use, but please install one!  You’ll find it so much easier to find old emails and other files.</li>
<li><a href="http://del.icio.us">del.icio.us</a> – access your bookmarks anywhere, and share them with friends.</li>
<li><a href="http://www.microsoft.com/typography/ClearTypeInfo.mspx">ClearType</a> – if you have a flatscreen monitor, you should turn ClearType on. Period.</li>
<li><a href="http://www.microsoft.com/windows/virtualpc/default.mspx">Virtual PC</a> – there’s no need to test beta software on your main machine, or keep several differently-configured computers around the house any more!</li>
<li><a href="http://www.microsoft.com/windowsxp/using/digitalphotography/prophoto/synctoy.mspx">SyncToy</a> – this is a great little app for synchronizing and backing-up folders; it’s really useful for combining media folders, and for synching files with a portable hard drive.</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>Computer Games I Have Loved</title>
      <link>https://blog.iannelson.uk/computer-games-i-have-loved/</link>
      <pubDate>Mon, 22 Aug 2005 21:08:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/computer-games-i-have-loved/</guid>
      <description>&lt;p&gt;Isn’t it funny how one’s tastes change as maturity progresses?  I used to spend my summer holidays at the sea-side, playing in arcades and seeking the perfect milkshake (&lt;a href=&#34;http://www.snackspot.org.uk/thread.php?story=0408101147daa&#34;&gt;lime&lt;/a&gt;); more recently I’ve been spending them in the highlands, playing on the hills and seeking the perfect dram (&lt;a href=&#34;http://www.scotchwhisky.com/focus/lagavulin.htm&#34;&gt;lagavulin&lt;/a&gt;).  Hmmm…&lt;/p&gt;
&lt;p&gt;I think I may have mentioned that the wife is away in the States for a while.  At the start of this period of solitude, I panicked, wondering whatever I could do with myself, and came to the conclusion that it would be a good idea to buy a computer game to while away the hours.  After all, I spent much of my formative years killing time on a variety of computer and console games, so why not rekindle that prior love affair?  So it was that I bought &lt;a href=&#34;http://thesims2.ea.com/&#34;&gt;The Sims 2&lt;/a&gt;, a truly excellent game, and had an enjoyable evening trying to motivate my wee Sims to improve their skills, better themselves, and generally enjoy life.  All good harmless fun.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Isn’t it funny how one’s tastes change as maturity progresses?  I used to spend my summer holidays at the sea-side, playing in arcades and seeking the perfect milkshake (<a href="http://www.snackspot.org.uk/thread.php?story=0408101147daa">lime</a>); more recently I’ve been spending them in the highlands, playing on the hills and seeking the perfect dram (<a href="http://www.scotchwhisky.com/focus/lagavulin.htm">lagavulin</a>).  Hmmm…</p>
<p>I think I may have mentioned that the wife is away in the States for a while.  At the start of this period of solitude, I panicked, wondering whatever I could do with myself, and came to the conclusion that it would be a good idea to buy a computer game to while away the hours.  After all, I spent much of my formative years killing time on a variety of computer and console games, so why not rekindle that prior love affair?  So it was that I bought <a href="http://thesims2.ea.com/">The Sims 2</a>, a truly excellent game, and had an enjoyable evening trying to motivate my wee Sims to improve their skills, better themselves, and generally enjoy life.  All good harmless fun.</p>
<p>The following evening, though, I came to resume my game, and…  I just couldn’t be bothered.  The whole concept seemed utterly pointless, a real waste of time.  Why squander an evening encouraging AI sims to develop their skills and improve their house when, here in the real life, I had bookcases to build, books to read, music to enjoy, new DVDs to watch, a fantastic city to go out and enjoy, and skills to learn for my own career?  It struck me that many of the finely-honed computer game skills I had developed over the past thirtyish years were of absolutely no use outside the parameters of those particular games.</p>
<p>Since then, The Sims has sat on a shelf, and I’ve achieved loads over the past few weeks – Jocelyn is soon returning to find the house at the tidiest it’s been in years.  I told my mum all this (as you do).  She said I’m growing up.  About bloody time.</p>
<p>But still, those earlier computer games <em>did</em> play a big part during the first three decades of my life, so, in way of tribute, here’s a quick rundown of the dozen games responsible for my most wasted hours:</p>
<h2 id="grandstand-adman-2000.wp-block-heading">Grandstand Adman 2000</h2>
<p>The first “console” I ever owned, this featured four (four!) different games – football, squash, tennis and practice.  Not only that, but it boasted configurable options for speed, angle, and bat-size!  You simply cannot appreciate how many hours I frittered away bouncing that square block against a wall until I encountered 15 “faults” – at which point I would press the reset button and repeat the process.  If I’m being charitable to my younger self, then I could suggest that this game at least helped me develop hand-eye coordination, and stopped me mithering my parents for a while.<br>
“Real Sports Action”, says the box.  Well, only if football ever consisted of four vertical bars deflecting a square ball moving with constant speed.  Also – “Realistic Sound Effects”.  It beeped!  That was it!  But, y’know, it was all we had, so…<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p><em>Photo by <a href="http://computermuseum.50megs.com/collectionpong.htm">Erik Klooster</a></em></p>
<h2 id="grandstand-bmx-flyer.wp-block-heading">Grandstand BMX Flyer</h2>
<p>Oh, now this handheld LCD console was (is?) a most favourite game of mine.  I can still hum the tune, and I still know that my highest-ever score was 14,070.  Brilliant fun – highly addictive and an appealing concept for a seven year-old lad (“avoid the crows!”  “jump for the girl in the balloon!”  “kick dirt in the baddy’s face!”).<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<p><em>Photo by <a href="http://www.handheldmuseum.com/Grandstand/BMXF.htm">Handheld Museum</a></em></p>
<h2 id="starter-chess-commodore-16-.wp-block-heading">Starter Chess (Commodore 16)</h2>
<p>I was always a Commodore kid.  Speccies and Amstrads, though much more popular with the gamers at school, just didn’t appeal to me.  I mean, seriously, how could you write computer programs for hours on end using a rubber keyboard?!  Oh, sure, they were much better for games, if you liked that kind of thing.  But the C16 came with games too, like.. Starter Chess!<br>
OK, who am I kidding?  Starter Chess was, in all respects, an exercise in patience and sitting around watching a pitifully underpowered computer fail to do very much for what seemed like an interminably long time.  First you had to get the game to load, from cassette tape, which always took the best part of twenty minutes.  Then, after every chess move played by oneself, the Commodore spent a good five minutes plotting its next move (which it announced with a loud beep).  Not very exciting.  On the plus side, the computer player wasn’t particularly strong, so it was actually quite conceivable to win, even as a youngster.</p>
<h2 id="fruit-machine-simulator-commodore-16-.wp-block-heading">Fruit Machine Simulator (Commodore 16)</h2>
<p>I’m beginning to think I must’ve been a bit of a masochist as a child, because I absolutely loved this single-screen game which attempted to “simulate” a pretty simplistic fruit machine.  Press a key to enter some coins.  Press another key to pull the lever.  Maybe, just maybe, you then have the possibility of pressing further keys to “hold” or “nudge” – oh, the excitement was palpable.  It sounds really dull now, but I loved it at the time.  I remember trying to figure out the probability with which the various game events occurred – were they truly random, or were they influenced by the user’s actions?  What was the average length of a game, before you either went bust or accumulated the target winnings?  A future university career in mathematics was  already evident..</p>
<h2 id="kickstart-commodore-16-.wp-block-heading">Kickstart (Commodore 16)</h2>
<p>Of all the games I had for the C16, Kickstart was the only one that I remember as being truly playable, and remotely “fast”.  I was impressed at the time that such a game could run on a machine with such little RAM.  This was a motorbike game (as in the old TV show, Kickstart, which I also loved), and, like BMX Flyer years early, basically involved making the bike jump at the appropriate time – balloons were involved again too, and there was an irritating-to-adults soundtrack.  Quality.</p>
<h2 id="lemmings-amiga-.wp-block-heading">Lemmings (Amiga)</h2>
<p>The Christmas that brought me an Amiga 500 played a big part in sealing my future career direction.  For the first time, I was able to tinker with a real operating system (with GUI), more powerful programming languages, hard disks, multitasking applications, etc.  But that Christmas day itself was mostly spent playing Lemmings, which should need no introduction as it’s one of the most popular games of its time, and has been ported across to many platforms, including DHTML!<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h2 id="stunt-car-racer-amiga-.wp-block-heading">Stunt Car Racer (Amiga)</h2>
<p>Stunt Car Racer was initially a very hard game.  But, persevere and you would discover the “knack” to each of the eight challenging courses.  So, persevere I did, and eventually reached the top of division one!  It seemed like such an achievement at the time, but it’s not exactly something I can put on my CV in 2005, is it?<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h2 id="gods-amiga-.wp-block-heading">Gods (Amiga)</h2>
<p>Gods was a platform game by the Bitmap Brothers, with a kicking introductory theme tune, and the game was pretty cool too.  Lots of different weapons, puzzles, and backgrounds ensured a game which remained enjoyable as you progressed through the levels.  Also a good variety of monsters, who boasted a much-hyped AI, in stark contrast to the usual sprites of the day who tended to attack by following predictable (circular) routes.  Brilliant.<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h2 id="civilization-series-amiga-pc-.wp-block-heading">Civilization series (Amiga / PC)</h2>
<p>Of all the games mentioned, I have spent the most time playing the various incarnations of Civilization on the Amiga and latterly on the PC.  Indeed, Civ 3 with the Play The World expansion gets my vote for greatest computer game of all time.  It’s such a brilliant concept – start with a few stone-age settlers in 4000BC and nurture them through 6000 years of growth, discovery, technological development, war and peace until they either achieve world domination or make the leap to Alpha Centauri (OK, I hear there are some other victory conditions, but these are the only two I’ve ever really found interesting).  The level of attachment you can feel to your civilization after playing this game for an entire weekend is really quite disturbing.  Addictive to the extreme, and often responsible for my eyes feeling very sore indeed…<!-- raw HTML omitted --></p>
<p><!-- raw HTML omitted --> <!-- raw HTML omitted --></p>
<h2 id="worms-pc-.wp-block-heading">Worms (PC)</h2>
<p>If it wasn’t for Worms, I suspect myself and some of the other Grovey Roaders would have achieved 2:1 degrees instead of the 2:2s we all took from Nottingham uni.  But, alas, Worms was just such good fun, and so sociable… what better way to spend evenings in our final year than commanding crack squads of four worms each to kick each other’s butts to entertaining effect?  Well, except for going to The Irish, of course.</p>
<h2 id="quake-pc-.wp-block-heading">Quake (PC)</h2>
<p>I missed the whole Doom thing as I didn’t get a PC until leaving uni in 1997. Quake was therefore the first FPS I ever played, and thus swiftly passed another summer of my youth.</p>
<h2 id="gran-turismo-2-playstation-.wp-block-heading">Gran Turismo 2 (Playstation)</h2>
<p>GT2 was the reason I bought a Playstation, and it was the only PSX game I played for any length of time.  At the time I had a Ford Puma, so within the game I made a point of buying the exact same model in the same colour.  How sad is that?  As with my recent Sims 2 epiphany, I was eventually struck by the thought “why am I doing this within the virtual confines of a computer game when I could be doing it out in the real world?”.  I didn’t explain this line of reasoning to the magistrate though, and the six points should come off my driving licence in a few year’s time… 😉</p>
<p>There you have it, the dirty dozen responsible for wasting much of the best years of my life.  Who knows, without those distractions, maybe by now I would otherwise be a Nobel laureate, or rich and famous…  or maybe I would have no hand-eye coordination, be unable to use a mouse, and not have the programming talents that now put food on our table.  Hmmm…</p>
]]></content:encoded>
    </item>
    <item>
      <title>Stopwatch Class for .NET 1.1</title>
      <link>https://blog.iannelson.uk/stopwatch-class-for-net-1-1/</link>
      <pubDate>Tue, 05 Jul 2005 09:07:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/stopwatch-class-for-net-1-1/</guid>
      <description>&lt;p&gt;Paul Welter has backported the System.Diagnostics.Stopwatch class from .NET 2.0 to 1.1. Handy.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://weblogs.asp.net/pwelter34/archive/2005/07/01/416999.aspx&#34;&gt;http://weblogs.asp.net/pwelter34/archive/2005/07/01/416999.aspx&lt;/a&gt;&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Paul Welter has backported the System.Diagnostics.Stopwatch class from .NET 2.0 to 1.1. Handy.</p>
<p><a href="http://weblogs.asp.net/pwelter34/archive/2005/07/01/416999.aspx">http://weblogs.asp.net/pwelter34/archive/2005/07/01/416999.aspx</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>New Recommendations for String Comparisons in .NET 2.0</title>
      <link>https://blog.iannelson.uk/new-recommendations-for-string-comparisons-in-net-2-0/</link>
      <pubDate>Mon, 04 Jul 2005 19:07:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/new-recommendations-for-string-comparisons-in-net-2-0/</guid>
      <description>&lt;p&gt;I know it’s a rather geeky and dry subject, but I found &lt;a href=&#34;http://msdn.microsoft.com/netframework/default.aspx?pull=/library/en-us/dndotnet/html/StringsinNET20.asp&#34;&gt;this MSDN article on new recommendations for using strings in .NET 2.0&lt;/a&gt; quite interesting. It’s going to be difficult to stop using CultureInfo.InvariantCulture habitually!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I know it’s a rather geeky and dry subject, but I found <a href="http://msdn.microsoft.com/netframework/default.aspx?pull=/library/en-us/dndotnet/html/StringsinNET20.asp">this MSDN article on new recommendations for using strings in .NET 2.0</a> quite interesting. It’s going to be difficult to stop using CultureInfo.InvariantCulture habitually!</p>
]]></content:encoded>
    </item>
    <item>
      <title>eXtreme .NET</title>
      <link>https://blog.iannelson.uk/extreme-net/</link>
      <pubDate>Sat, 18 Jun 2005 21:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/extreme-net/</guid>
      <description>&lt;p&gt;Up at 0500 yesterday and onto the early GNER Mallard down to that London town for the MSDN briefing on eXtreme programming with .NET. It was pleasant not to be driving for a change, and speeding through the Yorkshire countryside early on a midsummer morning was very relaxing – what a stark contrast with the hot crowded tube that I had to catch on arrival to the big smoke. Three stops down to Oxford Circus seemed to last as long as the entire preceeding train journey. How people do this every single day I do not know..&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Up at 0500 yesterday and onto the early GNER Mallard down to that London town for the MSDN briefing on eXtreme programming with .NET. It was pleasant not to be driving for a change, and speeding through the Yorkshire countryside early on a midsummer morning was very relaxing – what a stark contrast with the hot crowded tube that I had to catch on arrival to the big smoke. Three stops down to Oxford Circus seemed to last as long as the entire preceeding train journey. How people do this every single day I do not know..</p>
<p>Anyway, I digress. The tech briefing was excellent, a full day’s set of presentations on eXtreme development practices by the very erudite and engaging <a href="http://www.roodyn.com/">Dr Neil Roodyn</a>, with additional demos by some of the MSDN UK guys. During questioning, nobody in the audience was arguing against using the XP practices espoused, in fact most questioners simply wanted to know how to get project managers and business leaders bought in to the ideas. The general consensus was that suits and customers don’t want to hear about pair programming and <a href="http://www.testdriven.com/">TDD</a>, they want to see devs working on coding new functionality, which is obviously frustrating for those of us cutting the code. Hopefully sessions like the one on Friday will help to inspire a groundswell of enthusiasm for agile practices amongst developers and team leads which the business leaders will eventually be unable to ignore. Dr Neil suggested that we don’t try to immediately enforce all 12 XP principles in our workplaces, but start using those which work for us, basically those which we can sneak in under the managements noses!  Nobody can stop you from writing unit tests and adopting a TDD approach to your coding, and may only start asking questions when they see how much more productive you’re becoming, and how fewer bugs are found in your code. After all, producing quality code is your job, and nobody will stop you from doing your job well.</p>
<hr>
<p>While I remember, some of the books mentioned by Neil were:</p>
<ul>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0201604566">&ldquo;Software For Your Head&rdquo; by Jim McCarthy</a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0349113467">&ldquo;The Tipping Point&rdquo; by Malcolm Gladwell</a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/1587991845">&ldquo;Fooled By Randomness&rdquo; by Nassim Nicholas Taleb</a></li>
</ul>
<p>and I have noted down that I should find the time to visit:</p>
<ul>
<li><a href="http://www.microsoft.com/uk/msdn/postevents">http://www.microsoft.com/uk/msdn/postevents</a> – for a copy of the slides</li>
<li><a href="http://agilealliance.com">http://agilealliance.com</a></li>
<li><a href="http://www.xpertise.co.uk">http://www.xpertise.co.uk</a></li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>Tech Books</title>
      <link>https://blog.iannelson.uk/tech-books/</link>
      <pubDate>Sat, 18 Jun 2005 21:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/tech-books/</guid>
      <description>&lt;p&gt;I succumbed to temptation and bought another book at the MSDN briefing yesterday, pausing only out of concern that the guy who mans the &lt;a href=&#34;http://www.computermanuals.co.uk&#34;&gt;Computer Manuals&lt;/a&gt; stand at these events might think that I’m stalking him (or fancy him!). Having determined that I could hand over my Barclaycard whilst flashing my wedding ring, I brought my current reading list up to three:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.uk/exec/obidos/ASIN/078214361X&#34;&gt;Developer to Designer: GUI Design for the Busy Developer&lt;/a&gt; – this was a wedding present from my mother-in-law and is proving to be an interesting, easy-going read so far. My competencies lie in the middle tier and database, and although I’m technically capable of making GUIs, I prefer to leave the design up to others. It’s inevitable though that most coders end up doing some design, and this book is, er, designed (sorry) to help with that process. The early section of the book concentrates on each UI element in turn, whilst the later part of the book looks at putting it all together, and has particular focus on the web – layout design patterns and interaction patterns. It’s a good read, making a nice contrast from the heavier books, and I’m pleased to learn that I’m not alone in hating Outlook’s labyrinthine Tools-&amp;gt;Options dialog!&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>I succumbed to temptation and bought another book at the MSDN briefing yesterday, pausing only out of concern that the guy who mans the <a href="http://www.computermanuals.co.uk">Computer Manuals</a> stand at these events might think that I’m stalking him (or fancy him!). Having determined that I could hand over my Barclaycard whilst flashing my wedding ring, I brought my current reading list up to three:</p>
<p><a href="http://www.amazon.co.uk/exec/obidos/ASIN/078214361X">Developer to Designer: GUI Design for the Busy Developer</a> – this was a wedding present from my mother-in-law and is proving to be an interesting, easy-going read so far. My competencies lie in the middle tier and database, and although I’m technically capable of making GUIs, I prefer to leave the design up to others. It’s inevitable though that most coders end up doing some design, and this book is, er, designed (sorry) to help with that process. The early section of the book concentrates on each UI element in turn, whilst the later part of the book looks at putting it all together, and has particular focus on the web – layout design patterns and interaction patterns. It’s a good read, making a nice contrast from the heavier books, and I’m pleased to learn that I’m not alone in hating Outlook’s labyrinthine Tools-&gt;Options dialog!</p>
<p><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0321245660">Effective C#: 50 Specific Ways to Improve Your C#</a> – another good read that isn’t too heavy, this is a good book of short hints and tips to dip into when waiting for the latest CTPs of VS and SQL Server to install (well, at least that’s when I’ve found myself reading it). Depending on your level of experience with C#, you may find some of these suggestions are teaching you to suck eggs, but they all come with detailed justifications that provide useful insights into .NET internals, and out of fifty points you’re bound to find something that you didn’t previously know. If you’re new to C#, get this book now and put it’s suggestions into practice from the start. If you think you’re an expert, borrow a copy and use it as a checklist of your knowledge.</p>
<p><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0596007124">Head First Design Patterns</a> – this is the book I picked up yesterday (yes, partly because of the cute blonde on the cover), but it was the outstanding content that stopped me putting it down again. This doesn’t feel like a normal O’Reilly book, and it feels very far removed from the original Gang of Four’s Design Patterns book – yet it covers the same material. This is a patterns book that won’t send you to sleep, that will make you laugh, that will make those tricky concepts sink in and your misconceptions float away. It’s cool, clever, succinct and quite unlike any other tech book I’ve read. The only slight downer is that all the examples are in Java, but this really shouldn’t be an issue for any half-competent C# developer. Superb.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Software Development Books</title>
      <link>https://blog.iannelson.uk/software-development-books/</link>
      <pubDate>Mon, 13 Jun 2005 20:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/software-development-books/</guid>
      <description>&lt;p&gt;Elizabeth Keogh has been blogging her &lt;a href=&#34;http://www.livejournal.com/users/sirenian/19432.html&#34;&gt;advice for software-developer apprentices&lt;/a&gt;, and recommends buying and reading a selection of good software development books. I think this is sound advice – personally I felt that my career and abilities starting taking off when I stopped reading tech-specific Wrox tomes that were obsolete within six months of publication and started buying timeless Addison-Wesley hardbacks. Why so many newbie coders insist on rediscovering solutions to well-known problems instead of leveraging the knowledge of our programming forebears is beyond me, but most of us have behaved in this way at some point. Give yourself a leg-up and read some decent software design books.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Elizabeth Keogh has been blogging her <a href="http://www.livejournal.com/users/sirenian/19432.html">advice for software-developer apprentices</a>, and recommends buying and reading a selection of good software development books. I think this is sound advice – personally I felt that my career and abilities starting taking off when I stopped reading tech-specific Wrox tomes that were obsolete within six months of publication and started buying timeless Addison-Wesley hardbacks. Why so many newbie coders insist on rediscovering solutions to well-known problems instead of leveraging the knowledge of our programming forebears is beyond me, but most of us have behaved in this way at some point. Give yourself a leg-up and read some decent software design books.</p>
<p>If I had to make a list, the books I would currently prescribe for new graduates entering a career of enterprise OO development would be:</p>
<ol>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0735619670"><em>Code Complete</em></a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0321125215"><em>Domain Driven Design</em></a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0201485672"><em>Refactoring</em></a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0201633612"><em>Design Patterns</em></a></li>
<li><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0321127420"><em>Patterns of Enterprise Application Architecture</em></a></li>
</ol>
<p>and if I was feeling cynical I’d perhaps also advise a copy of <a href="http://www.amazon.co.uk/exec/obidos/ASIN/1590590082"><em>The Career Programmer – Guerilla Tactics for an Imperfect World</em></a> be kept stashed in a laptop bag…</p>
]]></content:encoded>
    </item>
    <item>
      <title>Framework for Persisting .NET Classes Into SQL Server Image Fields, With Locking Ability</title>
      <link>https://blog.iannelson.uk/framework-for-persisting-net-classes-into-sql-server-image-fields-with-locking-ability/</link>
      <pubDate>Tue, 18 Jan 2005 23:01:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/framework-for-persisting-net-classes-into-sql-server-image-fields-with-locking-ability/</guid>
      <description>&lt;p&gt;There seems to have been a lack of .NET-related stuff on this blog recently, so let me show you something I cobbled together for work purposes last Wednesday:&lt;/p&gt;
&lt;p&gt;A common requirement we have in our ASP.NET applications is how to reliably persist object instances for a lengthy period of time. End users shouldn’t have to concern themselves with the concept of Session expiry, and it’s unacceptable for them to return to their PC after nipping off for a coffee to be confronted with the dreaded &amp;ldquo;Object reference not set to an instance of an object&amp;rdquo; when they try to continue editing their basket / sales order / timesheet / whatever.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>There seems to have been a lack of .NET-related stuff on this blog recently, so let me show you something I cobbled together for work purposes last Wednesday:</p>
<p>A common requirement we have in our ASP.NET applications is how to reliably persist object instances for a lengthy period of time. End users shouldn’t have to concern themselves with the concept of Session expiry, and it’s unacceptable for them to return to their PC after nipping off for a coffee to be confronted with the dreaded &ldquo;Object reference not set to an instance of an object&rdquo; when they try to continue editing their basket / sales order / timesheet / whatever.</p>
<p>One pattern to solve this, detailed by <a href="http://www.martinfowler.com">Martin Fowler</a> in <a href="http://www.amazon.co.uk/exec/obidos/ASIN/0321127420">Patterns of Enterprise Application Architecture</a>, is the <strong>Serialized LOB</strong> (Large Object), which works by serializing the object in question into binary or text which is then stored in a single database field.</p>
<p>An excellent example of how to achieve this using SQL Server and .NET is given by <a href="http://www.eggheadcafe.com/articles/20020929.asp">Peter A Bromberg in this Egghead Cafe article</a>.</p>
<p>Building on this example, I’ve put together a generic assembly for persisting and retrieving serializable classes into SQL Server, referenced by a combination of two strings (a username and a key). It is essentially an alternative to storing objects in Session or ViewState. As an additional benefit, it allows you to &ldquo;lock&rdquo; objects based on the key, so that only one user can store the same object at a given point in time.</p>
<p>The zip file below includes the source and a SQL script for setting up the required database table and four stored procedures, as well as some unit tests (yes, I am sticking to my New Year’s Resolution!).</p>
<p>The DataStore class contains the various static methods necessary to add, retrieve and delete objects from the store. For example, to save an object you can simply make a call along the lines of:</p>
<pre><code>DataStore.Add(&quot;joebloggs&quot;,&quot;order1234&quot;,objOrder);  
</code></pre>
<p>Note that if an object already exists in the store for a given user/key combination, it will be overwritten.</p>
<p>If you additionally want to ensure that no other users have also stored an object with the same name into the store, pass true into the optional fourth parameter:</p>
<pre><code>DataStore.Add(&quot;joebloggs&quot;,&quot;order1234&quot;,objOrder,true);  
</code></pre>
<p>this would throw an ObjectLockedException if any user other than “joebloggs” had previously locked an object called “order1234”.</p>
<p>To retrieve an object, use the Get method. If the object is not found, this will return null. Otherwise, an instance of PersistedObject will be returned – this details information such the datetime at which the object was originally stored and last stored, as well as whether it is locked. The actual object itself is accessible through a &ldquo;StoredObject&rdquo; property.</p>
<p>So, to retrieve the sales order object above from the store, a call would be like this:</p>
<pre><code>SalesOrder objOrder = DataStore.Get(&quot;joebloggs&quot;,&quot;order1234&quot;).StoredObject as SalesOrder;  
</code></pre>
<p>That’s pretty much it. There are also methods to retrieve a collection of objects from the store (GetByUser, GetByKey), as well as methods to remove objects from the store (Remove, RemoveByKey, RemoveByUser, Clear).</p>
<p>Feel free to use and cannibalize this code as you see fit. Let me know if you find it useful or interesting, and of course if you have any suggestions for improvements. Oh, and of course it should go without saying that I make no guarantee as to the suitability of this code for any purpose and accept no responsibility for any loss of data etcetera!</p>
<hr>
<p><strong>Updated 30 October 2005:</strong></p>
<p>I’ve reworked this code for .NET 2.0, and removed the dependency on the Microsoft Data Access Application Block. Also, the NUnit tests have been replaced with VS2005 unit tests.</p>
<ul>
<li><a href="https://blog.iannelson.uk/content/images/iannelsondatastorage20.zip"><strong>Download .NET 2.0 version</strong></a> (86 Kb)</li>
<li><a href="https://blog.iannelson.uk/content/images/iannelsondatastorage10.zip"><strong>Download .NET 1.1 version</strong></a> (116 Kb)</li>
</ul>
<p><strong>Updated 17 October 2011:</strong></p>
<p>This project has been <a href="https://github.com/ianfnelson/DataStorage">migrated to GitHub</a>.</p>
]]></content:encoded>
    </item>
    <item>
      <title>SQL Server Best Practices Analyser Tool</title>
      <link>https://blog.iannelson.uk/sql-server-best-practices-analyser-tool/</link>
      <pubDate>Sun, 12 Dec 2004 19:12:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/sql-server-best-practices-analyser-tool/</guid>
      <description>&lt;p&gt;Via &lt;a href=&#34;http://ericgharrison.com/Blog/archive/2004/12/11/491.aspx&#34;&gt;Eric G. Harrison&lt;/a&gt; – MS have developed a &lt;a href=&#34;http://www.microsoft.com/downloads/details.aspx?FamilyId=B352EB1F-D3CA-44EE-893E-9E07339C1F22&amp;amp;displaylang=en&#34;&gt;SQL Server Best Practices Analyser Tool&lt;/a&gt;. It’s like a cross between &lt;a href=&#34;http://www.gotdotnet.com/team/fxcop/&#34;&gt;FxCop&lt;/a&gt; and &lt;a href=&#34;http://www.microsoft.com/technet/security/tools/mbsahome.mspx&#34;&gt;Baseline Security Analyser&lt;/a&gt;, for SQL Server. Very useful. I just downloaded it, ran it against some of my databases, and it made some useful suggestions. This could quickly become indispensable.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Via <a href="http://ericgharrison.com/Blog/archive/2004/12/11/491.aspx">Eric G. Harrison</a> – MS have developed a <a href="http://www.microsoft.com/downloads/details.aspx?FamilyId=B352EB1F-D3CA-44EE-893E-9E07339C1F22&amp;displaylang=en">SQL Server Best Practices Analyser Tool</a>. It’s like a cross between <a href="http://www.gotdotnet.com/team/fxcop/">FxCop</a> and <a href="http://www.microsoft.com/technet/security/tools/mbsahome.mspx">Baseline Security Analyser</a>, for SQL Server. Very useful. I just downloaded it, ran it against some of my databases, and it made some useful suggestions. This could quickly become indispensable.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Property Access Modifiers in Whidbey</title>
      <link>https://blog.iannelson.uk/property-access-modifiers-in-whidbey/</link>
      <pubDate>Mon, 15 Nov 2004 19:11:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/property-access-modifiers-in-whidbey/</guid>
      <description>&lt;p&gt;Ooh, this is great news:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://nxopinion.robertsoninstitute.org/blogs/rcecil/archive/2004/11/11/167.aspx&#34;&gt;http://nxopinion.robertsoninstitute.org/blogs/rcecil/archive/2004/11/11/167.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It’s a little thing, to be sure, but I often find myself wanting to make a setter internal or private while leaving the getter public. So, I’m happy. It doesn’t take much 🙂&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Ooh, this is great news:</p>
<p><a href="http://nxopinion.robertsoninstitute.org/blogs/rcecil/archive/2004/11/11/167.aspx">http://nxopinion.robertsoninstitute.org/blogs/rcecil/archive/2004/11/11/167.aspx</a></p>
<p>It’s a little thing, to be sure, but I often find myself wanting to make a setter internal or private while leaving the getter public. So, I’m happy. It doesn’t take much 🙂</p>
]]></content:encoded>
    </item>
    <item>
      <title>A Generic Sorter For Strongly-Typed Collections</title>
      <link>https://blog.iannelson.uk/a-generic-sorter-for-strongly-typed-collections/</link>
      <pubDate>Sun, 07 Nov 2004 21:11:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/a-generic-sorter-for-strongly-typed-collections/</guid>
      <description>&lt;p&gt;Late last night I was doing some development work on a website for our investment club. I had a strongly-typed collection of &amp;ldquo;Stock&amp;rdquo; objects, and wanted to be able to sort them on any parameter (StockName, SharePrice, Volume, MarketCap, etc..) in either descending or ascending order. I didn’t want to have to write a separate comparer for each property. Reflection to the rescue! Below is a GenericSorter class, the use of which allows for the development of a Sort() method on the collection taking as a parameter the name of the property on which to sort. Smart.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>Late last night I was doing some development work on a website for our investment club. I had a strongly-typed collection of &ldquo;Stock&rdquo; objects, and wanted to be able to sort them on any parameter (StockName, SharePrice, Volume, MarketCap, etc..) in either descending or ascending order. I didn’t want to have to write a separate comparer for each property. Reflection to the rescue! Below is a GenericSorter class, the use of which allows for the development of a Sort() method on the collection taking as a parameter the name of the property on which to sort. Smart.</p>
<p>Bob’s your uncle.</p>
<p><strong>Update</strong> [2006-02-27]: The above class is no match for some <a href="https://blog.iannelson.uk/universal-comparer-for-net/">much more fully-featured code</a> that was anonymously sent to me earlier this month which allows for sorting on multiple properties to arbitrary depth within the domain object model, using a simple SQL-like syntax. <a href="https://blog.iannelson.uk/universal-comparer-for-net/">Check it out…</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>NHibernate</title>
      <link>https://blog.iannelson.uk/nhibernate/</link>
      <pubDate>Fri, 03 Sep 2004 19:09:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/nhibernate/</guid>
      <description>&lt;p&gt;There’s &lt;em&gt;so&lt;/em&gt; much good open-source .Net development going on these days – .Text, nGallery, nUnit, etc – it’s a really interesting time to be a developer. My colleague Colin just drew my attention to &lt;a href=&#34;http://sourceforge.net/projects/nhibernate&#34;&gt;nHibernate&lt;/a&gt;, an object persistence library for relational databases. &lt;a href=&#34;http://www.theserverside.net/articles/showarticle.tss?id=NHibernate&#34;&gt;TheServerSide.net&lt;/a&gt; has an excellent article summarising its use. Having just finished a long project where a large amount of time was spent writing “plumbing” code to persist objects to and from a SQL Server database, I’m finding the idea of using an O/R mapper such as this very appealing the next time round. Just as incorporating the &lt;a href=&#34;http://msdn.microsoft.com/library/default.asp?url=https://blog.iannelson.uk/library/en-us/dnbda/html/daab-rm.asp&#34;&gt;MS DAAB block&lt;/a&gt; into solutions has reduced the amount of data access code required, I’m hopeful that embracing frameworks such as nHibernate will leave us with more time to spend focusing on addressing the business needs and less on re-solving technical issues.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>There’s <em>so</em> much good open-source .Net development going on these days – .Text, nGallery, nUnit, etc – it’s a really interesting time to be a developer. My colleague Colin just drew my attention to <a href="http://sourceforge.net/projects/nhibernate">nHibernate</a>, an object persistence library for relational databases. <a href="http://www.theserverside.net/articles/showarticle.tss?id=NHibernate">TheServerSide.net</a> has an excellent article summarising its use. Having just finished a long project where a large amount of time was spent writing “plumbing” code to persist objects to and from a SQL Server database, I’m finding the idea of using an O/R mapper such as this very appealing the next time round. Just as incorporating the <a href="http://msdn.microsoft.com/library/default.asp?url=https://blog.iannelson.uk/library/en-us/dnbda/html/daab-rm.asp">MS DAAB block</a> into solutions has reduced the amount of data access code required, I’m hopeful that embracing frameworks such as nHibernate will leave us with more time to spend focusing on addressing the business needs and less on re-solving technical issues.</p>
<p>If anyone has had experience of using nHibernate or similar O/R mapper in an enterprise .NET project, I’d be interesting in hearing your opinions. Would you use it again?  Did it genuinely help to abstract away the object persistence/retrieval mechanisms from the domain model, or is it just one more layer to worry about and keep up to date?  Let me know.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Ideal World / Real World</title>
      <link>https://blog.iannelson.uk/ideal-world-real-world/</link>
      <pubDate>Wed, 01 Sep 2004 09:09:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/ideal-world-real-world/</guid>
      <description>&lt;p&gt;A major project I’ve been working on for the last ten months has just gone live, giving me some time recently to take stock, do a bit of R&amp;amp;D, and catch up on some reading. I’ve been reflecting on how to approach things better in the future, and to this end, I’ve just finished two very different books about the software development process.&lt;/p&gt;
&lt;p&gt;O’Reilly’s &lt;em&gt;&lt;a href=&#34;http://www.amazon.co.uk/exec/obidos/ASIN/0596004850&#34;&gt;Extreme Programming Pocket Guide&lt;/a&gt;&lt;/em&gt; is a handy little summary of the approach (only 81 pages), depicting a near-utopian development shop where everyone is happy, and projects come in under budget and on time. It got me quite fired up, actually, and some of the concepts described are interesting. But deep down, I just know this would never happen in the real world—too much politics, too many personalities at play in the workplace, in my humble opinion.&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>A major project I’ve been working on for the last ten months has just gone live, giving me some time recently to take stock, do a bit of R&amp;D, and catch up on some reading. I’ve been reflecting on how to approach things better in the future, and to this end, I’ve just finished two very different books about the software development process.</p>
<p>O’Reilly’s <em><a href="http://www.amazon.co.uk/exec/obidos/ASIN/0596004850">Extreme Programming Pocket Guide</a></em> is a handy little summary of the approach (only 81 pages), depicting a near-utopian development shop where everyone is happy, and projects come in under budget and on time. It got me quite fired up, actually, and some of the concepts described are interesting. But deep down, I just know this would never happen in the real world—too much politics, too many personalities at play in the workplace, in my humble opinion.</p>
<p>This is where the second book I read this week comes in. <em><a href="http://www.amazon.co.uk/exec/obidos/ASIN/1590590082">The Career Programmer: Guerrilla Tactics for an Imperfect World</a></em> provides useful suggestions for dealing with the aforementioned politics and personalities in pursuit of spending more time happily coding while developing your skills and career.</p>
<p>Both books are well worth reading for any professional coder, as together they offer a wealth of practical advice on making a developer’s life less stressful.</p>
]]></content:encoded>
    </item>
    <item>
      <title>Is My String Empty?  Some C# Performance Metrics</title>
      <link>https://blog.iannelson.uk/is-my-string-empty-some-c-performance-metrics/</link>
      <pubDate>Fri, 30 Jul 2004 10:07:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/is-my-string-empty-some-c-performance-metrics/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update (25/02/2006)&lt;/strong&gt; – Hey, we now have &lt;a href=&#34;https://blog.iannelson.uk/string-isnullorempty/&#34;&gt;String.IsNullOrEmpty&lt;/a&gt;, you know!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;What’s the quickest way, in C#, to test whether a string is empty?  This is a question which came to my mind yesterday. I’ve always been fond of:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;but it occured to me that this necessitates the creation and destruction of a second object (the empty string with which we’re comparing), so maybe it would be quicker to write:&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p><strong>Update (25/02/2006)</strong> – Hey, we now have <a href="https://blog.iannelson.uk/string-isnullorempty/">String.IsNullOrEmpty</a>, you know!</p>
<hr>
<p>What’s the quickest way, in C#, to test whether a string is empty?  This is a question which came to my mind yesterday. I’ve always been fond of:</p>
<!-- raw HTML omitted -->
<p>but it occured to me that this necessitates the creation and destruction of a second object (the empty string with which we’re comparing), so maybe it would be quicker to write:</p>
<!-- raw HTML omitted -->
<p>And looking through some existing code I also found examples of:</p>
<!-- raw HTML omitted -->
<p>I decided that an experiment was in order, so wrote a quick windows application to try each method in turn. I was also interested to see if there was a difference in performance where the result was true than when it was false.</p>
<p>Here are the results, with times in milliseconds for 50 million iterations:</p>
<!-- raw HTML omitted -->
<pre><code>&lt;td align=&quot;right&quot;&gt;
  true result
&lt;/td&gt;

&lt;td align=&quot;right&quot;&gt;
  false result
&lt;/td&gt;
</code></pre>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<pre><code>&lt;td align=&quot;right&quot;&gt;
  1172
&lt;/td&gt;

&lt;td align=&quot;right&quot;&gt;
  2484
&lt;/td&gt;
</code></pre>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<pre><code>&lt;td align=&quot;right&quot;&gt;
  531
&lt;/td&gt;

&lt;td align=&quot;right&quot;&gt;
  531
&lt;/td&gt;
</code></pre>
<!-- raw HTML omitted -->
<!-- raw HTML omitted -->
<pre><code>&lt;td align=&quot;right&quot;&gt;
  611
&lt;/td&gt;

&lt;td align=&quot;right&quot;&gt;
  1893
&lt;/td&gt;
</code></pre>
<!-- raw HTML omitted -->
<p> </p>
<p>So there you have it. Experimental evidence that the fastest way to test for an empty string is to test whether it’s Length property is zero (and that this also takes exactly the same length of time irrespective of whether the result is true or false).. unless anyone knows of a quicker method? Of course, since we’re only saving ourselves around 50 nanoseconds per iteration against using the slowest method shown above, this is hardly going to result in a noticeable performance gain!!</p>
]]></content:encoded>
    </item>
    <item>
      <title>Inheriting From BaseValidator to Make Custom Validation Controls</title>
      <link>https://blog.iannelson.uk/inheriting-from-basevalidator-to-make-custom-validation-controls/</link>
      <pubDate>Wed, 30 Jun 2004 19:06:00 +0000</pubDate>
      <guid>https://blog.iannelson.uk/inheriting-from-basevalidator-to-make-custom-validation-controls/</guid>
      <description>&lt;p&gt;For months now, I’ve been desperate for a decent excuse to make a custom ASP.NET server control, so I was secretly pleased today when a CustomValidator originally coded for use on a single page was required elsewhere.&lt;/p&gt;
&lt;p&gt;It’s surprisingly easy to do, although it took me a while to find a decent example online, which eventually came courtesy of the &lt;a href=&#34;http://www.4guysfromrolla.com/webtech/tips/t040302-1.shtml&#34;&gt;4GuysFromRolla&lt;/a&gt;. In my particular scenario, I needed to check that the text entered into a TextBox did not equal any of a selection of &amp;ldquo;banned&amp;rdquo; strings (which was available via a static property on another class).&lt;/p&gt;</description>
      <content:encoded><![CDATA[<p>For months now, I’ve been desperate for a decent excuse to make a custom ASP.NET server control, so I was secretly pleased today when a CustomValidator originally coded for use on a single page was required elsewhere.</p>
<p>It’s surprisingly easy to do, although it took me a while to find a decent example online, which eventually came courtesy of the <a href="http://www.4guysfromrolla.com/webtech/tips/t040302-1.shtml">4GuysFromRolla</a>. In my particular scenario, I needed to check that the text entered into a TextBox did not equal any of a selection of &ldquo;banned&rdquo; strings (which was available via a static property on another class).</p>
<p>Having added a new custom web control, deriving from BaseValidator, my first task was therefore to ensure that the control being validated really was a TextBox – this was done by overriding the <code>ControlPropertiesValid()</code> method:</p>
<p>That done, I just had to override the <code>EvaluateIsValid()</code> method, which does the actual validation:</p>
<p>…and that was it. Job done, pretty much. OK, so I spent a while making a cute icon image too. But the coding was easy and straightforward – inheriting from BaseValidator meant that most of the work was already done for me. In no time at all I was able to drop this custom control onto the required pages and user controls.</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
