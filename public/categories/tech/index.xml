<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tech on Ian Nelson</title>
    <link>https://bloghugo.iannelson.uk/categories/tech/</link>
    <description>Recent content in Tech on Ian Nelson</description>
    <generator>Hugo -- 0.146.6</generator>
    <language>en-gb</language>
    <lastBuildDate>Mon, 21 Apr 2025 22:21:59 +0100</lastBuildDate>
    <atom:link href="https://bloghugo.iannelson.uk/categories/tech/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NDC Porto 2024</title>
      <link>https://bloghugo.iannelson.uk/ndc-porto-2024/</link>
      <pubDate>Sun, 20 Oct 2024 22:09:29 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/ndc-porto-2024/</guid>
      <description>&lt;p&gt;I had the pleasure of spending ISO Week 42 in the beautiful Portuguese coastal city of Porto, attending the NDC Porto 2024 conference for software developers by &lt;a href=&#34;https://ndcconferences.com/&#34;&gt;NDC Conferences&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It’s been a long time since I attended a multi-day conference – perhaps even as long ago as &lt;a href=&#34;https://blog.iannelson.uk/software-architect-2007/&#34;&gt;Software Architect 2007&lt;/a&gt; (where I first learned about Dependency Injection and IOC Containers) which makes me feel quite ancient. Having been a freelancer since 2008, it’s often difficult to justify taking time out to attend conferences, no matter how valuable they might be to one’s career in the longer term. The face cost of the conference ticket is usually dwarfed by the loss of contract income (real or perceived) whilst being unable to bill a client.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DDDNorth 2022</title>
      <link>https://bloghugo.iannelson.uk/dddnorth-2022/</link>
      <pubDate>Sun, 04 Dec 2022 15:48:39 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/dddnorth-2022/</guid>
      <description>&lt;p&gt;Yesterday morning I arose unusually early for a Saturday and drove eastwards to attend this year’s &lt;a href=&#34;https://dddnorth.co.uk/&#34;&gt;DDDNorth&lt;/a&gt; at the University of Hull. These free, community-driven events held at the weekend offer an invaluable opportunity to learn from peers in the industry in a relaxed environment.&lt;/p&gt;
&lt;p&gt;Five concurrent sessions in each timeslot means that tough decisions often have to be made about which to attend! In acknowledgement of my maturing years (I’ve been reading up on &lt;a href=&#34;https://en.wikipedia.org/wiki/Optimal_stopping&#34;&gt;optimal stopping&lt;/a&gt;) and the niche that I have carved out for myself, I chose to stick to those sessions that focused on backend and distributed architecture and development.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Temperature Blanket – A Rare Opportunity for My Coding to Assist Jocelyn&#39;s Crafting</title>
      <link>https://bloghugo.iannelson.uk/temperature-blanket/</link>
      <pubDate>Sun, 16 Feb 2020 22:35:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/temperature-blanket/</guid>
      <description>&lt;p&gt;As the resident geek in our family, it won’t surprise you to hear that I am occasionally approached by Jocelyn and our kids to provide tech support. Sadly, most of these queries are invariably of the “how do I print from my phone” or “the Sky box stopped working” ilk, and rarely trouble my software skills. So it came as a pleasant surprise when I recently encountered a genuine reason to use .NET, APIs and Docker in support of one of Jocelyn’s craft projects.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to Install RabbitMQ Server in Docker on a Synology NAS</title>
      <link>https://bloghugo.iannelson.uk/how-to-install-rabbitmq-server-in-docker-on-a-synology-nas/</link>
      <pubDate>Sat, 25 Jan 2020 23:46:56 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/how-to-install-rabbitmq-server-in-docker-on-a-synology-nas/</guid>
      <description>&lt;p&gt;One of the game-changing features of &lt;a href=&#34;https://www.synology.com&#34;&gt;Synology&lt;/a&gt;‘s NAS (Network-Attached Storage) devices is their ability to run &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;, the industry-standard containerization technology. This opens up the possibility of running all kinds of applications on the NAS, turning them into home servers with boundless possibilities.&lt;/p&gt;
&lt;p&gt;One of things I wanted to run on my own Synology NAS is &lt;a href=&#34;https://www.rabbitmq.com/&#34;&gt;RabbitMQ&lt;/a&gt;, the popular open-source message broker. I intend to use this as the heart of a distributed home climate measuring project, with a bunch of low-cost Raspberry Pi devices sending regular sensor readings to a database, or directly to a real-time web application.&lt;/p&gt;</description>
    </item>
    <item>
      <title>DDDNorth 2014 Review</title>
      <link>https://bloghugo.iannelson.uk/dddnorth-2014-review/</link>
      <pubDate>Wed, 22 Oct 2014 20:11:52 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/dddnorth-2014-review/</guid>
      <description>&lt;p&gt;I had no excuse for not attending &lt;a href=&#34;http://dddnorth.co.uk/&#34;&gt;DDDNorth&lt;/a&gt; this year, as it was held at Leeds University, a relatively short drive from home. Not that I’d be looking for an excuse – these free events are always superbly organised and provide a valuable opportunity to see sessions from a wide range of speakers without having to take time off work. It’s no wonder the tickets are always snapped up so quickly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Back To Basics: On The Use And Abuse Of The Humble Boolean</title>
      <link>https://bloghugo.iannelson.uk/back-to-basics-on-the-use-and-abuse-of-the-humble-boolean/</link>
      <pubDate>Tue, 01 Jul 2014 20:54:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/back-to-basics-on-the-use-and-abuse-of-the-humble-boolean/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;“We who cut mere stones must always be envisioning cathedrals”&lt;/p&gt;
&lt;p&gt;— Stonecutter’s creed&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Consider for a moment, if you will, the humble Boolean. Taking only two possible values, it is the most basic of all the data types we programmers use, and its existence is fundamental to all the code we write. At the end of the day, when all is said and done, everything we do is just a big bunch of ones and zeroes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Star Of The Week</title>
      <link>https://bloghugo.iannelson.uk/star-of-the-week/</link>
      <pubDate>Thu, 08 May 2014 20:30:11 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/star-of-the-week/</guid>
      <description>&lt;p&gt;As a lowly &lt;em&gt;sellsword&lt;/em&gt; amongst the ensemble cast that make up the incestuous York/Leeds IT scene, I am not usually one to be influenced by the promise of titles and honours.&lt;/p&gt;
&lt;p&gt;Time was, long ago, in my first graduate job, that I yearned for a promotion from “Solution Developer” to “Development Specialist”. Now I give little consideration to what I’m called, and sell my services on the basis of what I can &lt;em&gt;do&lt;/em&gt;, and the value I can bring to a project and an organisation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Friday Retrospective: My First Printer</title>
      <link>https://bloghugo.iannelson.uk/friday-retrospective-my-first-printer/</link>
      <pubDate>Fri, 25 Apr 2014 05:30:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/friday-retrospective-my-first-printer/</guid>
      <description>&lt;p&gt;My first printer was a Star LC-20 nine pin dot matrix that I received as a Christmas present when I was 15 years old. That’s the kind of nerdy teenager I was, folks. All yuletide long our home rang out with the deafening noise made by those pins rapidly and repeatedly punching through a flimsy ink-soaked ribbon.&lt;/p&gt;
&lt;p&gt;Incidentally, Radio 4 are forever running features about the ongoing decline in audible birdsong in the English countryside. Personally, I think it’s a travesty that a whole generation of kids will grow up unfamiliar with the nerve-shattering noise of a built-to-last dot matrix, the inimitable caterwauling of a 33.6 kbps modem connecting to a dial-up BBS, or the satisfying clunk as a 3.5 inch floppy is gleefully accepted by a disk drive. Moving to an SSD may have provided an incredible boost to my development productivity, but there’s a part of me that misses hearing the faint humming and scratching sounds of traditional hard disk heads moving across a highly-polished platter. But I digress…&lt;/p&gt;</description>
    </item>
    <item>
      <title>One Reason Why NCrunch Is Worth The Cost</title>
      <link>https://bloghugo.iannelson.uk/one-reason-why-ncrunch-is-worth-the-cost/</link>
      <pubDate>Tue, 22 Apr 2014 21:25:50 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/one-reason-why-ncrunch-is-worth-the-cost/</guid>
      <description>&lt;p&gt;I have been merrilly using &lt;a href=&#34;http://www.ncrunch.net/&#34;&gt;NCrunch&lt;/a&gt; – an “automated concurrent testing tool for Visual Studio” – for almost three years now. I ponied up for a paid license when it made the transition from beta to RTM, and I recently shelled out again for an upgrade to version 2.&lt;/p&gt;
&lt;p&gt;Why?! Why do this when plenty of test runners are free, or bundled with software I already own such as ReSharper and Visual Studio itself?&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Personal Stack Overflow Milestone</title>
      <link>https://bloghugo.iannelson.uk/a-personal-stack-overflow-milestone/</link>
      <pubDate>Wed, 04 Jan 2012 21:01:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/a-personal-stack-overflow-milestone/</guid>
      <description>&lt;p&gt;In the grand scheme of things, ’tis but a minor achievement, but I was quite chuffed with myself this evening when my Stack Overflow reputation finally reached the 10,000 mark:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;My girls made me a special “10K” cake to celebrate 🙂&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Kudos to &lt;a href=&#34;http://blog.codinghorror.com/&#34;&gt;Jeff&lt;/a&gt;, &lt;a href=&#34;http://www.joelonsoftware.com/&#34;&gt;Joel&lt;/a&gt; and the team for creating a site that I have found engaging, entertaining and very useful for the last 3 years and 4 months.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Wacom Bamboo</title>
      <link>https://bloghugo.iannelson.uk/wacom-bamboo/</link>
      <pubDate>Tue, 13 Sep 2011 10:09:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/wacom-bamboo/</guid>
      <description>&lt;p&gt;Almost everyone who has wandered past the various desks that I’ve occupied over the last year has passed comment on my &lt;a href=&#34;http://amzn.to/1rrSHfo&#34;&gt;Wacom Bamboo Pen Graphics Tablet&lt;/a&gt;. So, let me say a few words about my experiences with that.&lt;/p&gt;
&lt;p&gt;For the longest time, I had been perfectly content to use various &lt;a href=&#34;http://amzn.to/1tLMAqb&#34;&gt;Logitech VX / MX mouses&lt;/a&gt; as my secondary input device, occasionally using a &lt;a href=&#34;http://amzn.to/PBaiVJ&#34;&gt;Microsoft Arc Mouse&lt;/a&gt; (very convenient to carry around in my rucksack).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Schoolboy Error Of The Day</title>
      <link>https://bloghugo.iannelson.uk/schoolboy-error-of-the-day/</link>
      <pubDate>Wed, 17 Aug 2011 08:08:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/schoolboy-error-of-the-day/</guid>
      <description>&lt;p&gt;This dumb mistake just cost me an hour spelunking around in the debugger:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;(where source is e.g. “&lt;a href=&#34;http://foo.com/status/all-is-good&#34;&gt;http://foo.com/status/all-is-good&lt;/a&gt;“)&lt;/p&gt;
&lt;p&gt;Fortunately the ramifications were picked up in the acceptance tests, but the root cause wasn’t at all obvious from such a high level.&lt;/p&gt;
&lt;p&gt;Lesson for the day – code is never too trivial to warrant unit testing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Entity Framework Week Part 5: Concluding Thoughts</title>
      <link>https://bloghugo.iannelson.uk/entity-framework-week-part-5-concluding-thoughts/</link>
      <pubDate>Fri, 11 Mar 2011 09:03:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/entity-framework-week-part-5-concluding-thoughts/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the fifth in a series of five posts recounting my experiences using Entity Framework Code-First to replace ADO.NET and stored procedures in a client’s existing application. &lt;a href=&#34;https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/&#34;&gt;The introductory post in the series is here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I am lucky to have had the opportunity to spend a time-boxed period playing with &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb399572.aspx&#34;&gt;Entity Framework&lt;/a&gt; Code-First in a real-world scenario, and to get paid for the privilege! I now have a clearer understanding of how it has progressed during the last few years, what its strong points are, and where it still has shortcomings compared to the much more mature &lt;a href=&#34;http://www.nhforge.org&#34;&gt;NHibernate&lt;/a&gt; framework.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Entity Framework Week Part 4: Features and Further Investigations</title>
      <link>https://bloghugo.iannelson.uk/entity-framework-week-part-4-features-and-further-investigations/</link>
      <pubDate>Thu, 10 Mar 2011 09:03:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/entity-framework-week-part-4-features-and-further-investigations/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the fourth in a series of five posts recounting my experiences using Entity Framework Code-First to replace ADO.NET and stored procedures in a client’s existing application. &lt;a href=&#34;https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/&#34;&gt;The introductory post in the series is here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I didn’t want this series of posts to descend into a point-scoring &lt;a href=&#34;http://www.nhforge.org&#34;&gt;NHibernate&lt;/a&gt;-versus-&lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb399572.aspx&#34;&gt;Entity Framework&lt;/a&gt; comparison, but…&lt;/p&gt;
&lt;p&gt;I now have a basic proof-of-concept up and running, with my client’s nascent application now being powered by Entity Framework Code-First CTP5 rather than a hand-rolled DAL. So, I had some time to consider future functional and non-functional requirements that the team would be asked to develop and support, and investigate how EF would meet the challenge.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Entity Framework Week Part 3: Runtime Issues Encountered</title>
      <link>https://bloghugo.iannelson.uk/entity-framework-week-part-3-runtime-issues-encountered/</link>
      <pubDate>Wed, 09 Mar 2011 09:03:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/entity-framework-week-part-3-runtime-issues-encountered/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the third in a series of five posts recounting my experiences using Entity Framework Code-First to replace ADO.NET and stored procedures in a client’s existing application. &lt;a href=&#34;https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/&#34;&gt;The introductory post in the series is here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Having configured and initialized &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb399572.aspx&#34;&gt;Entity Framework&lt;/a&gt;, and tweaked the mappings, by Day 3 I was all set to start consuming my shiny new DbContext implementation from the application code, and actually get some CRUD work done. Not unexpectedly, I hit a few issues along the way…&lt;/p&gt;</description>
    </item>
    <item>
      <title>Entity Framework Week Part 2: Conventions and Fluent Mappings</title>
      <link>https://bloghugo.iannelson.uk/entity-framework-week-part-2-conventions-and-fluent-mappings/</link>
      <pubDate>Tue, 08 Mar 2011 09:03:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/entity-framework-week-part-2-conventions-and-fluent-mappings/</guid>
      <description>&lt;p&gt;&lt;em&gt;This is the second in a series of five posts recounting my experiences using Entity Framework Code-First to replace ADO.NET and stored procedures in a client’s existing application. &lt;a href=&#34;https://blog.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/&#34;&gt;The introductory post in the series is here&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;As mentioned in yesterday’s post, I was attempting to use &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb399572.aspx&#34;&gt;Entity Framework&lt;/a&gt; Code-First CTP5 to map an existing domain model to an existing database schema. Fortunately the project was in its infancy and there was a high degree of cohesion between the two models. I therefore didn’t anticipate too many difficulties ahead – the occasional naming discrepancy to resolve, and table-per-hierarchy mappings that would need their discriminators specifying – nothing too complicated really. I hoped to make as few changes as possible to either the database schema or domain model.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Entity Framework Week Part 1: Introduction, Configuration and Initialization</title>
      <link>https://bloghugo.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/</link>
      <pubDate>Mon, 07 Mar 2011 09:03:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/entity-framework-week-part-1-introduction-configuration-and-initialization/</guid>
      <description>&lt;p&gt;In February 2011 I found myself doing some contract development work in a team that was still doing data access using raw ADO.NET and stored procedures. Being the &lt;a href=&#34;http://www.nhforge.org&#34;&gt;NHibernate&lt;/a&gt; fanboy that I am, I naturally attempted to persuade them of the benefits of moving over to NH, even going so far as to develop (in my own time) an NH-powered version of their application.&lt;/p&gt;
&lt;p&gt;My efforts were &lt;em&gt;partially&lt;/em&gt; successful. The team were sold on the idea of using an ORM, but wanted me to develop a second proof of concept using Microsoft ADO.NET &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/bb399572.aspx&#34;&gt;Entity Framework&lt;/a&gt; rather than NHibernate. This prompted much mirth amongst my FaceBook friends.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enterprise Integration Anti-Patterns #2 – Shared Assemblies</title>
      <link>https://bloghugo.iannelson.uk/enterprise-integration-anti-patterns-2-shared-assemblies/</link>
      <pubDate>Wed, 01 Dec 2010 10:12:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/enterprise-integration-anti-patterns-2-shared-assemblies/</guid>
      <description>&lt;p&gt;Having slain the beast that is &lt;a href=&#34;https://blog.iannelson.uk/enterprise-integration-anti-patterns-1-the-shared-database/&#34;&gt;Shared Database&lt;/a&gt;, the next dragon to appear on my Enterprise Integration horizon is Shared Assemblies. That is, the suggestion that Application A can leverage the functionality of Application B by simply adding references to B’s DLLs. After all, this potential for reuse is why we put our code in reusable assemblies in the first place, isn’t it..?!&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>NHibernate and Mapping Aggregates</title>
      <link>https://bloghugo.iannelson.uk/nhibernate-and-mapping-aggregates/</link>
      <pubDate>Thu, 25 Nov 2010 08:11:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/nhibernate-and-mapping-aggregates/</guid>
      <description>&lt;p&gt;A few days ago a friend emailed me the following question regarding NHibernate mappings for a solution he’s currently developing:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“I have an idea entity that has a collection of comment entities and I need to get the comment count for each idea. I made a massive mistake at the beginning by calling idea.Comments.Count (even worse, I did it in the view!), which due to the collection being lazy-loaded caused about 10 database calls so performance was sluggish even with second level cache. I was therefore wondering how you would do it – would you use HQL and use Comments.size or would you do something differently?”&lt;/p&gt;</description>
    </item>
    <item>
      <title>Enterprise Integration Anti-Patterns #1 – The Shared Database</title>
      <link>https://bloghugo.iannelson.uk/enterprise-integration-anti-patterns-1-the-shared-database/</link>
      <pubDate>Mon, 08 Nov 2010 05:11:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/enterprise-integration-anti-patterns-1-the-shared-database/</guid>
      <description>&lt;p&gt;So, I was in the office at a client site, walking back to my desk after grabbing a quick coffee, when a developer on a sister product to my current project grabbed me and asked (I paraphrase somewhat):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Hey, Ian – [my app] needs to retrieve [small piece of data] from [your app], so I’ve stuck a stored proc in [your database], OK?”&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;I felt quite violated. My poor app, what had it done to deserve this despicable treatment?&lt;/p&gt;</description>
    </item>
    <item>
      <title>MVC – Where To Put Business Logic?</title>
      <link>https://bloghugo.iannelson.uk/mvc-where-to-put-business-logic/</link>
      <pubDate>Wed, 03 Nov 2010 12:11:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/mvc-where-to-put-business-logic/</guid>
      <description>&lt;p&gt;I just had an email from a friend asking where business logic should go when using MVC – the controller or the model.&lt;/p&gt;
&lt;p&gt;I thought I’d share my reply:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I think asking whether the business logic should go in the Model or the Controller is a false dichotomy. There are different kinds of business logic, and there’s also the possibility of putting it somewhere else entirely.&lt;/p&gt;
&lt;p&gt;Much business logic does indeed belong in the model, particularly stuff like encapsulating calculations and projections, adding meaning to raw data properties, and ensuring domain objects are maintained in a valid state. I see this as the traditional side of OO design – encapsulating logic and restricting accessibility.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Testing IoC Registrations</title>
      <link>https://bloghugo.iannelson.uk/testing-ioc-registrations/</link>
      <pubDate>Fri, 09 Apr 2010 14:04:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/testing-ioc-registrations/</guid>
      <description>&lt;p&gt;When I first started writing automated unit tests for my code, I remember getting carried away writing lots of tiny little tests, each with a single Assert. It felt good initially to see all those green ticks, but rapidly became a maintenance headache, and I am now happier having fewer less-brittle tests that do more.&lt;/p&gt;
&lt;p&gt;I think it’s great when tools like &lt;a href=&#34;http://automapper.codeplex.com/&#34;&gt;AutoMapper&lt;/a&gt; provide powerful methods like…&lt;/p&gt;
&lt;p&gt;…allowing me to test large swathes of the system configuration with a single, stable test.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Testing LINQ Queries</title>
      <link>https://bloghugo.iannelson.uk/testing-linq-queries/</link>
      <pubDate>Fri, 09 Apr 2010 13:04:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/testing-linq-queries/</guid>
      <description>&lt;p&gt;I’ve been asked “How do you test LINQ queries?” a couple of times in the past few months, so I thought I’d blog my answer for the benefit of all you lovely people.&lt;/p&gt;
&lt;p&gt;Firstly I should explain how I’ve been doing most of my data access in recent months. I find that the &lt;a href=&#34;http://martinfowler.com/eaaCatalog/repository.html&#34;&gt;Repository pattern&lt;/a&gt;, and particularly the &lt;a href=&#34;http://fabiomaulo.blogspot.com/2009/09/repository-or-dao-repository.html&#34;&gt;.NET implementation described here by Fabio Maulo&lt;/a&gt; meets the vast majority of requirements I have in my applications, and I fall back on additionally using custom DAOs when required.&lt;/p&gt;</description>
    </item>
    <item>
      <title>WCF – Global Exception Handling</title>
      <link>https://bloghugo.iannelson.uk/wcf-global-exception-handling/</link>
      <pubDate>Fri, 09 Apr 2010 13:04:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/wcf-global-exception-handling/</guid>
      <description>&lt;p&gt;I’ve done a fair bit of WCF development recently (and amazingly I came out of it relatively unscathed, both psychologically and emotionally). Using Castle Windsor’s WCF Facility helped a great deal, but I still found myself writing a fair bit of infrastructure and plumbing code. I thought I’d blog some of these code snippets lest I forget, and on the offchance they might help others.&lt;/p&gt;
&lt;p&gt;One of the things I wanted to achieve was to ensure that any unhandled exceptions that propagated to the top of the stack were logged. The following custom EndpointBehavior achieves that. I’m using Castle Logging Facility here, but you could of course swap out the logging code for whatever error handling code you require.&lt;/p&gt;</description>
    </item>
    <item>
      <title>WCF – Logging Before and After Operation Invocation</title>
      <link>https://bloghugo.iannelson.uk/wcf-logging-before-and-after-operation-invocation/</link>
      <pubDate>Fri, 09 Apr 2010 13:04:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/wcf-logging-before-and-after-operation-invocation/</guid>
      <description>&lt;p&gt;Here’s another custom WCF EndpointBehavior I found useful recently.&lt;/p&gt;
&lt;p&gt;Not content with &lt;a href=&#34;https://blog.iannelson.uk/wcf-global-exception-handling/&#34;&gt;logging all unhandled errors&lt;/a&gt;, I wanted to output a DEBUG level log message before and after every operation invocation. As before, I’m using the Castle Windsor Logging Facility to handle my logging, but you can swap that out for your logger of choice if required.&lt;/p&gt;
&lt;p&gt;Firstly, here’s the EndPointBehaviour itself. This adds a custom CallContextInitializer to every service operation:&lt;/p&gt;</description>
    </item>
    <item>
      <title>WCF – NHibernate Unit Of Work Endpoint Behavior</title>
      <link>https://bloghugo.iannelson.uk/wcf-nhibernate-unit-of-work-endpoint-behavior/</link>
      <pubDate>Fri, 09 Apr 2010 13:04:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/wcf-nhibernate-unit-of-work-endpoint-behavior/</guid>
      <description>&lt;p&gt;OK, my last WCF-related code snippet of the day, I promise. This is quite similar to the last one. I required that the WCF service I was developing started a new NHibernate Session for each invocation, and closed it after invocation (i.e. session-per-request). I couldn’t rely on the ASP.NET session start and end events in global.asax as this particular WCF service was to respond to MSMQ messages rather than HTTP.&lt;/p&gt;</description>
    </item>
    <item>
      <title>An MVC Gotcha and the PRG Pattern</title>
      <link>https://bloghugo.iannelson.uk/an-mvc-gotcha-and-the-prg-pattern/</link>
      <pubDate>Fri, 09 Apr 2010 10:04:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/an-mvc-gotcha-and-the-prg-pattern/</guid>
      <description>&lt;p&gt;If you’ve recently moved across to ASP.NET MVC development following years of wrangling with the leaky abstraction that was WebForms, you may have encountered some seemingly curious behaviour when posting back to the same URL.&lt;/p&gt;
&lt;p&gt;Suppose we have the following simple, contrived and utterly imagination-free model:&lt;/p&gt;
&lt;p&gt;Here’s a view:&lt;/p&gt;
&lt;p&gt;And here’s the controller:&lt;/p&gt;
&lt;p&gt;Note that we have two separate Index actions – one for HTTP GET which instantiates and displays a new FooModel instance, and one for HTTP POST which modifies one of the properties on the posted FooModel instance before re-rendering the view.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MoreLINQ – IEnumerable Extension From Jon Skeet</title>
      <link>https://bloghugo.iannelson.uk/morelinq-ienumerable-extension-from-jon-skeet/</link>
      <pubDate>Tue, 30 Mar 2010 10:03:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/morelinq-ienumerable-extension-from-jon-skeet/</guid>
      <description>&lt;p&gt;I’ve just become aware of this &lt;a href=&#34;http://code.google.com/p/morelinq/&#34;&gt;MoreLINQ&lt;/a&gt; project containing some neat IEnumerable extensions authored by the inimitable &lt;a href=&#34;http://stackoverflow.com/users/22656/jon-skeet&#34;&gt;Jon Skeet&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I particularly like the look of &lt;a href=&#34;http://code.google.com/p/morelinq/source/browse/trunk/MoreLinq/DistinctBy.cs&#34;&gt;DistinctBy&lt;/a&gt; – that’s gotta be a lot easier than passing custom instances of IEqualityComparer into Distinct().&lt;/p&gt;
&lt;p&gt;Fun fact – I used to work with someone who went to school with Jon Skeet! True Story!&lt;/p&gt;</description>
    </item>
    <item>
      <title>On the Inherent Negativity of Computer Programmers</title>
      <link>https://bloghugo.iannelson.uk/on-the-inherent-negativity-of-computer-programmers/</link>
      <pubDate>Mon, 01 Feb 2010 20:02:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/on-the-inherent-negativity-of-computer-programmers/</guid>
      <description>&lt;p&gt;A couple of weeks ago, early one morning, my friend and fellow coder Scott asked a curious question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Do you think that programming computers for a living gives you a negative outlook on life?”&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Now, Scott is unfortunately responsible for administering occasional TLC to a codebase that I cut as long ago as 2004, so I assumed he was referring to this and was about to raise some complaints about my hand-rolled query object criteria framework or other coding horror. I steeled myself to defend my work as he continued to explain:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deduplication Fail</title>
      <link>https://bloghugo.iannelson.uk/deduplication-fail/</link>
      <pubDate>Wed, 02 Dec 2009 12:12:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/deduplication-fail/</guid>
      <description>&lt;p&gt;Oh, the irony!&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Circuit Breaker Which Trips On Frequency Of Failures</title>
      <link>https://bloghugo.iannelson.uk/a-circuit-breaker-which-trips-on-frequency-of-failures/</link>
      <pubDate>Wed, 28 Oct 2009 11:10:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/a-circuit-breaker-which-trips-on-frequency-of-failures/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://twitter.com/jeremypearson&#34;&gt;@Jez&lt;/a&gt; &lt;a href=&#34;http://twitter.com/jeremypearson/statuses/5186129382&#34;&gt;tweeted&lt;/a&gt; last night:&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Funny, but not true. I am enamoured with the &lt;a href=&#34;http://www.castleproject.org/container/index.html&#34;&gt;Castle Windsor&lt;/a&gt; project because its power makes it fairly simple for me to develop loosely-coupled systems which are easily maintained and tested. The wide range of Facilities and Contrib projects also integrate nicely with the other parts of my current development stack (NHibernate, WCF, WF, log4net).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Castle Windsor Array Resolution Gotcha</title>
      <link>https://bloghugo.iannelson.uk/castle-windsor-array-resolution-gotcha/</link>
      <pubDate>Mon, 26 Oct 2009 10:10:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/castle-windsor-array-resolution-gotcha/</guid>
      <description>&lt;p&gt;The shiny new system which I’ve recently been developing makes heavy use of the Chain of Responsibility pattern, and as such a number of service classes take an array of objects in the constructor:&lt;/p&gt;
&lt;p&gt;I’m using Castle Windsor for dependency management, so I’ve been fluently registering all instances of ILeadAllocator:&lt;/p&gt;
&lt;p&gt;Easy, right? And yet at runtime Windsor surprised me by throwing this exception in my face:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Castle.MicroKernel.Handlers.HandlerException: Can’t create component ‘Marshalls.Leads.ApplicationService.LeadAllocationService’ as it has dependencies to be satisfied.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Castle Windsor Lifestyle Gotcha</title>
      <link>https://bloghugo.iannelson.uk/castle-windsor-lifestyle-gotcha/</link>
      <pubDate>Mon, 19 Oct 2009 05:10:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/castle-windsor-lifestyle-gotcha/</guid>
      <description>&lt;p&gt;I always knew my lifestyle choices would come back to bite me some day…&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;I’ve been making heavy use of the &lt;a href=&#34;http://www.castleproject.org/container/index.html&#34;&gt;Castle Windsor&lt;/a&gt; container to handle dependency and configuration management in the shiny new system that I’m currently developing. For the most part it’s been an absolute blast, allowing me to easily create a loosely-coupled system architecture and focus my efforts on what the system should be achieving for the client, rather than worrying about how it all hangs together.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL 2008 – Missing Indexes Hints</title>
      <link>https://bloghugo.iannelson.uk/sql-2008-missing-indexes-hints/</link>
      <pubDate>Thu, 11 Jun 2009 12:06:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/sql-2008-missing-indexes-hints/</guid>
      <description>&lt;p&gt;Improvements to the Execution Plan UI in SQL Server Management Studio 2008 sure do make it a doddle to improve query execution time.&lt;/p&gt;
&lt;p&gt;A client just reported that a particular stored procedure kept timing out.&lt;/p&gt;
&lt;p&gt;Viewing the Estimated Execution Plan for this query displayed a nice green message advising of a potentially missing index which could improve performance by &amp;gt;95%:&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Agile Yorkshire @ The Pub – Gojko Adzic, 10th June 2009</title>
      <link>https://bloghugo.iannelson.uk/agile-yorkshire-the-pub-gojko-adzic-10th-june-2009/</link>
      <pubDate>Fri, 05 Jun 2009 08:06:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/agile-yorkshire-the-pub-gojko-adzic-10th-june-2009/</guid>
      <description>&lt;p&gt;If you’re in the Leeds area next Wednesday, why not come along to this Agile Yorkshire session?&lt;/p&gt;
&lt;blockquote&gt;
&lt;h3 id=&#34;10th-june-8211-gojko-adzic-slim-the-future-of-fitnesse&#34;&gt;10th June – Gojko Adzic: Slim, The Future Of FitNesse&lt;/h3&gt;
&lt;h4 id=&#34;details&#34;&gt;Details&lt;/h4&gt;
&lt;p&gt;This talk will introduce Slim, the most important upgrade to &lt;a href=&#34;http://fitnesse.org/&#34;&gt;FitNesse&lt;/a&gt; in years. Slim is the new test runner which promises to bring platform interoperability, easier integration, a much simpler programming model and lots of small helpers that will allow us to write and maintain executable specifications and acceptance tests easier. This is a session for .NET and Java developers. Some prior exposure to FitNesse and FIT would be beneficial, but not required.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NHProf – NHibernate Profiler</title>
      <link>https://bloghugo.iannelson.uk/nhprof-nhibernate-profiler/</link>
      <pubDate>Tue, 19 May 2009 17:05:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/nhprof-nhibernate-profiler/</guid>
      <description>&lt;p&gt;The inimitable &lt;a href=&#34;http://www.ayende.com&#34;&gt;Ayende Rahien&lt;/a&gt; is close to releasing version 1.0 of his &lt;a href=&#34;http://www.nhprof.com&#34;&gt;NHibernate Profiler&lt;/a&gt; tool, and it really is shaping up to be a rather lovely little addition to my developer toolbox.&lt;/p&gt;
&lt;p&gt;In much the same way that we can use &lt;a href=&#34;http://msdn.microsoft.com/en-us/library/ms181091.aspx&#34;&gt;SQL Server Profiler&lt;/a&gt; to monitor database activity, and &lt;a href=&#34;http://www.red-gate.com/products/ants_performance_profiler/&#34;&gt;ANTS Profiler&lt;/a&gt; to monitor the performance and memory usage of .NET applications, NHProf profiles the activity of the data access layer (&lt;a href=&#34;http://nhforge.org&#34;&gt;NHibernate&lt;/a&gt;), and even goes as far as providing helpful hints for potential improvements.&lt;/p&gt;</description>
    </item>
    <item>
      <title>TFS: Using Alternative Diff/Merge Tools</title>
      <link>https://bloghugo.iannelson.uk/tfs-alternative-diff-merge-tools/</link>
      <pubDate>Tue, 19 May 2009 07:05:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/tfs-alternative-diff-merge-tools/</guid>
      <description>&lt;p&gt;There are many things I love about Team Foundation Server, but the supplied diff/merge tool is not one of them. It is – how can I put this? – somewhat basic. Indeed, I’ve heard tell of people going out of their way to avoid merges purely because they find the process so clunky.&lt;/p&gt;
&lt;p&gt;Here’s the good news – you can easily configure TFS to use a different, third-party, diff/merge tool, perhaps the one you’ve grown to know and love over many years of happy software development using other SCM products. Maybe you like &lt;a href=&#34;http://winmerge.org/&#34;&gt;WinMerge&lt;/a&gt;, or love &lt;a href=&#34;http://tortoisesvn.tigris.org/TortoiseMerge.html&#34;&gt;TortoiseMerge&lt;/a&gt;. Perhaps you’re like my friend &lt;a href=&#34;http://www.johnsadventures.com&#34;&gt;John&lt;/a&gt; and swear by &lt;a href=&#34;http://www.sourcegear.com/diffmerge/downloads.html&#34;&gt;SourceGear DiffMerge&lt;/a&gt;. Or maybe, like me, you’re a &lt;a href=&#34;http://www.scootersoftware.com/&#34;&gt;Beyond Compare&lt;/a&gt; fanboy. No problem, they can all be used by TFS. Here’s how:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Agile Yorkshire @ The Pub – Exploratory Testing, May 13th</title>
      <link>https://bloghugo.iannelson.uk/agile-yorkshire-the-pub-exploratory-testing-may-13th/</link>
      <pubDate>Thu, 07 May 2009 11:05:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/agile-yorkshire-the-pub-exploratory-testing-may-13th/</guid>
      <description>&lt;p&gt;If I can get a pass out from helping to look after the burgeoning Nelson family for an evening, I’ll be going along to this Agile Yorkshire session next Wednesday.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;may-13th-ralph-williams-exploratory-testing&#34;&gt;May 13th – Ralph Williams: Exploratory Testing&lt;/h3&gt;
&lt;h4 id=&#34;details&#34;&gt;&lt;strong&gt;Details&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;In this session, Ralph will provide an overview of some techniques that bring Agility into the world of testing. (The world of testing is a strange place: regarded by most people as a nice place to visit but you wouldn’t want to live there, it is an unmapped wilderness where the waterfall methodology still roams unfettered.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Alt.Net UK In The North</title>
      <link>https://bloghugo.iannelson.uk/alt-net-uk-in-the-north/</link>
      <pubDate>Sun, 19 Apr 2009 20:04:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/alt-net-uk-in-the-north/</guid>
      <description>&lt;p&gt;I spent much of this weekend over in Bradford, talking shop with the good folks at the Alt.Net UK ‘in the North’ conference. I had a great time, learned much, and am grateful to &lt;a href=&#34;http://blogs.blackmarble.co.uk/blogs/rfennell/&#34;&gt;Richard Fennell&lt;/a&gt; of &lt;a href=&#34;http://www.blackmarble.co.uk/&#34;&gt;Black Marble&lt;/a&gt; and the other organisers and sponsors for making the event possible.&lt;/p&gt;
&lt;p&gt;This was the first &lt;a href=&#34;https://en.wikipedia.org/wiki/Open_Space_Technology&#34;&gt;Open Spaces&lt;/a&gt; event I’ve attended, and I was pleasantly surprised at how orderly and productive the sessions turned out to be. Unlike conventional sales-pitch conferences of the MSDN roadshow variety, this was more of an open forum, with an expectation that all of the relatively small number (25ish?) of participants would, well, &lt;em&gt;participate&lt;/em&gt;!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Seeking Kindred Spirits</title>
      <link>https://bloghugo.iannelson.uk/seeking-kindred-spirits/</link>
      <pubDate>Sun, 12 Apr 2009 14:04:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/seeking-kindred-spirits/</guid>
      <description>&lt;p&gt;I’m coming round to the realization that my hugely enjoyable first contract at &lt;a href=&#34;http://www.ventura.co.uk&#34;&gt;Ventura&lt;/a&gt; last summer might have been something of an anomaly. That project was decidedly agile, test-driven, and used a bunch of modern technologies including Monorail, ExtJS, Subversion, NUnit and NHibernate. The requirements were well-defined, and the team was highly effective, with a pragmatic project management team who kept the development team free from bureaucratic processes, leaving us able to get on with delivering some cracking software in double-quick time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Failed MCP Exam 70-553 :(</title>
      <link>https://bloghugo.iannelson.uk/failed-mcp-exam-70-553/</link>
      <pubDate>Sun, 12 Apr 2009 13:04:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/failed-mcp-exam-70-553/</guid>
      <description>&lt;p&gt;My current primary client has an annoying habit of closing for random days and half-days, including last Thursday afternoon. I decided to try to make the most of this time off, by taking &lt;a href=&#34;http://www.microsoft.com/learning/en/us/exams/70-553.mspx&#34;&gt;Microsoft exam 70-553&lt;/a&gt;, which has the snappy title “&lt;em&gt;UPGRADE: MCSD Microsoft .NET Skills to MCPD Enterprise Application Developer by Using the Microsoft .NET Framework: Part 1&lt;/em&gt;”. I’ve already passed the second part of the upgrade process (70-554), so passing this exam would give me no fewer than four new certifications, including the prestigious MCPD Enterprise Application Developer.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ASP.NET Just Became a Legacy Platform</title>
      <link>https://bloghugo.iannelson.uk/asp-net-just-became-a-legacy-platform/</link>
      <pubDate>Sun, 22 Mar 2009 21:03:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/asp-net-just-became-a-legacy-platform/</guid>
      <description>&lt;p&gt;One of the least surprising but more significant announcements to come out of &lt;a href=&#34;http://live.visitmix.com/&#34;&gt;Mix ‘09&lt;/a&gt; last week was the general availability of &lt;a href=&#34;http://www.asp.net/mvc/&#34;&gt;ASP.NET MVC 1.0&lt;/a&gt;. The development process for this framework has been very transparent, with no fewer than eight previews, betas and release candidates made available over the past year or so.&lt;/p&gt;
&lt;p&gt;Microsoft are being careful to tout ASP.NET MVC as being “an alternative, not a replacement, for ASP.NET Web Forms”, but just look at their list of some of its benefits:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zero Interest Bug Arrives</title>
      <link>https://bloghugo.iannelson.uk/zero-interest-bug-arrives/</link>
      <pubDate>Thu, 05 Feb 2009 15:02:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/zero-interest-bug-arrives/</guid>
      <description>&lt;p&gt;So, base rates are now down to 1.0%, and the &lt;a href=&#34;https://blog.iannelson.uk/zero-interest-bug/&#34;&gt;Zero Interest Bug&lt;/a&gt; is not just conjecture.&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;http://www.timesonline.co.uk/tol/money/property_and_mortgages/article5668432.ece&#34;&gt;The Times&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;“About 1,500 customers who took out a tracker mortgages pegged at 1.01 points below the base rate with Cheltenham &amp;amp; Gloucester (C&amp;amp;G), owned by Lloyds Banking Group, will be paying no interest at all on their home loans from next month.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;It is the first time that a mortgage lender has been forced to reduce the interest on their home loans to zero.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>NDepend</title>
      <link>https://bloghugo.iannelson.uk/ndepend/</link>
      <pubDate>Wed, 04 Feb 2009 15:02:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/ndepend/</guid>
      <description>&lt;p&gt;OK, dear readers, today I’d like to talk about tools.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Software development isn’t really so different from traditional skilled crafts in that it is important to have an understanding of the tools available to help you create a quality products in the least amount of time possible.&lt;/p&gt;
&lt;p&gt;For .NET developers, the Visual Studio IDE is usually just the starting point, and most of us will come to rely on some of the tools listed in Scott Hanselman’s famous &lt;a href=&#34;http://www.hanselman.com/tools&#34;&gt;tools list&lt;/a&gt;. Personally, I can’t imagine coding without first installing &lt;a href=&#34;http://www.devexpress.com/refactor&#34;&gt;Refactor Pro&lt;/a&gt;, editing text files in anything other than &lt;a href=&#34;http://www.textpad.com&#34;&gt;TextPad&lt;/a&gt;, or working on a machine that doesn’t have &lt;a href=&#34;https://blog.iannelson.uk/snagit/&#34;&gt;Snag It&lt;/a&gt; installed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>.NET Coding Standards</title>
      <link>https://bloghugo.iannelson.uk/net-coding-standards/</link>
      <pubDate>Fri, 23 Jan 2009 15:01:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/net-coding-standards/</guid>
      <description>&lt;p&gt;Sometimes, when you join a new team as a .NET developer, the team lead proudly points you in the direction of a Word document or wiki page detailing the team’s house coding standards.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;In my experience, these documents are invariably:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Incomplete.&lt;/li&gt;
&lt;li&gt;Subjective.&lt;/li&gt;
&lt;li&gt;Not enforced.&lt;/li&gt;
&lt;li&gt;Largely copied from the interweb.&lt;/li&gt;
&lt;li&gt;Obsessed with the trivial (e.g. whitespace) while failing to mention the genuinely useful (e.g. boxing/unboxing, avoiding use of deprecated classes, Dispose pattern, etc).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I know this because I’ve been involved in creating such documents in the past 🙂&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL Server Point-in-Time Restore</title>
      <link>https://bloghugo.iannelson.uk/sql-server-point-in-time-restore/</link>
      <pubDate>Fri, 23 Jan 2009 14:01:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/sql-server-point-in-time-restore/</guid>
      <description>&lt;p&gt;One of the multiple hats that I’m currently wearing for a client is that of SQL Server DBA. In this guise, I have recently fielded a couple of email queries from users concerned about the data recovery options available to them, should application data be inadvertently deleted:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“What kind of database backup and restore mechanism is in place for [application]? If someone deletes any data from [application] front end is it possible to restore it? Generally the way to recover data would be to restore the database from a database backup file, however this would restore all data held in the backup and would overwrite any changes made since the time of the backup.”&lt;/p&gt;</description>
    </item>
    <item>
      <title>On 64-bit TFS, Virtualization, and Conchango SCRUM</title>
      <link>https://bloghugo.iannelson.uk/on-64-bit-tfs-virtualization-and-conchango-scrum/</link>
      <pubDate>Fri, 23 Jan 2009 12:01:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/on-64-bit-tfs-virtualization-and-conchango-scrum/</guid>
      <description>&lt;p&gt;Earlier this week I picked up a hire car and headed over to deepest Cheshire to install an instance of Team Foundation Server 2008 for a client. Before setting off, I tried to make sure that all the prerequisites were in place – i.e. that there was a suitably-specced server available for use, which was connected to the domain, that all the necessary service accounts were created, and firewall ports opened, etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Zero Interest Bug</title>
      <link>https://bloghugo.iannelson.uk/zero-interest-bug/</link>
      <pubDate>Fri, 19 Dec 2008 12:12:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/zero-interest-bug/</guid>
      <description>&lt;p&gt;I started my career in professional software development a decade or so ago by testing and fixing banking code that had fallen victim to the millennium bug.&lt;/p&gt;
&lt;p&gt;Could the prospect of zero percent interest rates create a similar boom in demand for software developers?&lt;/p&gt;
&lt;p&gt;From &lt;a href=&#34;http://www.contractoruk.com/004128.html&#34;&gt;Contractor UK&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Interest rates have plummeted from 5% to 2% since early October and are heading lower. Some analysts say 0% is not out of the question.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MSB3247 – Dependent Assembly Conflicts</title>
      <link>https://bloghugo.iannelson.uk/msb3247-dependent-assembly-conflicts/</link>
      <pubDate>Thu, 04 Dec 2008 21:12:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/msb3247-dependent-assembly-conflicts/</guid>
      <description>&lt;p&gt;Earlier today a dev came over to ask me about a compiler warning he was getting when building a .NET solution:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MSB3247: Found conflicts between different versions of the same dependent assembly.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;This is basically telling you that one project or dependency in your solution is referencing one version of an assembly, whilst another project or dependency is trying to reference a different version of the same assembly. Unhelpfully, the message and build output don’t tell you &lt;em&gt;which&lt;/em&gt; dependent assembly is causing the problem!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Performance of Loops on Collections</title>
      <link>https://bloghugo.iannelson.uk/performance-of-loops-on-collections/</link>
      <pubDate>Fri, 28 Nov 2008 12:11:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/performance-of-loops-on-collections/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://codebetter.com/blogs/patricksmacchia/archive/2008/11/19/an-easy-and-efficient-way-to-improve-net-code-performances.aspx&#34;&gt;Interesting article&lt;/a&gt; from &lt;a href=&#34;http://codebetter.com/blogs/patricksmacchia&#34;&gt;Patrick Smacchia&lt;/a&gt; (the &lt;a href=&#34;http://www.ndepend.com&#34;&gt;NDepend&lt;/a&gt; guy) in which he runs some benchmarks on the cost of looping in different ways over different constructs and comes to the conclusion that:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“looping on array using for is &lt;strong&gt;5 times cheaper&lt;/strong&gt; than looping on List&lt;!-- raw HTML omitted --&gt; using foreach (which I believe, is what we all do)”&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Well worth a read, although I suspect that in my solutions the bottlenecks will remain the out-of-process calls, i.e. database access and web service calls. Still, a 5x gain is not to be sniffed at.&lt;/p&gt;</description>
    </item>
    <item>
      <title>12 Reasons Why I Love Unit Tests</title>
      <link>https://bloghugo.iannelson.uk/12-reasons-why-i-love-unit-tests/</link>
      <pubDate>Tue, 11 Nov 2008 22:11:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/12-reasons-why-i-love-unit-tests/</guid>
      <description>&lt;p&gt;On my continuing journey through this thrilling world of professional software development, I frequently encounter teams who hold no truck with this crazy new-fangled concept of unit testing. Heck, truth be told, I sometimes come across teams who don’t use &lt;em&gt;source control&lt;/em&gt;, but that’s by the bye.&lt;/p&gt;
&lt;p&gt;In these situations, I try my best to lead by example, continuing to practise TDD on any new code that I cut, and insisting on covering with unit tests any pre-existing code which I have to modify. Sooner or later, this prompts someone to ask why I am doing this (often insinuating that I am wasting my time, and by implication the client’s money). At that point, flustered, I invariably struggle to remember or adequately articulate the many and various ways in which unit testing makes me a better developer. So, consider this blog post a personal aide-mémoire to help me the next time this occurs (as well as being a homage to &lt;a href=&#34;http://uk.youtube.com/watch?v=DW1AHrTNBao&#34;&gt;Jake Shillingford’s second-best song&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Keyboard Makes A Hell Of A Difference</title>
      <link>https://bloghugo.iannelson.uk/a-keyboard-makes-a-hell-of-a-difference/</link>
      <pubDate>Fri, 01 Aug 2008 16:08:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/a-keyboard-makes-a-hell-of-a-difference/</guid>
      <description>&lt;p&gt;It occurred to me recently that I’m not getting any younger, and that sitting hunched over a keyboard for a dozen hours a day will probably lead to some form of RSI sooner or later. So I started looking for ways to improve my daily working environment.&lt;/p&gt;
&lt;p&gt;Unlike &lt;a href=&#34;http://www.johnsadventures.com/archives/2008/05/a-chair-makes-a-hell-of-a-difference.html&#34;&gt;John&lt;/a&gt;, I can’t afford a Herman Miller chair, and even if I could, I’m a freelancer rather than a telecommuter* so I would have to regularly carry the chair on the train to client sites, where they would probably ostracise me for being a weirdo who brings his own chair to the office. So I looked for something a little more portable, and decided that perhaps it was finally time for me to try one of those fancy split ergonomic keyboards that I’ve always scoffed at. After reading a few review on Amazon, I plumped for the &lt;a href=&#34;http://amzn.to/RPdDlW&#34;&gt;Microsoft Natural Ergonomic Keyboard 4000&lt;/a&gt;.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Database Design – Still Important In These ORM-Obsessed Days</title>
      <link>https://bloghugo.iannelson.uk/database-design-still-important-in-these-orm-obsessed-days/</link>
      <pubDate>Tue, 29 Jul 2008 16:07:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/database-design-still-important-in-these-orm-obsessed-days/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://www.tobinharris.com/2008/7/28/is-or-m-is-encouraging-db-normalization&#34;&gt;Tobin blogged earlier this week&lt;/a&gt; about how quality ORM tools like NHibernate make it easier to code to normalized schemas.&lt;/p&gt;
&lt;p&gt;Here’s a corollary for you: The use of ORM tools doesn’t absolve the need to maintain good database design principles, and even NHibernate won’t save you from your own stupidity.&lt;/p&gt;
&lt;p&gt;Following an application upgrade release last night, I’ve spent a disproportionate amount of today trying to debug the following exception, which appeared to originate in an area of the codebase which I personally had heavily modified:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Remember The Milk</title>
      <link>https://bloghugo.iannelson.uk/remember-the-milk/</link>
      <pubDate>Thu, 26 Jun 2008 06:06:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/remember-the-milk/</guid>
      <description>&lt;p&gt;In response to &lt;a href=&#34;http://blog.rememberthemilk.com/2008/05/guest-post-advanced-gtd-with-remember.html&#34;&gt;a blog post&lt;/a&gt; that I’d shared in Google Reader, &lt;a href=&#34;http://jpg1723.blogspot.com/&#34;&gt;Jez&lt;/a&gt; emailed me to ask:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;“Do you use &lt;a href=&#34;http://www.rememberthemilk.com&#34;&gt;RTM&lt;/a&gt;? It’s always been one of those web apps that seem really useful, but I’ve never made the leap to actually using it in anger. I suppose you need to adopt it in tandem with the five-point &lt;a href=&#34;http://en.wikipedia.org/wiki/Getting_Things_Done&#34;&gt;GTD&lt;/a&gt; philosophy to get real benefit?”&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;My response:&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;“Yes, I do use RTM, and I love it. I’ve been looking for a decent way of managing my to-do lists effectively for years, and RTM really scratches that itch! I now have the web app permanently open in a Firefox tab, and use “MilkSync” to synchronize with my Pocket PC every half hour.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>On the Joys of Object-Relational Mapping</title>
      <link>https://bloghugo.iannelson.uk/on-the-joys-of-object-relational-mapping/</link>
      <pubDate>Wed, 09 Apr 2008 19:04:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/on-the-joys-of-object-relational-mapping/</guid>
      <description>&lt;p&gt;My name is Ian Nelson. I’m a recovering &lt;!-- raw HTML omitted --&gt;SQL&lt;!-- raw HTML omitted --&gt; addict. It’s been four weeks since my last stored procedure.&lt;/p&gt;
&lt;p&gt;One of my reasons for &lt;a href=&#34;https://blog.iannelson.uk/going-for-it/&#34;&gt;leaving my cosy permanent job and entering the scary cut-throat world of freelancing&lt;/a&gt; was to get a broader exposure to different tools, technologies and methodologies, while remaining with my feet planted firmly in the .NET universe. So, when I got offered a position in a team who were using &lt;a href=&#34;http://subversion.tigris.org/&#34;&gt;Subversion&lt;/a&gt;, &lt;a href=&#34;http://www.castleproject.org/MonoRail/&#34;&gt;Monorail&lt;/a&gt;, &lt;a href=&#34;http://extjs.com/&#34;&gt;Ext.JS&lt;/a&gt;, &lt;a href=&#34;http://www.nunit.org&#34;&gt;NUnit&lt;/a&gt;, &lt;a href=&#34;http://www.oracle.com/database/index.html&#34;&gt;Oracle&lt;/a&gt; and &lt;a href=&#34;http://www.nhibernate.org&#34;&gt;NHibernate&lt;/a&gt;, I jumped at the opportunity.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Inside Microsoft SQL Server 2005: The Storage Engine</title>
      <link>https://bloghugo.iannelson.uk/inside-microsoft-sql-server-2005-the-storage-engine/</link>
      <pubDate>Sat, 05 Jan 2008 21:01:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/inside-microsoft-sql-server-2005-the-storage-engine/</guid>
      <description>&lt;p&gt;During 2007, I unexpectedly achieved a long-held ambition by increasing the number of books I regularly read (as opposed to merely buying, then leaving them to languish on the bookcase!). I read plenty of techie books of course, but also made use of local libraries and devoured plenty of books on other subjects, and even found time for some fiction. I think having a young baby in the house was partially responsible for this achievement – not much else to do of an evening any more!&lt;/p&gt;</description>
    </item>
    <item>
      <title>A LINQ Gotcha – First Operator</title>
      <link>https://bloghugo.iannelson.uk/a-linq-gotcha-first-operator/</link>
      <pubDate>Fri, 14 Dec 2007 14:12:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/a-linq-gotcha-first-operator/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;</description>
    </item>
    <item>
      <title>Software Architect 2007</title>
      <link>https://bloghugo.iannelson.uk/software-architect-2007/</link>
      <pubDate>Sun, 17 Jun 2007 18:06:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/software-architect-2007/</guid>
      <description>&lt;p&gt;Last week I had the pleasure of spending a few days in London attending the &lt;a href=&#34;http://www.software-architect.co.uk&#34;&gt;Software Architect 2007&lt;/a&gt; conference at the Barbican centre. It was a good conference, providing me with some useful and interesting new ideas and food for thought, whilst confirming that our team at &lt;a href=&#34;http://www.marshalls.co.uk&#34;&gt;Marshalls&lt;/a&gt; are generally going about things in “the right way”, which is nice.&lt;/p&gt;
&lt;p&gt;Looking through my notes, the main themes that kept recurring within the different presentations that I attended were:&lt;/p&gt;</description>
    </item>
    <item>
      <title>A C# Postcode Struct with Parser</title>
      <link>https://bloghugo.iannelson.uk/a-c-postcode-struct-with-parser/</link>
      <pubDate>Tue, 29 May 2007 12:05:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/a-c-postcode-struct-with-parser/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;As &lt;a href=&#34;https://blog.iannelson.uk/postcode-validation/&#34;&gt;discussed recently&lt;/a&gt;, I’ve been trying to knock together a class struct to represent a UK postcode, provide a means of parsing a string as &lt;em&gt;potentially&lt;/em&gt; being a valid postcode (or optionally just an outer code), and split that postcode into “outer” and “inner” code.&lt;/p&gt;
&lt;p&gt;I say &lt;em&gt;potentially&lt;/em&gt; because, as you’ll know if you’ve looked into this topic at all, it’s impossible to validate whether a string truly does represent a postcode without querying the (copyrighted and expensive-to-license) Postcode Address File.  As a result, my solution is not very stringent – it is possible to persuade it to successfully parse an invalid postcode, but hopefully there should be no occasions when a valid postcode is rejected.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Postcode Validation</title>
      <link>https://bloghugo.iannelson.uk/postcode-validation/</link>
      <pubDate>Wed, 23 May 2007 13:05:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/postcode-validation/</guid>
      <description>&lt;p&gt;Wikipedia cracks me up sometimes. I’m sat here at my desk, trying to knock together some C# code to quickly validate an entered string as being a UK postcode. Naturally I turned to this &lt;a href=&#34;http://en.wikipedia.org/wiki/UK_postcodes&#34;&gt;Wikipedia article&lt;/a&gt; for assistance, where I find this quip:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Automatic validation of postcodes on the basis of pattern feasibility is therefore almost impossible to design, and the system contains no self-validating feature such as a check digit. &lt;strong&gt;Completely accurate validation is only possible by attempting to deliver mail to the address, and verifying with the recipient.&lt;/strong&gt;&amp;rdquo;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL 2005 Unleashed</title>
      <link>https://bloghugo.iannelson.uk/sql-2005-unleashed/</link>
      <pubDate>Fri, 18 May 2007 06:05:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/sql-2005-unleashed/</guid>
      <description>&lt;p&gt;Many moons (and about four jobs) ago, a wise DBA by the name of David Hanson once recommended to me a book called &lt;a href=&#34;http://www.amazon.co.uk/gp/product/0672324679?ie=UTF8&amp;amp;tag=ianesbl-21&amp;amp;linkCode=as2&amp;amp;camp=1634&amp;amp;creative=6738&amp;amp;creativeASIN=0672324679&#34;&gt;Microsoft SQL Server 2000 Unleashed&lt;/a&gt;. I took his advice, bought a copy, and it rapidly became one of the most dog-eared and oft-thumbed computing books I have ever owned. It is comprehensive, deep, broad, well-written and covers everything one might ever wish to know about SQL Server 2000. With its help and guidance I came to love and respect Microsoft’s premier database product, passing the &lt;a href=&#34;http://www.microsoft.com/learning/exams/70-229.mspx&#34;&gt;70-229 exam&lt;/a&gt; by a comfortable margin.&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>MSDN Technical Roadshow 2007</title>
      <link>https://bloghugo.iannelson.uk/msdn-technical-roadshow-2007/</link>
      <pubDate>Mon, 12 Mar 2007 22:03:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/msdn-technical-roadshow-2007/</guid>
      <description>&lt;p&gt;I’m off to the &lt;a href=&#34;http://www.microsoft.com/uk/techroadshow2007/msdn/default.mspx&#34;&gt;MSDN Technical roadshow&lt;/a&gt; in Harrogate tomorrow, and am actually really looking forward to it this time. These events are free, so always well worth attending when they’re local, but some years are certainly better than others – it mostly depends on the material being covered. I remember one year circa 2003-4, when .NET was well established, but before the Whidbey release, so the majority of the day was effectively just a sales pitch covering elementary .NET concepts, presumably for those laggards who hadn’t yet made the great leap from VB6. Another data-binding demo, anybody?  Yawn.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ian Nelson, MCSD.Net</title>
      <link>https://bloghugo.iannelson.uk/ian-nelson-mcsd-net/</link>
      <pubDate>Sun, 11 Feb 2007 16:02:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/ian-nelson-mcsd-net/</guid>
      <description>&lt;p&gt;I am now a Microsoft Certified Solution Developer in .NET 1.x technologies. This is a qualification that I’ve been working towards on and (more often than not) off for the past four years or so. It’s not really the case that the exams were super-hard, just that it took occasional motivation to get round to taking them!&lt;/p&gt;
&lt;p&gt;So, was it worth it?  Did I learn anything en route?  Did the exams boost my employability?  Would I be more inclined to employ someone with an MCSD than an applicant without?&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Serializable KeyValuePair Class</title>
      <link>https://bloghugo.iannelson.uk/a-serializable-keyvaluepair-class/</link>
      <pubDate>Sun, 17 Sep 2006 17:09:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/a-serializable-keyvaluepair-class/</guid>
      <description>&lt;p&gt;Having accepted that &lt;a href=&#34;http://www.hanselman.com/blog/ReturningDataSetsFromWebServicesIsTheSpawnOfSatanAndRepresentsAllThatIsTrulyEvilInTheWorld.aspx&#34;&gt;Returning DataSets from WebServices is the Spawn of Satan and Represents All That Is Truly Evil in the World&lt;/a&gt; (or at least, not exactly best practice), I’ve been trying to make a conscious effort to instead use lightweight custom objects in my middle tier, to be exposed via web services for use by other applications. I felt sure that some of the new Generic classes in the .NET 2.0 FCL would help me in my quest. Specifically, as I often need to expose simple arrays of Key/Value Pair metadata, I planned to create an instance of the  System.Collections.ObjectModel.Collection class, containing a bunch of System.Collections.Generic.KeyValuePair objects. &lt;/p&gt;</description>
    </item>
    <item>
      <title>Big Integer</title>
      <link>https://bloghugo.iannelson.uk/big-integer/</link>
      <pubDate>Mon, 17 Jul 2006 08:07:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/big-integer/</guid>
      <description>&lt;p&gt;As I mentioned &lt;a href=&#34;https://blog.iannelson.uk/project-euler/&#34;&gt;last summer&lt;/a&gt;, I do enjoy whiling away a few hours attempting to solve the maths / progamming challenges set on &lt;a href=&#34;http://mathschallenge.net/index.php?section=project&#34;&gt;Project Euler&lt;/a&gt;. My language of choice for most puzzles is C#, but this hampered me on some of the questions as there is no in-built support for really big integers.&lt;/p&gt;
&lt;p&gt;However, a little bit of Googling and I came across this excellent &lt;a href=&#34;http://www.codeproject.com/csharp/biginteger.asp&#34;&gt;BigInteger class&lt;/a&gt; on Code Project which does everything I need and more – and it seems bloody fast, too. Thanks to this class, I’ve been able to knock off several more problems this weekend, and now have a rating of “11% Genius” – still some way to go, then…&lt;/p&gt;</description>
    </item>
    <item>
      <title>Universal Comparer for .NET</title>
      <link>https://bloghugo.iannelson.uk/universal-comparer-for-net/</link>
      <pubDate>Mon, 27 Feb 2006 22:02:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/universal-comparer-for-net/</guid>
      <description>&lt;p&gt;Back in November 2004, I had the idea of making a &amp;ldquo;&lt;a href=&#34;https://blog.iannelson.uk/a-generic-sorter-for-strongly-typed-collections/&#34;&gt;Generic Sorter for Strongly-Typed Collections&lt;/a&gt;&amp;rdquo;, by harnessing the mighty power of reflection. Well, earlier this month somebody anonymously emailed me some code that takes this to a whole different level, enabling sorting on multiple properties and to arbitrary depths within the domain model hierarchy, all by taking a single SQL-like parameter. It’s really very clever indeed, and I’m going to use this method in the future – thanks, anonymous code fairy!&lt;/p&gt;</description>
    </item>
    <item>
      <title>String.IsNullOrEmpty</title>
      <link>https://bloghugo.iannelson.uk/string-isnullorempty/</link>
      <pubDate>Sat, 25 Feb 2006 14:02:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/string-isnullorempty/</guid>
      <description>&lt;p&gt;The single most popular entry on this blog is, surprisingly enough, this &lt;a href=&#34;https://blog.iannelson.uk/is-my-string-empty-some-c-performance-metrics/&#34;&gt;quick post from Summer 2004&lt;/a&gt; where I did a quick experiment to &amp;ldquo;prove&amp;rdquo; that in .NET the quickest way of proving that a string is empty is to compare its length to zero.&lt;/p&gt;
&lt;p&gt;Well, as of .NET 2.0, we have a new static method on the System.String class – &lt;code&gt;IsNullOrEmpty&lt;/code&gt; – that allows you to easily test whether a string is, well, null or empty!&lt;/p&gt;</description>
    </item>
    <item>
      <title>John&#39;s Background Switcher</title>
      <link>https://bloghugo.iannelson.uk/johns-background-switcher/</link>
      <pubDate>Sat, 10 Dec 2005 20:12:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/johns-background-switcher/</guid>
      <description>&lt;p&gt;What’s on your desktop background?  Some bland corporate logo perhaps, or maybe one of the bog-standard Windows wallpapers, or maybe a photograph you took years ago?&lt;br&gt;
Let’s face it, when was the last time you changed your background?  Wouldn’t it be great if you could specify a few keywords and have your background periodically change to show a new image courtesy of Flickr?  Say, a sunrise, a mountain, a wintry scene, a favourite holiday destination, or, well, whatever takes your fancy?&lt;/p&gt;</description>
    </item>
    <item>
      <title>ASP.NET 2.0 – one month on</title>
      <link>https://bloghugo.iannelson.uk/asp-net-2-0-one-month-on/</link>
      <pubDate>Sat, 10 Dec 2005 19:12:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/asp-net-2-0-one-month-on/</guid>
      <description>&lt;p&gt;It’s over a month now since Visual Studio 2005 officially RTM’d, and during that time I’ve been fortunate enough to have been using it for the majority of my time on most working days. One of the things we’re trying to achieve is the integration of several distinct internal corporate web applications into a bespoke portal system, with single sign-on, common authorization model, common look and feel, etc. There’s been quite a heavy R&amp;amp;D / proof-of-concept aspect to the workload so far, as we try out different ways of achieving this, and grow familiar with the new technologies available to us in ASP.NET 2.0.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Rounding Up The Result of Integer Division</title>
      <link>https://bloghugo.iannelson.uk/rounding-up-the-result-of-integer-division/</link>
      <pubDate>Tue, 06 Sep 2005 11:09:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/rounding-up-the-result-of-integer-division/</guid>
      <description>&lt;p&gt;Here’s a damn useful piece of information which should be in the armoury of every modern codemonkey:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I’ve used this deliciously elegant result in production J2EE code in the past, but it’s equally valid in C#, &lt;em&gt;as long as you can make the additional assertion that m/n is positive&lt;/em&gt;. This is because whilst Java treats integer division by rounding to zero, &lt;a href=&#34;http://msdn2.microsoft.com/library/6a71f45d%28en-us,vs.80%29.aspx&#34;&gt;C# merely truncates the result&lt;/a&gt; (in an unchecked context). In my experience, the most frequentuse for this result is the deft answering of questions such as “if I have x items in my dataset and I display y per page, how many pages do I have in total?”, where it is obviously safe to make the assertion of a positive result.&lt;/p&gt;</description>
    </item>
    <item>
      <title>10 Things That Should Be More Popular</title>
      <link>https://bloghugo.iannelson.uk/10-things-that-should-be-more-popular/</link>
      <pubDate>Wed, 31 Aug 2005 09:08:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/10-things-that-should-be-more-popular/</guid>
      <description>&lt;p&gt;Some days I feel like I’m spitting in the wind. It amazes me that the following ten concepts, websites and applications aren’t more widely used:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Web_feed&#34;&gt;RSS Feeds&lt;/a&gt; – why waste your time repeatedly trawling dozens of sites looking for new content?  Let it come to you!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.flickr.com/&#34;&gt;Flickr&lt;/a&gt; – practically everyone I know has a digital camera, but still relatively few have a Flickr account. Share your photos, don’t keep them unseen on your hard drive!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.gmail.com&#34;&gt;GMail&lt;/a&gt; – by far the most effective web-based email.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mozilla.com/firefox&#34;&gt;FireFox&lt;/a&gt; – if only for the tabbed browsing. But really, it’s so much nicer than IE6, and a myriad of different extensions are available.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://microsoft.com/office/onenote&#34;&gt;OneNote&lt;/a&gt; – so much better than scraps of paper.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://en.wikipedia.org/wiki/Desktop_search&#34;&gt;Desktop Search&lt;/a&gt; – I don’t care &lt;a href=&#34;http://desktop.google.com/&#34;&gt;which&lt;/a&gt; &lt;a href=&#34;http://www.copernic.com/en/products/desktop-search/&#34;&gt;desktop&lt;/a&gt; &lt;a href=&#34;http://www.microsoft.com/windows/desktopsearch/&#34;&gt;search&lt;/a&gt; &lt;a href=&#34;http://desktop.yahoo.com/&#34;&gt;program&lt;/a&gt; you use, but please install one!  You’ll find it so much easier to find old emails and other files.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://del.icio.us&#34;&gt;del.icio.us&lt;/a&gt; – access your bookmarks anywhere, and share them with friends.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microsoft.com/typography/ClearTypeInfo.mspx&#34;&gt;ClearType&lt;/a&gt; – if you have a flatscreen monitor, you should turn ClearType on. Period.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microsoft.com/windows/virtualpc/default.mspx&#34;&gt;Virtual PC&lt;/a&gt; – there’s no need to test beta software on your main machine, or keep several differently-configured computers around the house any more!&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.microsoft.com/windowsxp/using/digitalphotography/prophoto/synctoy.mspx&#34;&gt;SyncToy&lt;/a&gt; – this is a great little app for synchronizing and backing-up folders; it’s really useful for combining media folders, and for synching files with a portable hard drive.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    <item>
      <title>Computer Games I Have Loved</title>
      <link>https://bloghugo.iannelson.uk/computer-games-i-have-loved/</link>
      <pubDate>Mon, 22 Aug 2005 21:08:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/computer-games-i-have-loved/</guid>
      <description>&lt;p&gt;Isn’t it funny how one’s tastes change as maturity progresses?  I used to spend my summer holidays at the sea-side, playing in arcades and seeking the perfect milkshake (&lt;a href=&#34;http://www.snackspot.org.uk/thread.php?story=0408101147daa&#34;&gt;lime&lt;/a&gt;); more recently I’ve been spending them in the highlands, playing on the hills and seeking the perfect dram (&lt;a href=&#34;http://www.scotchwhisky.com/focus/lagavulin.htm&#34;&gt;lagavulin&lt;/a&gt;).  Hmmm…&lt;/p&gt;
&lt;p&gt;I think I may have mentioned that the wife is away in the States for a while.  At the start of this period of solitude, I panicked, wondering whatever I could do with myself, and came to the conclusion that it would be a good idea to buy a computer game to while away the hours.  After all, I spent much of my formative years killing time on a variety of computer and console games, so why not rekindle that prior love affair?  So it was that I bought &lt;a href=&#34;http://thesims2.ea.com/&#34;&gt;The Sims 2&lt;/a&gt;, a truly excellent game, and had an enjoyable evening trying to motivate my wee Sims to improve their skills, better themselves, and generally enjoy life.  All good harmless fun.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Stopwatch Class for .NET 1.1</title>
      <link>https://bloghugo.iannelson.uk/stopwatch-class-for-net-1-1/</link>
      <pubDate>Tue, 05 Jul 2005 09:07:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/stopwatch-class-for-net-1-1/</guid>
      <description>&lt;p&gt;Paul Welter has backported the System.Diagnostics.Stopwatch class from .NET 2.0 to 1.1. Handy.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://weblogs.asp.net/pwelter34/archive/2005/07/01/416999.aspx&#34;&gt;http://weblogs.asp.net/pwelter34/archive/2005/07/01/416999.aspx&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>New Recommendations for String Comparisons in .NET 2.0</title>
      <link>https://bloghugo.iannelson.uk/new-recommendations-for-string-comparisons-in-net-2-0/</link>
      <pubDate>Mon, 04 Jul 2005 19:07:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/new-recommendations-for-string-comparisons-in-net-2-0/</guid>
      <description>&lt;p&gt;I know it’s a rather geeky and dry subject, but I found &lt;a href=&#34;http://msdn.microsoft.com/netframework/default.aspx?pull=/library/en-us/dndotnet/html/StringsinNET20.asp&#34;&gt;this MSDN article on new recommendations for using strings in .NET 2.0&lt;/a&gt; quite interesting. It’s going to be difficult to stop using CultureInfo.InvariantCulture habitually!&lt;/p&gt;</description>
    </item>
    <item>
      <title>eXtreme .NET</title>
      <link>https://bloghugo.iannelson.uk/extreme-net/</link>
      <pubDate>Sat, 18 Jun 2005 21:06:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/extreme-net/</guid>
      <description>&lt;p&gt;Up at 0500 yesterday and onto the early GNER Mallard down to that London town for the MSDN briefing on eXtreme programming with .NET. It was pleasant not to be driving for a change, and speeding through the Yorkshire countryside early on a midsummer morning was very relaxing – what a stark contrast with the hot crowded tube that I had to catch on arrival to the big smoke. Three stops down to Oxford Circus seemed to last as long as the entire preceeding train journey. How people do this every single day I do not know..&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tech Books</title>
      <link>https://bloghugo.iannelson.uk/tech-books/</link>
      <pubDate>Sat, 18 Jun 2005 21:06:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/tech-books/</guid>
      <description>&lt;p&gt;I succumbed to temptation and bought another book at the MSDN briefing yesterday, pausing only out of concern that the guy who mans the &lt;a href=&#34;http://www.computermanuals.co.uk&#34;&gt;Computer Manuals&lt;/a&gt; stand at these events might think that I’m stalking him (or fancy him!). Having determined that I could hand over my Barclaycard whilst flashing my wedding ring, I brought my current reading list up to three:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://www.amazon.co.uk/exec/obidos/ASIN/078214361X&#34;&gt;Developer to Designer: GUI Design for the Busy Developer&lt;/a&gt; – this was a wedding present from my mother-in-law and is proving to be an interesting, easy-going read so far. My competencies lie in the middle tier and database, and although I’m technically capable of making GUIs, I prefer to leave the design up to others. It’s inevitable though that most coders end up doing some design, and this book is, er, designed (sorry) to help with that process. The early section of the book concentrates on each UI element in turn, whilst the later part of the book looks at putting it all together, and has particular focus on the web – layout design patterns and interaction patterns. It’s a good read, making a nice contrast from the heavier books, and I’m pleased to learn that I’m not alone in hating Outlook’s labyrinthine Tools-&amp;gt;Options dialog!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Software Development Books</title>
      <link>https://bloghugo.iannelson.uk/software-development-books/</link>
      <pubDate>Mon, 13 Jun 2005 20:06:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/software-development-books/</guid>
      <description>&lt;p&gt;Elizabeth Keogh has been blogging her &lt;a href=&#34;http://www.livejournal.com/users/sirenian/19432.html&#34;&gt;advice for software-developer apprentices&lt;/a&gt;, and recommends buying and reading a selection of good software development books. I think this is sound advice – personally I felt that my career and abilities starting taking off when I stopped reading tech-specific Wrox tomes that were obsolete within six months of publication and started buying timeless Addison-Wesley hardbacks. Why so many newbie coders insist on rediscovering solutions to well-known problems instead of leveraging the knowledge of our programming forebears is beyond me, but most of us have behaved in this way at some point. Give yourself a leg-up and read some decent software design books.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Framework for Persisting .NET Classes Into SQL Server Image Fields, With Locking Ability</title>
      <link>https://bloghugo.iannelson.uk/framework-for-persisting-net-classes-into-sql-server-image-fields-with-locking-ability/</link>
      <pubDate>Tue, 18 Jan 2005 23:01:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/framework-for-persisting-net-classes-into-sql-server-image-fields-with-locking-ability/</guid>
      <description>&lt;p&gt;There seems to have been a lack of .NET-related stuff on this blog recently, so let me show you something I cobbled together for work purposes last Wednesday:&lt;/p&gt;
&lt;p&gt;A common requirement we have in our ASP.NET applications is how to reliably persist object instances for a lengthy period of time. End users shouldn’t have to concern themselves with the concept of Session expiry, and it’s unacceptable for them to return to their PC after nipping off for a coffee to be confronted with the dreaded &amp;ldquo;Object reference not set to an instance of an object&amp;rdquo; when they try to continue editing their basket / sales order / timesheet / whatever.&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL Server Best Practices Analyser Tool</title>
      <link>https://bloghugo.iannelson.uk/sql-server-best-practices-analyser-tool/</link>
      <pubDate>Sun, 12 Dec 2004 19:12:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/sql-server-best-practices-analyser-tool/</guid>
      <description>&lt;p&gt;Via &lt;a href=&#34;http://ericgharrison.com/Blog/archive/2004/12/11/491.aspx&#34;&gt;Eric G. Harrison&lt;/a&gt; – MS have developed a &lt;a href=&#34;http://www.microsoft.com/downloads/details.aspx?FamilyId=B352EB1F-D3CA-44EE-893E-9E07339C1F22&amp;amp;displaylang=en&#34;&gt;SQL Server Best Practices Analyser Tool&lt;/a&gt;. It’s like a cross between &lt;a href=&#34;http://www.gotdotnet.com/team/fxcop/&#34;&gt;FxCop&lt;/a&gt; and &lt;a href=&#34;http://www.microsoft.com/technet/security/tools/mbsahome.mspx&#34;&gt;Baseline Security Analyser&lt;/a&gt;, for SQL Server. Very useful. I just downloaded it, ran it against some of my databases, and it made some useful suggestions. This could quickly become indispensable.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Property Access Modifiers in Whidbey</title>
      <link>https://bloghugo.iannelson.uk/property-access-modifiers-in-whidbey/</link>
      <pubDate>Mon, 15 Nov 2004 19:11:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/property-access-modifiers-in-whidbey/</guid>
      <description>&lt;p&gt;Ooh, this is great news:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://nxopinion.robertsoninstitute.org/blogs/rcecil/archive/2004/11/11/167.aspx&#34;&gt;http://nxopinion.robertsoninstitute.org/blogs/rcecil/archive/2004/11/11/167.aspx&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It’s a little thing, to be sure, but I often find myself wanting to make a setter internal or private while leaving the getter public. So, I’m happy. It doesn’t take much 🙂&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Generic Sorter For Strongly-Typed Collections</title>
      <link>https://bloghugo.iannelson.uk/a-generic-sorter-for-strongly-typed-collections/</link>
      <pubDate>Sun, 07 Nov 2004 21:11:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/a-generic-sorter-for-strongly-typed-collections/</guid>
      <description>&lt;p&gt;Late last night I was doing some development work on a website for our investment club. I had a strongly-typed collection of &amp;ldquo;Stock&amp;rdquo; objects, and wanted to be able to sort them on any parameter (StockName, SharePrice, Volume, MarketCap, etc..) in either descending or ascending order. I didn’t want to have to write a separate comparer for each property. Reflection to the rescue! Below is a GenericSorter class, the use of which allows for the development of a Sort() method on the collection taking as a parameter the name of the property on which to sort. Smart.&lt;/p&gt;</description>
    </item>
    <item>
      <title>NHibernate</title>
      <link>https://bloghugo.iannelson.uk/nhibernate/</link>
      <pubDate>Fri, 03 Sep 2004 19:09:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/nhibernate/</guid>
      <description>&lt;p&gt;There’s &lt;em&gt;so&lt;/em&gt; much good open-source .Net development going on these days – .Text, nGallery, nUnit, etc – it’s a really interesting time to be a developer. My colleague Colin just drew my attention to &lt;a href=&#34;http://sourceforge.net/projects/nhibernate&#34;&gt;nHibernate&lt;/a&gt;, an object persistence library for relational databases. &lt;a href=&#34;http://www.theserverside.net/articles/showarticle.tss?id=NHibernate&#34;&gt;TheServerSide.net&lt;/a&gt; has an excellent article summarising its use. Having just finished a long project where a large amount of time was spent writing “plumbing” code to persist objects to and from a SQL Server database, I’m finding the idea of using an O/R mapper such as this very appealing the next time round. Just as incorporating the &lt;a href=&#34;http://msdn.microsoft.com/library/default.asp?url=https://bloghugo.iannelson.uk/library/en-us/dnbda/html/daab-rm.asp&#34;&gt;MS DAAB block&lt;/a&gt; into solutions has reduced the amount of data access code required, I’m hopeful that embracing frameworks such as nHibernate will leave us with more time to spend focusing on addressing the business needs and less on re-solving technical issues.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ideal World / Real World</title>
      <link>https://bloghugo.iannelson.uk/ideal-world-real-world/</link>
      <pubDate>Wed, 01 Sep 2004 09:09:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/ideal-world-real-world/</guid>
      <description>&lt;p&gt;A major project I’ve been working on for the last ten months has just gone live, giving me some time recently to take stock, do a bit of R&amp;amp;D, and catch up on some reading. I’ve been reflecting on how to approach things better in the future, and to this end, I’ve just finished two very different books about the software development process.&lt;/p&gt;
&lt;p&gt;O’Reilly’s &lt;em&gt;&lt;a href=&#34;http://www.amazon.co.uk/exec/obidos/ASIN/0596004850&#34;&gt;Extreme Programming Pocket Guide&lt;/a&gt;&lt;/em&gt; is a handy little summary of the approach (only 81 pages), depicting a near-utopian development shop where everyone is happy, and projects come in under budget and on time. It got me quite fired up, actually, and some of the concepts described are interesting. But deep down, I just know this would never happen in the real world—too much politics, too many personalities at play in the workplace, in my humble opinion.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Is My String Empty?  Some C# Performance Metrics</title>
      <link>https://bloghugo.iannelson.uk/is-my-string-empty-some-c-performance-metrics/</link>
      <pubDate>Fri, 30 Jul 2004 10:07:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/is-my-string-empty-some-c-performance-metrics/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update (25/02/2006)&lt;/strong&gt; – Hey, we now have &lt;a href=&#34;https://blog.iannelson.uk/string-isnullorempty/&#34;&gt;String.IsNullOrEmpty&lt;/a&gt;, you know!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;What’s the quickest way, in C#, to test whether a string is empty?  This is a question which came to my mind yesterday. I’ve always been fond of:&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;but it occured to me that this necessitates the creation and destruction of a second object (the empty string with which we’re comparing), so maybe it would be quicker to write:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Inheriting From BaseValidator to Make Custom Validation Controls</title>
      <link>https://bloghugo.iannelson.uk/inheriting-from-basevalidator-to-make-custom-validation-controls/</link>
      <pubDate>Wed, 30 Jun 2004 19:06:00 +0000</pubDate>
      <guid>https://bloghugo.iannelson.uk/inheriting-from-basevalidator-to-make-custom-validation-controls/</guid>
      <description>&lt;p&gt;For months now, I’ve been desperate for a decent excuse to make a custom ASP.NET server control, so I was secretly pleased today when a CustomValidator originally coded for use on a single page was required elsewhere.&lt;/p&gt;
&lt;p&gt;It’s surprisingly easy to do, although it took me a while to find a decent example online, which eventually came courtesy of the &lt;a href=&#34;http://www.4guysfromrolla.com/webtech/tips/t040302-1.shtml&#34;&gt;4GuysFromRolla&lt;/a&gt;. In my particular scenario, I needed to check that the text entered into a TextBox did not equal any of a selection of &amp;ldquo;banned&amp;rdquo; strings (which was available via a static property on another class).&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
